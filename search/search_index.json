{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Whombat","text":"<p>Welcome to the Whombat documentation, your go-to resource for understanding and utilizing this open-source audio annotation tool tailored for ML development.</p> <p>If you're eager to dive into using Whombat, explore the User\u00a0Guide for comprehensive instructions.</p>"},{"location":"#why-whombat","title":"Why Whombat?","text":"<p>In the realm of audio analysis tools, numerous options exist, each with its specific strengths. Tools like Raven and Audacity excel at audio analysis but might fall short when it comes to the specialized needs of audio annotation for machine learning development. Whombat bridges this gap by focusing on the following key requirements:</p> <ol> <li> <p>Evolving Datasets: Whombat empowers you to build and manage enduring datasets of audio recordings, accommodating changes and updates as your project evolves.</p> </li> <li> <p>Structured Annotation Projects: Create well-defined annotation projects, complete with clear instructions and tasks.    Track progress and ensure consistency across your team.</p> </li> <li> <p>Annotation Review: Thoroughly examine and validate existing annotations to maintain data quality.</p> </li> <li> <p>Import/Export Flexibility: Import and export annotations in various formats, facilitating collaboration and integration with other tools.</p> </li> <li> <p>Flexible Annotation: Annotate sounds with precision, specifying Regions of Interest (ROIs) using bounding boxes, intervals, or other methods.    Attach rich metadata to annotations, including tags and notes.</p> </li> <li> <p>Sound Exploration: Explore your sound collection to uncover patterns and gain insights.    Facilitate sound identification and classification through interactive tools.</p> </li> <li> <p>Model Comparison: Compare model outputs with human annotations to identify areas where your model is underperforming and pinpoint where additional annotation is needed.</p> </li> </ol> <p>Whombat's design prioritizes careful, manual data curation. We believe this emphasis on precision will enable the community to build gold-standard bioacoustic datasets, fueling the development of cutting-edge machine learning models.</p>"},{"location":"#get-started-quickly","title":"Get started quickly","text":"<p>New to Whombat? Here\u2019s how you can get up and running:</p> <ol> <li>Install\u00a0Whombat: Set up the tool on your machine.</li> <li>Try\u00a0the\u00a0Example\u00a0Data: Take a hands-on tour by importing our example project, it's the fastest way to see Whombat in action.</li> <li>Explore\u00a0the\u00a0User\u00a0Guide: Learn about Core\u00a0Concepts and discover Practical\u00a0Guides\u00a0&amp;\u00a0Workflows for your annotation tasks.</li> <li>Got Questions? Visit our FAQ.</li> </ol>"},{"location":"#for-developers-contributors","title":"For Developers &amp; Contributors","text":"<p>Want to dive deeper into Whombat's internals, integrate it with Python, or contribute back?</p> <ul> <li>Explore the Developer\u00a0Guide (Coming Soon!) for insights into the architecture and development practices.</li> <li>Consult the Reference section for detailed technical documentation.</li> <li>Learn how you can contribute by reading our Contributing\u00a0Guidelines.</li> </ul> <p>Warning</p> <p>Please bear with us, as this documentation is a work in progress, and we're working hard to smooth out any rough edges.</p>"},{"location":"AUTHORS/","title":"Credits","text":""},{"location":"AUTHORS/#development-lead","title":"Development Lead","text":"<ul> <li>Santiago Martinez Balvanera santiago.balvanera.20@ucl.ac.uk</li> </ul>"},{"location":"AUTHORS/#contributors","title":"Contributors","text":"<p>None yet. Why not be the first?</p>"},{"location":"CODE_OF_CONDUCT/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at santiago.balvanera.20@ucl.ac.uk. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"CONTRIBUTING/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"CONTRIBUTING/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/mbsantiago/whombat/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"CONTRIBUTING/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"CONTRIBUTING/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"CONTRIBUTING/#write-documentation","title":"Write Documentation","text":"<p>Whombat could always use more documentation, whether as part of the official Whombat docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"CONTRIBUTING/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/mbsantiago/whombat/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are   welcome :)</li> </ul>"},{"location":"CONTRIBUTING/#get-started","title":"Get Started","text":"<p>Ready to contribute? Here's how to set up <code>whombat</code> for local development.</p> <ol> <li>Fork the <code>whombat</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>git clone git@github.com:your_name_here/whombat.git\n</code></pre> </li> <li> <p>We recommend the use of uv to manage the    dev environment. Once uv is installed</p> <pre><code>uv sync\n</code></pre> </li> <li> <p>Create a branch for local development</p> <pre><code>git checkout -b name-of-your-bugfix-or-feature\n</code></pre> </li> </ol> <p>Now you can make your changes locally.</p> <ol> <li> <p>When you're done making changes, check that your changes pass all lints and    tests.</p> <pre><code>make test\nmake lint\n</code></pre> </li> <li> <p>Commit your changes and push your branch to GitHub</p> <pre><code>git add .\ngit commit -m \"Your detailed description of your changes.\"\ngit push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"CONTRIBUTING/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put your    new functionality into a function with a docstring, and add the feature to    the list in README.rst.</li> <li>The pull request should work for Python 3.12.</li> </ol>"},{"location":"CONTRIBUTING/#tips","title":"Tips","text":"<p>To run a subset of tests</p> <pre><code>uv run pytest tests.test_api\n</code></pre>"},{"location":"sponsors/","title":"Sponsors","text":"<p>Whombat has been developed with the generous support of the Mexican Council of the Humanities, Science and Technology (CONAHCyT; Award Number 2020-000017-02EXTF-00334) and University College London (UCL).</p> <p></p> <p></p>"},{"location":"developer_guide/","title":"Developer Guide","text":"<p>Welcome to the Whombat Developer Guide. This comprehensive resource covers a variety of topics essential for developers:</p> <ol> <li>Quickstart: Learn how to set up a development environment on    your machine quickly.</li> <li>Architecture: Gain insight into the high-level structure    of Whombat, its main components, and how they come together to form the final    application.</li> <li>Database Layer: Explore information about the data stored by    Whombat, its storage configuration, and ways to tailor it to meet specific    requirements.</li> <li>Python API: Discover the convenient Python API provided by Whombat    for interacting with stored data. Use this API to integrate Whombat's outputs    into your Python scripts or create custom annotation workflows.</li> <li>HTTP REST API: Explore the HTTP REST API that all Whombat    instances provide. This allows third parties to safely interact with Whombat    data, enabling the development of alternative frontends or other web    applications for working with annotation data.</li> <li>Front End: Delve into the details of how the Whombat frontend    is constructed.</li> <li>Plugins: Stay tuned for updates on the integration of a plugin    system, offering an easy way to incorporate third-party code into Whombat.    Check here for the latest information.</li> <li>Contributing: Find instructions on how to contribute to    this project and become part of the Whombat community.</li> <li>Code of Conduct: Familiarize yourself with our code    of conduct to maintain a friendly and collaborative environment.</li> </ol>"},{"location":"developer_guide/api/","title":"Whombat Python API","text":""},{"location":"developer_guide/api/#whombat.api","title":"<code>whombat.api</code>","text":"<p>Python API for Whombat.</p> <p>Modules:</p> Name Description <code>annotation_projects</code> <p>Python API for annotation projects.</p> <code>annotation_tasks</code> <p>Python API for interacting with Tasks.</p> <code>audio</code> <p>API functions to load audio.</p> <code>clip_annotations</code> <p>Python API for clip annotations.</p> <code>clip_evaluations</code> <p>API functions to interact with clip evaluations.</p> <code>clip_predictions</code> <p>Python API for managing clip predictions.</p> <code>clips</code> <p>API functions for interacting with audio clips.</p> <code>common</code> <p>Common API functions.</p> <code>datasets</code> <p>API functions for interacting with datasets.</p> <code>evaluation_sets</code> <p>API functions for interacting with evaluation sets.</p> <code>evaluations</code> <p>API functions to interact with evaluations.</p> <code>features</code> <p>API functions to interact with feature names.</p> <code>io</code> <p>Whombat Input Output Module.</p> <code>model_runs</code> <p>API functions to interact with model runs.</p> <code>notes</code> <p>API functions to interact with notes.</p> <code>recordings</code> <p>API functions for interacting with recordings.</p> <code>scatterplots</code> <code>sessions</code> <p>Python API to manage database sessions.</p> <code>sound_event_annotations</code> <p>Python API for sound event annotations.</p> <code>sound_event_evaluations</code> <p>API functions to interact with sound event evaluations.</p> <code>sound_event_predictions</code> <p>Python API for interacting with Predictions.</p> <code>sound_events</code> <p>API functions to interact with sound events.</p> <code>spectrograms</code> <p>API functions to generate spectrograms.</p> <code>tags</code> <p>API functions to interact with tags.</p> <code>user_runs</code> <code>users</code> <p>Whombat Python API to interact with user objects in the database.</p> <p>Functions:</p> Name Description <code>compute_spectrogram</code> <p>Compute a spectrogram for a recording.</p> <code>create_session</code> <p>Create a database session.</p> <code>find_feature</code> <p>Find a feature from a list of features by its name.</p> <code>find_feature_value</code> <p>Find a the value of a feature from a list of features by its name.</p> <code>find_tag</code> <p>Find a tag from a list of tags by its key.</p> <code>find_tag_value</code> <p>Find a the value of a tag from a list of tags by its key.</p> <code>load_audio</code> <p>Load audio.</p> <code>load_clip_bytes</code> <p>Load audio.</p>"},{"location":"developer_guide/api/#whombat.api-functions","title":"Functions","text":""},{"location":"developer_guide/api/#whombat.api.compute_spectrogram","title":"<code>compute_spectrogram(recording, start_time, end_time, audio_parameters, spectrogram_parameters, audio_dir=None)</code>","text":"<p>Compute a spectrogram for a recording.</p> <p>Parameters:</p> Name Type Description Default <code>recording</code> <code>Recording</code> <p>The recording to compute the spectrogram for.</p> required <code>start_time</code> <code>float</code> <p>Start time in seconds.</p> required <code>end_time</code> <code>float</code> <p>End time in seconds.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The directory where the audio files are stored.</p> <code>None</code> <code>spectrogram_parameters</code> <code>SpectrogramParameters</code> <p>Spectrogram parameters.</p> required <p>Returns:</p> Type Description <code>DataArray</code> <p>Spectrogram image.</p>"},{"location":"developer_guide/api/#whombat.api.create_session","title":"<code>create_session(db_url=DEFAULT_DB_URL)</code>  <code>async</code>","text":"<p>Create a database session.</p> <p>This function creates a database session that can be used to interact with the database.</p> <p>It is a context manager, so it can be used with the <code>async with</code> syntax.</p> <p>Parameters:</p> Name Type Description Default <code>db_url</code> <code>str</code> <p>The database URL to use, by default it is set to <code>sqlite+aiosqlite://</code>, which is an in-memory database.</p> <code>DEFAULT_DB_URL</code> <p>Yields:</p> Name Type Description <code>session</code> <code>AsyncSession</code> <p>The database session.</p> <p>Examples:</p> <p>To create a database session, use the <code>async with</code> syntax.</p> <pre><code>async with create_session() as session:\n    # Do stuff with the session\n    # ...\n</code></pre> <p>You can specify a database URL to use.</p> <pre><code>async with create_session(\"sqlite+aiosqlite:///my_db.db\") as session:\n    # Do stuff with the session\n    # ...\n</code></pre> Note <p>This function is asynchronous, so it must be called with the <code>await</code> keyword.</p>"},{"location":"developer_guide/api/#whombat.api.find_feature","title":"<code>find_feature(features, feature_name, default=None)</code>","text":"<p>Find a feature from a list of features by its name.</p> <p>Helper function for finding a feature by name. Returns the first feature with the given name, or a default value if no feature is found.</p> <p>Parameters:</p> Name Type Description Default <code>features</code> <code>Sequence[Feature]</code> <p>The features to search.</p> required <code>feature_name</code> <code>str</code> <p>The name of the feature to find.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the feature is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>feature</code> <code>Feature | None</code> <p>The feature, or the default value if the feature was not found.</p>"},{"location":"developer_guide/api/#whombat.api.find_feature_value","title":"<code>find_feature_value(features, feature_name, default=None)</code>","text":"<p>Find a the value of a feature from a list of features by its name.</p> <p>Parameters:</p> Name Type Description Default <code>features</code> <code>Sequence[Feature]</code> <p>The features to search.</p> required <code>feature_name</code> <code>str</code> <p>The name of the feature to find.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the feature is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>value</code> <code>float | None</code> <p>The feature value, or the default value if the feature was not found.</p>"},{"location":"developer_guide/api/#whombat.api.find_tag","title":"<code>find_tag(tags, key, default=None)</code>","text":"<p>Find a tag from a list of tags by its key.</p> <p>Helper function for finding a tag by key. Returns the first tag with the given key, or a default value if no tag is found.</p> <p>Parameters:</p> Name Type Description Default <code>tags</code> <code>Sequence[Tag]</code> <p>The tags to search.</p> required <code>key</code> <code>str</code> <p>The key to search for.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the tag is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>tag</code> <code>Tag | None</code> <p>The tag, or the default value if the tag was not found.</p>"},{"location":"developer_guide/api/#whombat.api.find_tag_value","title":"<code>find_tag_value(tags, key, default=None)</code>","text":"<p>Find a the value of a tag from a list of tags by its key.</p> <p>Parameters:</p> Name Type Description Default <code>tags</code> <code>Sequence[Tag]</code> <p>The tags to search.</p> required <code>key</code> <code>str</code> <p>The key to search for.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the tag is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>value</code> <code>float | None</code> <p>The tag value, or the default value if the tag was not found.</p>"},{"location":"developer_guide/api/#whombat.api.load_audio","title":"<code>load_audio(recording, start_time=None, end_time=None, audio_dir=None, audio_parameters=None)</code>","text":"<p>Load audio.</p> <p>Parameters:</p> Name Type Description Default <code>recording</code> <code>Recording</code> <p>The recording to load audio from.</p> required <code>start_time</code> <code>float | None</code> <p>Start time in seconds.</p> <code>None</code> <code>end_time</code> <code>float | None</code> <p>End time in seconds.</p> <code>None</code> <code>audio_dir</code> <code>Path | None</code> <p>The directory where the audio files are stored.</p> <code>None</code> <code>audio_parameters</code> <code>AudioParameters | None</code> <p>Audio parameters.</p> <code>None</code> <p>Returns:</p> Type Description <code>bytes</code> <p>Audio data.</p>"},{"location":"developer_guide/api/#whombat.api.load_clip_bytes","title":"<code>load_clip_bytes(path, start, speed=1, frames=8192, time_expansion=1, start_time=None, end_time=None, bit_depth=16)</code>","text":"<p>Load audio.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>The path to the audio file.</p> required <code>start</code> <code>int</code> <p>Start byte.</p> required <code>speed</code> <code>float</code> <p>The factor by which to speed up or slow down the audio. By default, it is 1.</p> <code>1</code> <code>frames</code> <code>int</code> <p>The number of audio frames to read at a time.</p> <code>8192</code> <code>time_expansion</code> <code>float</code> <p>Time expansion factor of the audio. By default, it is 1.</p> <code>1</code> <code>start_time</code> <code>float | None</code> <p>The time in seconds at which to start reading the audio.</p> <code>None</code> <code>end_time</code> <code>float | None</code> <p>The time in seconds at which to stop reading the audio.</p> <code>None</code> <code>bit_depth</code> <code>int</code> <p>The bit depth of the resulting audio. By default, it is 16 bits.</p> <code>16</code> <p>Returns:</p> Type Description <code>bytes</code> <p>Loaded audio data in bytes</p> <code>start</code> <p>Start byte</p> <code>end</code> <p>End byte</p> <code>filesize</code> <p>Total size of clip in bytes.</p>"},{"location":"developer_guide/architecture/","title":"Overall Architecture","text":""},{"location":"developer_guide/code_style/","title":"Code style","text":""},{"location":"developer_guide/code_style/#our-standards","title":"Our Standards","text":"<p>At Whombat, we emphasize code quality and employ various tools to streamline development.</p>"},{"location":"developer_guide/code_style/#code-formatting","title":"Code Formatting","text":"<p>We follow the black style for Python to maintain consistent formatting throughout the project. Additionally, we use isort to organize imports neatly. For the Typescript project, prettier serves as the primary code formatter.</p>"},{"location":"developer_guide/code_style/#linting","title":"Linting","text":"<p>We utilize the following tools for linting and error checking:</p> <ol> <li> <p>Python:</p> </li> <li> <p>Ruff for fast overall error checking</p> </li> <li> <p>Pyright for type checking</p> </li> <li> <p>Typescript:</p> </li> <li>Eslint for linting</li> <li>Tsc for checking Typescript code</li> </ol>"},{"location":"developer_guide/code_style/#documentation","title":"Documentation","text":"<p>We adhere to the Numpy docstring format for documenting Python code. Our documentation is built using mkdocs, providing a clear and organized structure for users and contributors.</p>"},{"location":"developer_guide/database/","title":"Database","text":""},{"location":"developer_guide/quickstart/","title":"Quickstart","text":"<p>While developing, it's often helpful to run development servers that host different parts of the application, or provide specific views, such as the UI components or documentation.</p> <p>These development servers include:</p> <ul> <li>FastAPI Backend Server: Hosts the Python API.</li> <li>Next.js Frontend Server: Builds and serves the user interface.</li> <li>Storybook Server: Allows you to browse and visually inspect all UI components.</li> <li>MkDocs Server: Renders and serves the project documentation.</li> </ul> <p>This guide will show you how to start these servers, allowing you to see how your code changes are reflected in the app in real time.</p> <p>This guide provides two ways to set up your Whombat development environment:</p> <p>Manual Setup: Ideal if you prefer direct control over your development environment and are comfortable managing dependencies.</p> <p>Docker Compose: Streamlines setup and provides a consistent environment.</p>"},{"location":"developer_guide/quickstart/#option-1-manual-setup","title":"Option 1: Manual Setup","text":""},{"location":"developer_guide/quickstart/#pre-requisites","title":"Pre-requisites","text":"<p>Before setting up your Whombat development environment, ensure you have the following tools installed:</p> <ol> <li> <p>Python 3.12: We developed Whombat using this version, but any version greater or equal to 3.11 should be compatible.       Download Python 3.12 here.</p> </li> <li> <p>uv: UV is a Python package dependency manager that we use to manage dependencies for the Python part of Whombat.       Download uv uv.</p> </li> <li> <p>Node.js: We use Node.js to develop and bundle the final JavaScript code for the Whombat frontend.       Download the latest version here.</p> </li> </ol>"},{"location":"developer_guide/quickstart/#set-up","title":"Set Up","text":"<p>After confirming that you have all the prerequisites ready, follow these steps to set up a development environment on your machine.</p> <ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/mbsantiago/whombat.git\n</code></pre> <ol> <li>Navigate to the backend directory and install dependencies:</li> </ol> <pre><code>cd whombat/back\nuv sync --dev\n</code></pre> <ol> <li>Move to the frontend directory and install all dependencies:</li> </ol> <pre><code>cd ../front\nnpm install\n</code></pre> <p>These instructions ensure you have the necessary tools and dependencies to kickstart Whombat development on your local machine.</p>"},{"location":"developer_guide/quickstart/#running-the-development-servers","title":"Running the Development Servers","text":"<ul> <li>Backend: To initiate the backend server, run the following command from the project's root directory:</li> </ul> <pre><code>make serve-back\n</code></pre> <ul> <li>Frontend: To start the frontend development server, run:</li> </ul> <pre><code>make serve-front\n</code></pre> <p>Once both servers are running, navigate to http://localhost:3000 in your web browser to access the Whombat development environment.</p> <ul> <li>Storybook:</li> </ul> <pre><code>make storybook\n</code></pre> <p>Access Storybook at http://localhost:6006.</p> <ul> <li>Documentation Server:</li> </ul> <pre><code>make dev-docs\n</code></pre> <p>View the documentation at http://localhost:8000.</p>"},{"location":"developer_guide/quickstart/#option-2-docker-compose","title":"Option 2: Docker Compose","text":""},{"location":"developer_guide/quickstart/#pre-requisites_1","title":"Pre-requisites","text":"<ul> <li>Docker and Docker Compose: Install them by following the instructions for your operating system on the official Docker website.</li> </ul>"},{"location":"developer_guide/quickstart/#set-up_1","title":"Set Up","text":"<p>Once you have Docker Compose installed, follow these steps:</p> <ol> <li>Clone the Repository</li> </ol> <pre><code>git clone https://github.com/mbsantiago/whombat.git\n</code></pre> <ol> <li>Navigate to the Project Directory</li> </ol> <pre><code>cd whombat\n</code></pre>"},{"location":"developer_guide/quickstart/#run-services","title":"Run Services","text":"<ul> <li>Backend and Frontend:</li> </ul> <pre><code>docker-compose -f compose.dev.yaml up backend frontend\n</code></pre> <p>Access the Whombat development environment at http://localhost:3000</p> <ul> <li>Storybook:</li> </ul> <pre><code>docker-compose -f compose.dev.yaml up storybook\n</code></pre> <p>Access Storybook at http://localhost:6006.</p> <ul> <li>Documentation Server:</li> </ul> <pre><code>docker-compose -f compose.dev.yaml up docs\n</code></pre> <p>View the documentation at http://localhost:8000.</p> <ul> <li>All Services: <pre><code>docker-compose -f compose.dev.yaml up\n</code></pre></li> </ul>"},{"location":"developer_guide/rest_api/","title":"HTTP REST API","text":""},{"location":"reference/api/","title":"Whombat Python API","text":"<p>Welcome to the Whombat Python API reference page. This section provides a comprehensive guide to all the functions available through the <code>whombat.api</code> module, designed to simplify the use of Whombat objects without the need to handle the intricacies of SQLAlchemy internals.</p> <p>The API is organized into distinct submodules, each corresponding to a crucial data object within Whombat. Each sub-API contains functions tailored for interactions with that specific type of object.</p>"},{"location":"reference/api/#getting-started","title":"Getting Started","text":"<p>To get started, follow the example below, which demonstrates how to use these functions:</p> <pre><code>from whombat import api\n\nasync def main():\n    # Create a session\n    async with api.create_session() as session:\n        # Example 1: Get or create a tag\n        tag = await api.tags.get_or_create(session, key=\"species\", value=\"Myotis myotis\")\n\n        # Example 2: Retrieve a recording by path\n        recording = await api.recordings.get_by_path(session, path=\"&lt;path_to_file&gt;\")\n\n        # Example 3: Add a tag to a recording\n        recording = await api.recordings.add_tag(session, recording, tag)\n</code></pre> <p>Async functions</p> <p>Most functions in the Whombat API are asynchronous. This design choice enhances code efficiency, particularly since many operations involve database transactions that can potentially slow down the program if executed synchronously.</p> <p>On this page, you can explore all the submodules available and the functions they provide. It's worth noting that each submodule is an instance of a BaseAPI class, which manages an internal cache to minimize unnecessary database queries. To access the reference for a specific submodule, such as <code>api.sound_events</code>, please consult the corresponding class, in this case, <code>SoundEventAPI</code>, to discover all the available functions.</p>"},{"location":"reference/api/#whombat.api","title":"<code>whombat.api</code>","text":"<p>Python API for Whombat.</p> <p>Modules:</p> Name Description <code>annotation_projects</code> <p>Python API for annotation projects.</p> <code>annotation_tasks</code> <p>Python API for interacting with Tasks.</p> <code>audio</code> <p>API functions to load audio.</p> <code>clip_annotations</code> <p>Python API for clip annotations.</p> <code>clip_evaluations</code> <p>API functions to interact with clip evaluations.</p> <code>clip_predictions</code> <p>Python API for managing clip predictions.</p> <code>clips</code> <p>API functions for interacting with audio clips.</p> <code>common</code> <p>Common API functions.</p> <code>datasets</code> <p>API functions for interacting with datasets.</p> <code>evaluation_sets</code> <p>API functions for interacting with evaluation sets.</p> <code>evaluations</code> <p>API functions to interact with evaluations.</p> <code>features</code> <p>API functions to interact with feature names.</p> <code>io</code> <p>Whombat Input Output Module.</p> <code>model_runs</code> <p>API functions to interact with model runs.</p> <code>notes</code> <p>API functions to interact with notes.</p> <code>recordings</code> <p>API functions for interacting with recordings.</p> <code>scatterplots</code> <code>sessions</code> <p>Python API to manage database sessions.</p> <code>sound_event_annotations</code> <p>Python API for sound event annotations.</p> <code>sound_event_evaluations</code> <p>API functions to interact with sound event evaluations.</p> <code>sound_event_predictions</code> <p>Python API for interacting with Predictions.</p> <code>sound_events</code> <p>API functions to interact with sound events.</p> <code>spectrograms</code> <p>API functions to generate spectrograms.</p> <code>tags</code> <p>API functions to interact with tags.</p> <code>user_runs</code> <code>users</code> <p>Whombat Python API to interact with user objects in the database.</p> <p>Functions:</p> Name Description <code>compute_spectrogram</code> <p>Compute a spectrogram for a recording.</p> <code>create_session</code> <p>Create a database session.</p> <code>find_feature</code> <p>Find a feature from a list of features by its name.</p> <code>find_feature_value</code> <p>Find a the value of a feature from a list of features by its name.</p> <code>find_tag</code> <p>Find a tag from a list of tags by its key.</p> <code>find_tag_value</code> <p>Find a the value of a tag from a list of tags by its key.</p> <code>load_audio</code> <p>Load audio.</p> <code>load_clip_bytes</code> <p>Load audio.</p>"},{"location":"reference/api/#whombat.api-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.compute_spectrogram","title":"<code>compute_spectrogram(recording, start_time, end_time, audio_parameters, spectrogram_parameters, audio_dir=None)</code>","text":"<p>Compute a spectrogram for a recording.</p> <p>Parameters:</p> Name Type Description Default <code>recording</code> <code>Recording</code> <p>The recording to compute the spectrogram for.</p> required <code>start_time</code> <code>float</code> <p>Start time in seconds.</p> required <code>end_time</code> <code>float</code> <p>End time in seconds.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The directory where the audio files are stored.</p> <code>None</code> <code>spectrogram_parameters</code> <code>SpectrogramParameters</code> <p>Spectrogram parameters.</p> required <p>Returns:</p> Type Description <code>DataArray</code> <p>Spectrogram image.</p>"},{"location":"reference/api/#whombat.api.create_session","title":"<code>create_session(db_url=DEFAULT_DB_URL)</code>  <code>async</code>","text":"<p>Create a database session.</p> <p>This function creates a database session that can be used to interact with the database.</p> <p>It is a context manager, so it can be used with the <code>async with</code> syntax.</p> <p>Parameters:</p> Name Type Description Default <code>db_url</code> <code>str</code> <p>The database URL to use, by default it is set to <code>sqlite+aiosqlite://</code>, which is an in-memory database.</p> <code>DEFAULT_DB_URL</code> <p>Yields:</p> Name Type Description <code>session</code> <code>AsyncSession</code> <p>The database session.</p> <p>Examples:</p> <p>To create a database session, use the <code>async with</code> syntax.</p> <pre><code>async with create_session() as session:\n    # Do stuff with the session\n    # ...\n</code></pre> <p>You can specify a database URL to use.</p> <pre><code>async with create_session(\"sqlite+aiosqlite:///my_db.db\") as session:\n    # Do stuff with the session\n    # ...\n</code></pre> Note <p>This function is asynchronous, so it must be called with the <code>await</code> keyword.</p>"},{"location":"reference/api/#whombat.api.find_feature","title":"<code>find_feature(features, feature_name, default=None)</code>","text":"<p>Find a feature from a list of features by its name.</p> <p>Helper function for finding a feature by name. Returns the first feature with the given name, or a default value if no feature is found.</p> <p>Parameters:</p> Name Type Description Default <code>features</code> <code>Sequence[Feature]</code> <p>The features to search.</p> required <code>feature_name</code> <code>str</code> <p>The name of the feature to find.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the feature is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>feature</code> <code>Feature | None</code> <p>The feature, or the default value if the feature was not found.</p>"},{"location":"reference/api/#whombat.api.find_feature_value","title":"<code>find_feature_value(features, feature_name, default=None)</code>","text":"<p>Find a the value of a feature from a list of features by its name.</p> <p>Parameters:</p> Name Type Description Default <code>features</code> <code>Sequence[Feature]</code> <p>The features to search.</p> required <code>feature_name</code> <code>str</code> <p>The name of the feature to find.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the feature is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>value</code> <code>float | None</code> <p>The feature value, or the default value if the feature was not found.</p>"},{"location":"reference/api/#whombat.api.find_tag","title":"<code>find_tag(tags, key, default=None)</code>","text":"<p>Find a tag from a list of tags by its key.</p> <p>Helper function for finding a tag by key. Returns the first tag with the given key, or a default value if no tag is found.</p> <p>Parameters:</p> Name Type Description Default <code>tags</code> <code>Sequence[Tag]</code> <p>The tags to search.</p> required <code>key</code> <code>str</code> <p>The key to search for.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the tag is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>tag</code> <code>Tag | None</code> <p>The tag, or the default value if the tag was not found.</p>"},{"location":"reference/api/#whombat.api.find_tag_value","title":"<code>find_tag_value(tags, key, default=None)</code>","text":"<p>Find a the value of a tag from a list of tags by its key.</p> <p>Parameters:</p> Name Type Description Default <code>tags</code> <code>Sequence[Tag]</code> <p>The tags to search.</p> required <code>key</code> <code>str</code> <p>The key to search for.</p> required <code>default</code> <code>Any</code> <p>The default value to return if the tag is not found.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>value</code> <code>float | None</code> <p>The tag value, or the default value if the tag was not found.</p>"},{"location":"reference/api/#whombat.api.load_audio","title":"<code>load_audio(recording, start_time=None, end_time=None, audio_dir=None, audio_parameters=None)</code>","text":"<p>Load audio.</p> <p>Parameters:</p> Name Type Description Default <code>recording</code> <code>Recording</code> <p>The recording to load audio from.</p> required <code>start_time</code> <code>float | None</code> <p>Start time in seconds.</p> <code>None</code> <code>end_time</code> <code>float | None</code> <p>End time in seconds.</p> <code>None</code> <code>audio_dir</code> <code>Path | None</code> <p>The directory where the audio files are stored.</p> <code>None</code> <code>audio_parameters</code> <code>AudioParameters | None</code> <p>Audio parameters.</p> <code>None</code> <p>Returns:</p> Type Description <code>bytes</code> <p>Audio data.</p>"},{"location":"reference/api/#whombat.api.load_clip_bytes","title":"<code>load_clip_bytes(path, start, speed=1, frames=8192, time_expansion=1, start_time=None, end_time=None, bit_depth=16)</code>","text":"<p>Load audio.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>The path to the audio file.</p> required <code>start</code> <code>int</code> <p>Start byte.</p> required <code>speed</code> <code>float</code> <p>The factor by which to speed up or slow down the audio. By default, it is 1.</p> <code>1</code> <code>frames</code> <code>int</code> <p>The number of audio frames to read at a time.</p> <code>8192</code> <code>time_expansion</code> <code>float</code> <p>Time expansion factor of the audio. By default, it is 1.</p> <code>1</code> <code>start_time</code> <code>float | None</code> <p>The time in seconds at which to start reading the audio.</p> <code>None</code> <code>end_time</code> <code>float | None</code> <p>The time in seconds at which to stop reading the audio.</p> <code>None</code> <code>bit_depth</code> <code>int</code> <p>The bit depth of the resulting audio. By default, it is 16 bits.</p> <code>16</code> <p>Returns:</p> Type Description <code>bytes</code> <p>Loaded audio data in bytes</p> <code>start</code> <p>Start byte</p> <code>end</code> <p>End byte</p> <code>filesize</code> <p>Total size of clip in bytes.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI","title":"<code>whombat.api.users.UserAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, User, SimpleUser, UserCreate, UserUpdate]</code></p> <p>API to interact with user objects in the database.</p> <p>Methods:</p> Name Description <code>create</code> <p>Create a user.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Get or create a user from a soundevent user object.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_by_email</code> <p>Get a user by email.</p> <code>get_by_username</code> <p>Get a user by username.</p> <code>get_many</code> <p>Get many objects.</p> <code>to_soundevent</code> <p>Convert a user instance to soundevent object.</p> <code>update</code> <p>Update a user.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.users.UserAPI.create","title":"<code>create(session, username, password, email, name=None, is_active=True, is_superuser=False)</code>  <code>async</code>","text":"<p>Create a user.</p> <p>This function creates a user in the database.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>username</code> <code>str</code> <p>The username of the user.</p> required <code>password</code> <code>str</code> <p>The password of the user.</p> required <code>email</code> <code>str</code> <p>The email of the user.</p> required <code>name</code> <code>str | None</code> <p>The users full name.</p> <code>None</code> <code>is_active</code> <code>bool</code> <p>Whether the user is active. This means that the user can log in. By default, this is set to True.</p> <code>True</code> <code>is_superuser</code> <code>bool</code> <p>Whether the user is a superuser. This means that the user can perform all actions.</p> <code>False</code> <p>Returns:</p> Name Type Description <code>user</code> <code>User</code> <p>Raises:</p> Type Description <code>UserAlreadyExists</code> <p>If a user with the same username or email already exists.</p> <p>Examples:</p> <p>To create a user:</p> <pre><code>    async with create_session() as session:\n        user = await create_user(\n            session,\n            username=\"username\",\n            password=\"password\",\n            email=\"email\",\n        )\n</code></pre>"},{"location":"reference/api/#whombat.api.users.UserAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.users.UserAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.users.UserAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Get or create a user from a soundevent user object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>data</code> <code>User</code> <p>The soundevent user object to get or create.</p> required <p>Returns:</p> Name Type Description <code>user</code> <code>User</code> <p>The user object.</p> <p>Raises:</p> Type Description <code>DuplicateObjectError</code> <p>If a user with the same username or email already exists.</p> Notes <p>If no user with the same username, email or UUID exists, a new user will be created with a random password and marked as inactive.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.get_by_email","title":"<code>get_by_email(session, email)</code>  <code>async</code>","text":"<p>Get a user by email.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>email</code> <code>str</code> <p>The email to use.</p> required <p>Returns:</p> Name Type Description <code>user</code> <code>User</code> <p>Raises:</p> Type Description <code>NotFoundError</code>"},{"location":"reference/api/#whombat.api.users.UserAPI.get_by_username","title":"<code>get_by_username(session, username)</code>  <code>async</code>","text":"<p>Get a user by username.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>username</code> <code>str</code> <p>The username to use.</p> required <p>Returns:</p> Name Type Description <code>user</code> <code>User</code> <p>Raises:</p> Type Description <code>NotFoundError</code>"},{"location":"reference/api/#whombat.api.users.UserAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.to_soundevent","title":"<code>to_soundevent(obj)</code>","text":"<p>Convert a user instance to soundevent object.</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>SimpleUser</code> <p>The user to get the data from.</p> required <p>Returns:</p> Name Type Description <code>user</code> <code>User</code> <p>The soundevent user object.</p>"},{"location":"reference/api/#whombat.api.users.UserAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update a user.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>SimpleUser</code> <p>The user to update.</p> required <code>data</code> <code>UserUpdate</code> <p>The data to update the user with.</p> required <p>Returns:</p> Name Type Description <code>user</code> <code>User</code> <p>The updated user.</p> <p>Raises:</p> Type Description <code>NoResultFound</code> <p>If no user with the given id exists.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI","title":"<code>whombat.api.tags.TagAPI()</code>","text":"<p>               Bases: <code>BaseAPI[tuple[str, str], Tag, Tag, TagCreate, TagUpdate]</code></p> <p>Methods:</p> Name Description <code>count_by_clip_annotation</code> <code>count_by_recording</code> <code>count_by_sound_event_annotation</code> <code>create</code> <p>Create a tag.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a tag from a soundevent Tag object.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip_annotation_tags</code> <code>get_many</code> <p>Get many objects.</p> <code>get_or_create</code> <p>Get a tag by its key and value, or create it if it does not exist.</p> <code>get_recording_tags</code> <code>get_sound_event_annotation_tags</code> <code>to_soundevent</code> <p>Create a soundevent Tag object from a tag.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.count_by_clip_annotation","title":"<code>count_by_clip_annotation(session, *, limit=1000, offset=0, filters=None, sort_by='-counts')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.count_by_recording","title":"<code>count_by_recording(session, *, limit=1000, offset=0, filters=None, sort_by='-counts')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.count_by_sound_event_annotation","title":"<code>count_by_sound_event_annotation(session, *, limit=1000, offset=0, filters=None, sort_by='-counts')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.create","title":"<code>create(session, key, value, **kwargs)</code>  <code>async</code>","text":"<p>Create a tag.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>key</code> <code>str</code> <p>The tag key.</p> required <code>value</code> <code>str</code> <p>The tag value.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The tag.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.tags.TagAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.from_soundevent","title":"<code>from_soundevent(session, tag)</code>  <code>async</code>","text":"<p>Create a tag from a soundevent Tag object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>tag</code> <code>Tag</code> <p>The soundevent tag object.</p> required <p>Returns:</p> Type Description <code>TagCreate</code> <p>The tag.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.get_clip_annotation_tags","title":"<code>get_clip_annotation_tags(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.get_or_create","title":"<code>get_or_create(session, key, value)</code>  <code>async</code>","text":"<p>Get a tag by its key and value, or create it if it does not exist.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>key</code> <code>str</code> <p>The tag key.</p> required <code>value</code> <code>str</code> <p>The tag value.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The tag.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.get_recording_tags","title":"<code>get_recording_tags(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.get_sound_event_annotation_tags","title":"<code>get_sound_event_annotation_tags(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.tags.TagAPI.to_soundevent","title":"<code>to_soundevent(tag)</code>","text":"<p>Create a soundevent Tag object from a tag.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>Tag</code> <p>The tag.</p> required <p>Returns:</p> Type Description <code>Tag</code> <p>The soundevent tag object.</p>"},{"location":"reference/api/#whombat.api.tags.TagAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI","title":"<code>whombat.api.features.FeatureNameAPI()</code>","text":"<p>               Bases: <code>BaseAPI[str, FeatureName, FeatureName, FeatureNameCreate, FeatureNameUpdate]</code></p> <p>API for interacting with feature names.</p> <p>Methods:</p> Name Description <code>create</code> <p>Create a feature name.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a feature from a soundevent Feature object.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_feature</code> <p>Get a feature object.</p> <code>get_many</code> <p>Get many objects.</p> <code>get_or_create</code> <p>Get or create a feature name.</p> <code>to_soundevent</code> <p>Create a soundevent Feature object from a feature.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.create","title":"<code>create(session, name, **kwargs)</code>  <code>async</code>","text":"<p>Create a feature name.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>name</code> <code>str</code> <p>The name of the feature.</p> required <p>Returns:</p> Type Description <code>FeatureName</code> <p>The feature name.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create a feature from a soundevent Feature object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>Feature</code> <p>The soundevent feature object.</p> required <p>Returns:</p> Type Description <code>FeatureCreate</code> <p>The feature.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.get_feature","title":"<code>get_feature(session, name, value)</code>  <code>async</code>","text":"<p>Get a feature object.</p> <p>Will create the feature name if it does not exist.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>name</code> <code>str</code> <p>The name of the feature.</p> required <code>value</code> <code>float</code> <p>The value of the feature.</p> required <p>Returns:</p> Type Description <code>FeatureName</code> <p>The feature name.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.get_or_create","title":"<code>get_or_create(session, name)</code>  <code>async</code>","text":"<p>Get or create a feature name.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>name</code> <code>str</code> <p>The name of the feature.</p> required <p>Returns:</p> Type Description <code>FeatureName</code> <p>The feature name.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.to_soundevent","title":"<code>to_soundevent(feature)</code>","text":"<p>Create a soundevent Feature object from a feature.</p> <p>Parameters:</p> Name Type Description Default <code>feature</code> <code>Feature</code> <p>The feature.</p> required <p>Returns:</p> Type Description <code>Feature</code> <p>The soundevent feature object.</p>"},{"location":"reference/api/#whombat.api.features.FeatureNameAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI","title":"<code>whombat.api.notes.NoteAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, Note, Note, NoteCreate, NoteUpdate]</code></p> <p>Methods:</p> Name Description <code>create</code> <p>Create a note.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a note from a soundevent Note object.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip_annotation_notes</code> <code>get_many</code> <p>Get many objects.</p> <code>get_recording_notes</code> <code>get_sound_event_annotation_notes</code> <code>to_soundevent</code> <p>Create a soundevent Note object from a note.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.notes.NoteAPI.create","title":"<code>create(session, message, is_issue=False, created_by=None, **kwargs)</code>  <code>async</code>","text":"<p>Create a note.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>message</code> <code>str</code> <p>The note message.</p> required <code>is_issue</code> <code>bool</code> <p>Whether the note is an issue. Defaults to False. Used to indicate that the note is an issue that needs to be resolved.</p> <code>False</code> <code>created_by</code> <code>SimpleUser | None</code> <p>The user that created the note. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to use when creating the note, (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>note</code> <code>Note</code> <p>The created note.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.notes.NoteAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.notes.NoteAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create a note from a soundevent Note object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>data</code> <code>Note</code> <p>The soundevent Note object.</p> required <p>Returns:</p> Name Type Description <code>note</code> <code>Note</code> <p>The created note.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.get_clip_annotation_notes","title":"<code>get_clip_annotation_notes(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.notes.NoteAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.get_recording_notes","title":"<code>get_recording_notes(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.notes.NoteAPI.get_sound_event_annotation_notes","title":"<code>get_sound_event_annotation_notes(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.notes.NoteAPI.to_soundevent","title":"<code>to_soundevent(obj)</code>","text":"<p>Create a soundevent Note object from a note.</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Note</code> <p>The note.</p> required <p>Returns:</p> Name Type Description <code>note</code> <code>Note</code> <p>The soundevent Note object.</p>"},{"location":"reference/api/#whombat.api.notes.NoteAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI","title":"<code>whombat.api.recordings.RecordingAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, Recording, Recording, RecordingCreate, RecordingUpdate]</code></p> <p>Methods:</p> Name Description <code>add_feature</code> <p>Add a feature to a recording.</p> <code>add_note</code> <p>Add a note to a recording.</p> <code>add_owner</code> <p>Add an owner to a recording.</p> <code>add_tag</code> <p>Add a tag to a recording.</p> <code>adjust_time_expansion</code> <p>Adjust the time expansion of a recording.</p> <code>create</code> <p>Create a recording.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create recordings.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a recording from a soundevent.Recording.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_by_hash</code> <p>Get a recording by hash.</p> <code>get_by_path</code> <p>Get a recording by path.</p> <code>get_many</code> <p>Get many objects.</p> <code>get_media_info</code> <code>remove_feature</code> <p>Remove a feature from a recording.</p> <code>remove_note</code> <p>Remove a note from a recording.</p> <code>remove_owner</code> <p>Remove an owner from a recording.</p> <code>remove_tag</code> <p>Remove a tag from a recording.</p> <code>to_soundevent</code> <p>Create a soundevent.Recording from a recording.</p> <code>update</code> <p>Update a recording.</p> <code>update_feature</code> <p>Update a feature of a recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.add_feature","title":"<code>add_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Add a feature to a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to add the feature to.</p> required <code>feature</code> <code>Feature</code> <p>The feature to add.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.add_note","title":"<code>add_note(session, obj, note)</code>  <code>async</code>","text":"<p>Add a note to a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to add the note to.</p> required <code>note</code> <code>Note</code> <p>The note to add.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.add_owner","title":"<code>add_owner(session, obj, owner)</code>  <code>async</code>","text":"<p>Add an owner to a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to add the owner to.</p> required <code>owner</code> <code>SimpleUser</code> <p>The owner to add.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.add_tag","title":"<code>add_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Add a tag to a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to add the tag to.</p> required <code>tag</code> <code>Tag</code> <p>The tag to add.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.adjust_time_expansion","title":"<code>adjust_time_expansion(session, obj, time_expansion)</code>  <code>async</code>","text":"<p>Adjust the time expansion of a recording.</p> <p>When the time expansion of a recording is adjusted several associated entities must be updated to reflect the new time expansion. Firstly the duration and samplerate of the recording must be updated. Secondly, the time and frequency coordinates of all associated objects must be updated.</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Recording</code> <p>The recording to adjust.</p> required <code>time_expansion</code> <code>float</code> <p>The new time expansion.</p> required"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.create","title":"<code>create(session, path, date=None, time=None, latitude=None, longitude=None, time_expansion=1.0, rights=None, audio_dir=None, **kwargs)</code>  <code>async</code>","text":"<p>Create a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>path</code> <code>Path</code> <p>The path to the audio file. This should be relative to the current working directory, or an absolute path.</p> required <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>None</code> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>None</code> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording site.</p> <code>None</code> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording site.</p> <code>None</code> <code>time_expansion</code> <code>float</code> <p>Some recordings may be time expanded or time compressed. This value is the factor by which the recording is expanded or compressed. The default value is 1.0.</p> <code>1.0</code> <code>rights</code> <code>str | None</code> <p>A string describing the usage rights of the recording.</p> <code>None</code> <code>audio_dir</code> <code>Path | None</code> <p>The root directory for audio files. If not given, it will default to the value of <code>settings.audio_dir</code>.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to use when creating the recording, (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The created recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.create_many","title":"<code>create_many(session, data, audio_dir=None)</code>  <code>async</code>","text":"<p>Create recordings.</p> <p>If you want to create a single recording, use <code>create_recording</code>. However if you want to create multiple recordings, it is more efficient to use this function.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to create the recordings with.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root directory for audio files. If not given, it will default to the value of <code>settings.audio_dir</code>.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>recordings</code> <code>list[Recording]</code> <p>The created recordings.</p> Notes <p>This function will only create recordings for files that: - are audio files (according to <code>files.is_audio_file</code>) - media info can be extracted from it. - do not already exist in the database.</p> <p>Any files that do not meet these criteria will be silently ignored.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.from_soundevent","title":"<code>from_soundevent(session, recording, audio_dir=None)</code>  <code>async</code>","text":"<p>Create a recording from a soundevent.Recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>recording</code> <code>Recording</code> <p>The soundevent.Recording to create the recording from.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root directory for audio files. If not given, it will default to the value of <code>settings.audio_dir</code>.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The created recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.get_by_hash","title":"<code>get_by_hash(session, recording_hash)</code>  <code>async</code>","text":"<p>Get a recording by hash.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>recording_hash</code> <code>str</code> <p>The hash of the recording.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The recording.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If a recording with the given hash does not exist.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.get_by_path","title":"<code>get_by_path(session, recording_path)</code>  <code>async</code>","text":"<p>Get a recording by path.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>recording_path</code> <code>Path</code> <p>The path of the recording.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The recording.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If a recording with the given path does not exist.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.get_media_info","title":"<code>get_media_info(session, recording_uuid, audio_dir=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.remove_feature","title":"<code>remove_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Remove a feature from a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to remove the feature from.</p> required <code>feature</code> <code>Feature</code> <p>The feature to remove.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.remove_note","title":"<code>remove_note(session, obj, note)</code>  <code>async</code>","text":"<p>Remove a note from a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to remove the note from.</p> required <code>note</code> <code>Note</code> <p>The note to remove.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.remove_owner","title":"<code>remove_owner(session, obj, owner)</code>  <code>async</code>","text":"<p>Remove an owner from a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to remove the owner from.</p> required <code>owner</code> <code>SimpleUser</code> <p>The owner to remove.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to remove the tag from.</p> required <code>tag</code> <code>Tag</code> <p>The tag to remove.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.to_soundevent","title":"<code>to_soundevent(recording, audio_dir=None)</code>","text":"<p>Create a soundevent.Recording from a recording.</p> <p>Parameters:</p> Name Type Description Default <code>recording</code> <code>Recording</code> <p>The recording to create the soundevent.Recording from.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root directory for audio files. If not given, it will default to the value of <code>settings.audio_dir</code>.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The created soundevent.Recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.update","title":"<code>update(session, obj, data, audio_dir=None)</code>  <code>async</code>","text":"<p>Update a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to update.</p> required <code>data</code> <code>RecordingUpdate</code> <p>The data to update the recording with.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root directory for audio files. If not given, it will default to the value of <code>settings.audio_dir</code>.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.recordings.RecordingAPI.update_feature","title":"<code>update_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Update a feature of a recording.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Recording</code> <p>The recording to update the feature of.</p> required <code>feature</code> <code>Feature</code> <p>The feature to update.</p> required <p>Returns:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The updated recording.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI","title":"<code>whombat.api.datasets.DatasetAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, Dataset, Dataset, DatasetCreate, DatasetUpdate]</code></p> <p>Methods:</p> Name Description <code>add_file</code> <p>Add a file to a dataset.</p> <code>add_recording</code> <p>Add a recording to a dataset.</p> <code>add_recordings</code> <p>Add recordings to a dataset.</p> <code>create</code> <p>Create a dataset.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>export_dataset</code> <code>find</code> <code>from_soundevent</code> <p>Create a dataset from a soundevent dataset.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_by_audio_dir</code> <p>Get a dataset by audio directory.</p> <code>get_by_name</code> <p>Get a dataset by name.</p> <code>get_many</code> <p>Get many objects.</p> <code>get_recordings</code> <p>Get all recordings of a dataset.</p> <code>get_state</code> <p>Compute the state of the dataset recordings.</p> <code>import_dataset</code> <code>to_dataframe</code> <p>Convert a dataset to a pandas DataFrame.</p> <code>to_soundevent</code> <p>Create a soundevent dataset from a dataset.</p> <code>update</code> <p>Update a dataset.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.add_file","title":"<code>add_file(session, obj, path, date=None, time=None, latitude=None, longitude=None, time_expansion=1.0, rights=None, audio_dir=None)</code>  <code>async</code>","text":"<p>Add a file to a dataset.</p> <p>This function adds a file to a dataset. The file is registered as a recording and is added to the dataset. If the file is already registered in the database, it is only added to the dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The dataset to add the file to.</p> required <code>path</code> <code>Path</code> <p>The path to the audio file. This should be relative to the current working directory, or an absolute path.</p> required <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>None</code> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>None</code> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording site.</p> <code>None</code> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording site.</p> <code>None</code> <code>time_expansion</code> <code>float</code> <p>Some recordings may be time expanded or time compressed. This value is the factor by which the recording is expanded or compressed. The default value is 1.0.</p> <code>1.0</code> <code>rights</code> <code>str | None</code> <p>A string describing the usage rights of the recording.</p> <code>None</code> <code>audio_dir</code> <code>Path | None</code> <p>The root audio directory, by default None. If None, the root audio directory from the settings will be used.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>recording</code> <code>DatasetRecording</code> <p>The recording that was added to the dataset.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the file does not exist.</p> <code>ValueError</code> <p>If the file is not part of the dataset audio directory.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.add_recording","title":"<code>add_recording(session, obj, recording)</code>  <code>async</code>","text":"<p>Add a recording to a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The dataset to add the recording to.</p> required <code>recording</code> <code>Recording</code> <p>The recording to add to the dataset.</p> required <p>Returns:</p> Name Type Description <code>dataset_recording</code> <code>DatasetRecording</code> <p>The dataset recording that was created.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the recording is not part of the dataset audio directory.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.add_recordings","title":"<code>add_recordings(session, obj, recordings)</code>  <code>async</code>","text":"<p>Add recordings to a dataset.</p> <p>Use this function to efficiently add multiple recordings to a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The dataset to add the recordings to.</p> required <code>recordings</code> <code>Sequence[Recording]</code> <p>The recordings to add to the dataset.</p> required"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.create","title":"<code>create(session, name, dataset_dir, description=None, audio_dir=None, **kwargs)</code>  <code>async</code>","text":"<p>Create a dataset.</p> <p>This function will create a dataset and populate it with the audio files found in the given directory. It will look recursively for audio files within the directory.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>name</code> <code>str</code> <p>The name of the dataset.</p> required <code>dataset_dir</code> <code>Path</code> <p>The directory of the dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of the dataset, by default None.</p> <code>None</code> <code>audio_dir</code> <code>Path | None</code> <p>The root audio directory, by default None. If None, the root audio directory from the settings will be used.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>If a dataset with the given name or audio directory already exists.</p> <code>ValidationError</code> <p>If the given audio directory does not exist.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.export_dataset","title":"<code>export_dataset(session, dataset, audio_dir=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.from_soundevent","title":"<code>from_soundevent(session, data, dataset_audio_dir=None, audio_dir=None)</code>  <code>async</code>","text":"<p>Create a dataset from a soundevent dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>data</code> <code>Dataset</code> <p>The soundevent dataset.</p> required <code>dataset_audio_dir</code> <code>Path | None</code> <p>The audio directory of the dataset, by default None. If None, the audio directory from the settings will be used.</p> <code>None</code> <code>audio_dir</code> <code>Path | None</code> <p>The root audio directory, by default None. If None, the root audio directory from the settings will be used.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <p>The dataset.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.get_by_audio_dir","title":"<code>get_by_audio_dir(session, audio_dir)</code>  <code>async</code>","text":"<p>Get a dataset by audio directory.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>audio_dir</code> <code>Path</code> <p>The audio directory of the dataset to get.</p> required <p>Returns:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If no dataset with the given audio directory exists.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.get_by_name","title":"<code>get_by_name(session, name)</code>  <code>async</code>","text":"<p>Get a dataset by name.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>name</code> <code>str</code> <p>The name of the dataset to get.</p> required <p>Returns:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If no dataset with the given name exists.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.get_recordings","title":"<code>get_recordings(session, obj, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get all recordings of a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The ID of the dataset to get the recordings of.</p> required <code>limit</code> <code>int</code> <p>The maximum number of recordings to return, by default 1000. If set to -1, all recordings will be returned.</p> <code>1000</code> <code>offset</code> <code>int</code> <p>The number of recordings to skip, by default 0.</p> <code>0</code> <code>filters</code> <code>Sequence[Filter] | None</code> <p>A list of filters to apply to the query, by default None.</p> <code>None</code> <code>sort_by</code> <code>str | None</code> <p>The column to sort the recordings by, by default None.</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>recordings</code> <code>list[DatasetRecording]</code> <code>count</code> <code>int</code> <p>The total number of recordings in the dataset.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.get_state","title":"<code>get_state(session, obj, audio_dir=None)</code>  <code>async</code>","text":"<p>Compute the state of the dataset recordings.</p> <p>The dataset directory is scanned for audio files and compared to the registered dataset recordings in the database. The following states are possible:</p> <ul> <li> <p><code>missing</code>: A file is registered in the database and but is missing.</p> </li> <li> <p><code>registered</code>: A file is registered in the database and is present.</p> </li> <li> <p><code>unregistered</code>: A file is not registered in the database but is     present in the dataset directory.</p> </li> </ul> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The dataset to get the state of.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root audio directory, by default None. If None, the root audio directory from the settings will be used.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>files</code> <code>list[DatasetFile]</code>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.import_dataset","title":"<code>import_dataset(session, dataset, dataset_audio_dir, audio_dir=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.to_dataframe","title":"<code>to_dataframe(session, dataset)</code>  <code>async</code>","text":"<p>Convert a dataset to a pandas DataFrame.</p> <p>Generates a DataFrame containing information about the recordings in the dataset. The DataFrame includes the following columns: 'uuid', 'hash', 'path', 'samplerate', 'duration', 'channels', 'time_expansion', 'date', 'time', 'latitude', 'longitude', 'rights'.</p> <p>Owners, tags, and features receive special treatment. Owners are concatenated into a string with the format 'user1:user2:user3'. Each tag is added as a column with the name 'tag_', and features as 'feature_'. <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>dataset</code> <code>Dataset</code> <p>The dataset to convert to a DataFrame.</p> required <p>Returns:</p> Name Type Description <code>df</code> <code>DataFrame</code> <p>The dataset as a DataFrame.</p> Notes <p>The encoding of the dataset as a DataFrame is not lossless. Notes are excluded from the DataFrame, and there is no way to recover all owner information from the concatenated string of usernames. For full dataset recovery, use the <code>to_soundevent</code> method instead, returning a sound event dataset that can be exported to a JSON file and later imported, recovering all information.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None)</code>  <code>async</code>","text":"<p>Create a soundevent dataset from a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The dataset.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root audio directory, by default None. If None, the root audio directory from the settings will be used.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <p>The soundevent dataset.</p>"},{"location":"reference/api/#whombat.api.datasets.DatasetAPI.update","title":"<code>update(session, obj, data, audio_dir=None)</code>  <code>async</code>","text":"<p>Update a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>obj</code> <code>Dataset</code> <p>The dataset to update.</p> required <code>data</code> <code>DatasetUpdate</code> <p>The data to update the dataset with.</p> required <code>audio_dir</code> <code>Path | None</code> <p>The root audio directory, by default None. If None, the root audio directory from the settings will be used.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If no dataset with the given UUID exists.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI","title":"<code>whombat.api.sound_events.SoundEventAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, SoundEvent, SoundEvent, SoundEventCreate, SoundEventUpdate]</code></p> <p>Methods:</p> Name Description <code>add_feature</code> <p>Add features to a sound event.</p> <code>create</code> <p>Create a sound event.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_geometric_features</code> <p>Create sound event features.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a sound event from a soundevent SoundEvent object.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_many</code> <p>Get many objects.</p> <code>get_recording</code> <code>remove_feature</code> <p>Remove features from a sound event.</p> <code>to_soundevent</code> <p>Create a soundevent SoundEvent object from a sound event.</p> <code>update</code> <p>Update a sound event.</p> <code>update_feature</code> <p>Update features of a sound event.</p> <code>update_geometric_features</code> <p>Update the geometric features of a sound event.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.add_feature","title":"<code>add_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Add features to a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>SoundEvent</code> <p>The sound event to add features to.</p> required <code>feature</code> <code>Feature</code> <p>The feature to add to the sound event.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The updated sound event.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the sound event does not exist in the database.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.create","title":"<code>create(session, recording, geometry, **kwargs)</code>  <code>async</code>","text":"<p>Create a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>recording</code> <code>Recording</code> <p>The recording the sound event is from.</p> required <code>geometry</code> <code>Geometry</code> <p>The geometry representing the ROI of the sound event.</p> required <code>**kwargs</code> <p>Additional keyword arguments to use when creating the sound event (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The created sound event.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.create_geometric_features","title":"<code>create_geometric_features(session, sound_events)</code>  <code>async</code>","text":"<p>Create sound event features.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>sound_events</code> <code>Sequence[SoundEvent]</code> <p>The sound events.</p> required"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.from_soundevent","title":"<code>from_soundevent(session, data, recording)</code>  <code>async</code>","text":"<p>Create a sound event from a soundevent SoundEvent object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>SoundEvent</code> <p>The soundevent sound event object.</p> required <code>recording</code> <code>Recording</code> <p>The recording the sound event is from.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The sound event.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.get_recording","title":"<code>get_recording(session, sound_event)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.remove_feature","title":"<code>remove_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Remove features from a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>SoundEvent</code> <p>The sound event to remove features from.</p> required <code>feature</code> <code>Feature</code> <p>The feature to remove from the sound event.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The updated sound event.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the sound event does not exist in the database.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.to_soundevent","title":"<code>to_soundevent(session, sound_event, audio_dir=None, recording=None)</code>  <code>async</code>","text":"<p>Create a soundevent SoundEvent object from a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event</code> <code>SoundEvent</code> <p>The sound event.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The soundevent sound event object.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>SoundEvent</code> <p>The sound event to update.</p> required <code>data</code> <code>SoundEventUpdate</code> <p>The data to update the sound event with.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The updated sound event.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the sound event does not exist in the database.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.update_feature","title":"<code>update_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Update features of a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>SoundEvent</code> <p>The sound event to update features for.</p> required <code>feature</code> <code>Feature</code> <p>The feature to update.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The updated sound event.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the sound event does not exist in the database.</p>"},{"location":"reference/api/#whombat.api.sound_events.SoundEventAPI.update_geometric_features","title":"<code>update_geometric_features(session, sound_event)</code>  <code>async</code>","text":"<p>Update the geometric features of a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event</code> <code>SoundEvent</code> <p>The sound event to update the geometric features for.</p> required <p>Returns:</p> Type Description <code>SoundEvent</code> <p>The updated sound event.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI","title":"<code>whombat.api.clips.ClipAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, Clip, Clip, ClipCreate, ClipUpdate]</code></p> <p>Methods:</p> Name Description <code>add_feature</code> <p>Add feature to clip.</p> <code>create</code> <p>Create a clip.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create clips without duplicates.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a clip from a soundevent Clip object.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_feature</code> <p>Remove feature from clip.</p> <code>to_soundevent</code> <p>Create a soundevent Clip object from a clip.</p> <code>update</code> <p>Update an object.</p> <code>update_feature</code> <p>Update a feature value for a clip.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.clips.ClipAPI.add_feature","title":"<code>add_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Add feature to clip.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>Database session.</p> required <code>obj</code> <code>Clip</code> <p>Clip to add feature to.</p> required <code>feature</code> <code>Feature</code> <p>Feature to add to clip.</p> required <p>Returns:</p> Type Description <code>Clip</code> <p>Updated clip.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If clip does not exist.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.create","title":"<code>create(session, recording, start_time, end_time, **kwargs)</code>  <code>async</code>","text":"<p>Create a clip.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>recording</code> <code>Recording</code> <p>The recording the clip belongs to.</p> required <code>start_time</code> <code>float</code> <p>The start time of the clip.</p> required <code>end_time</code> <code>float</code> <p>The end time of the clip.</p> required <code>**kwargs</code> <p>Additional keyword arguments for creating the clip.</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>clip</code> <code>Clip</code> <p>The created clip.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.clips.ClipAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create clips without duplicates.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>Database session.</p> required <code>data</code> <code>Sequence[dict]</code> <p>List of clips to create.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all clips or only the created ones. Since some clips may already exist, this may not be the same.</p> <code>False</code> <p>Returns:</p> Type Description <code>list[Clip]</code> <p>Created clips.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.clips.ClipAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create a clip from a soundevent Clip object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>data</code> <code>Clip</code> <p>The soundevent Clip object.</p> required <p>Returns:</p> Name Type Description <code>clip</code> <code>Clip</code> <p>The created clip.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.remove_feature","title":"<code>remove_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Remove feature from clip.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>Database session.</p> required <code>obj</code> <code>Clip</code> <p>Clip to remove feature from.</p> required <code>feature</code> <code>Feature</code> <p>Feature to remove from clip.</p> required <p>Returns:</p> Type Description <code>Clip</code> <p>The updated clip.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>Raised if clip does not exist in the database.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.to_soundevent","title":"<code>to_soundevent(obj, audio_dir=None)</code>","text":"<p>Create a soundevent Clip object from a clip.</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Clip</code> <p>The clip.</p> required <p>Returns:</p> Name Type Description <code>clip</code> <code>Clip</code> <p>The soundevent Clip object.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.clips.ClipAPI.update_feature","title":"<code>update_feature(session, obj, feature)</code>  <code>async</code>","text":"<p>Update a feature value for a clip.</p> <p>If the clip does not have the feature, it will be added.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>Database session.</p> required <code>obj</code> <code>Clip</code> <p>Clip to update feature for.</p> required <code>feature</code> <code>Feature</code> <p>Feature to update.</p> required <p>Returns:</p> Type Description <code>Clip</code> <p>The updated clip.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>Raised if clip does not exist in the database.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI","title":"<code>whombat.api.sound_event_annotations.SoundEventAnnotationAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, SoundEventAnnotation, SoundEventAnnotation, SoundEventAnnotationCreate, SoundEventAnnotationUpdate]</code></p> <p>Methods:</p> Name Description <code>add_note</code> <p>Add a note to an annotation project.</p> <code>add_tag</code> <p>Add a tag to an annotation project.</p> <code>create</code> <p>Create a sound event annotation.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Get or create an annotation from a <code>soundevent</code> annotation.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_annotation_task</code> <p>Get the annotation task in which the sound event was annotated.</p> <code>get_clip_annotation</code> <p>Get the clip annotation in which the sound event was annotated.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_note</code> <p>Remove a note from an annotation project.</p> <code>remove_tag</code> <p>Remove a tag from an annotation project.</p> <code>to_soundevent</code> <p>Convert an annotation to a <code>soundevent</code> annotation.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.add_note","title":"<code>add_note(session, obj, note)</code>  <code>async</code>","text":"<p>Add a note to an annotation project.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.add_tag","title":"<code>add_tag(session, obj, tag, user=None)</code>  <code>async</code>","text":"<p>Add a tag to an annotation project.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.create","title":"<code>create(session, sound_event, clip_annotation, created_by=None, **kwargs)</code>  <code>async</code>","text":"<p>Create a sound event annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>sound_event</code> <code>SoundEvent</code> <p>The sound event to annotate.</p> required <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The clip annotation to add the annotation to.</p> required <code>created_by</code> <code>SimpleUser | None</code> <p>The user that created the annotation. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to use when creating the annotation, (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Type Description <code>SoundEventAnnotation</code> <p>The created sound event annotation.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.from_soundevent","title":"<code>from_soundevent(session, data, clip_annotation)</code>  <code>async</code>","text":"<p>Get or create an annotation from a <code>soundevent</code> annotation.</p> <p>If an annotation with the same UUID already exists, it will be updated with any tags or notes that are in the <code>soundevent</code> annotation but not in current state of the annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>data</code> <code>SoundEventAnnotation</code> <p>The sound event annotation to create the annotation from.</p> required <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The clip annotation to add the annotation to.</p> required <p>Returns:</p> Type Description <code>SoundEventAnnotation</code> <p>The created annotation.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.get_annotation_task","title":"<code>get_annotation_task(session, data)</code>  <code>async</code>","text":"<p>Get the annotation task in which the sound event was annotated.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>SoundEventAnnotation</code> <p>The sound event annotation.</p> required <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>The annotation task for the sound event annotation.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.get_clip_annotation","title":"<code>get_clip_annotation(session, data)</code>  <code>async</code>","text":"<p>Get the clip annotation in which the sound event was annotated.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>SoundEventAnnotation</code> <p>The sound event annotation.</p> required <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The clip annotation for the sound event annotation.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.remove_note","title":"<code>remove_note(session, obj, note)</code>  <code>async</code>","text":"<p>Remove a note from an annotation project.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from an annotation project.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.to_soundevent","title":"<code>to_soundevent(session, annotation, audio_dir=None, recording=None)</code>  <code>async</code>","text":"<p>Convert an annotation to a <code>soundevent</code> annotation.</p> <p>Parameters:</p> Name Type Description Default <code>annotation</code> <code>SoundEventAnnotation</code> <p>The annotation to convert.</p> required <p>Returns:</p> Type Description <code>SoundEventAnnotation</code> <p>The <code>soundevent</code> annotation.</p>"},{"location":"reference/api/#whombat.api.sound_event_annotations.SoundEventAnnotationAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI","title":"<code>whombat.api.clip_annotations.ClipAnnotationAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, ClipAnnotation, ClipAnnotation, ClipAnnotationCreate, ClipAnnotationUpdate]</code></p> <p>Methods:</p> Name Description <code>add_note</code> <p>Add a note to a clip annotation.</p> <code>add_tag</code> <p>Add a tag to a clip annotation.</p> <code>create</code> <p>Create a clip annotation.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create multiple clip annotations.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a clip annotation from a sound event.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_annotation_task</code> <p>Get the annotation task where the clip is the target.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_note</code> <p>Remove a note from a clip annotation.</p> <code>remove_tag</code> <p>Remove a tag from a clip annotation.</p> <code>to_soundevent</code> <p>Convert a clip annotation to a soundevent object.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.add_note","title":"<code>add_note(session, obj, note)</code>  <code>async</code>","text":"<p>Add a note to a clip annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>ClipAnnotation</code> <p>The clip annotation to add the note to.</p> required <code>note</code> <code>Note</code> <p>The note to add.</p> required <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The updated clip annotation.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the clip annotation or note do not exist.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.add_tag","title":"<code>add_tag(session, obj, tag, user=None)</code>  <code>async</code>","text":"<p>Add a tag to a clip annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>ClipAnnotation</code> <p>The clip annotation to add the tag to.</p> required <code>tag</code> <code>Tag</code> <p>The tag to add.</p> required <code>user</code> <code>SimpleUser</code> <p>The user adding the tag, by default None</p> <code>None</code> <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The updated clip annotation.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the clip annotation or tag do not exist.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.create","title":"<code>create(session, clip, **kwargs)</code>  <code>async</code>","text":"<p>Create a clip annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>clip</code> <code>Clip</code> <p>The clip to annotate.</p> required <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation (e.g. <code>uuid</code>).</p> <code>{}</code> <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The created clip annotation.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create multiple clip annotations.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>Sequence[dict]</code> <p>A list of dictionaries containing the data need to create the clip annotations.</p> required <p>Returns:</p> Type Description <code>list[ClipAnnotation]</code> <p>The created clip annotations.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create a clip annotation from a sound event.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>ClipAnnotation</code> <p>The clip annotation to create.</p> required <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The created clip annotation.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.get_annotation_task","title":"<code>get_annotation_task(session, data)</code>  <code>async</code>","text":"<p>Get the annotation task where the clip is the target.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>data</code> <code>ClipAnnotation</code> <p>The clip annotation to get the task for.</p> required <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>The annotation task for the clip.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.remove_note","title":"<code>remove_note(session, obj, note)</code>  <code>async</code>","text":"<p>Remove a note from a clip annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>ClipAnnotation</code> <p>The clip annotation to remove the note from.</p> required <code>note</code> <code>Note</code> <p>The note to remove.</p> required <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The updated clip annotation.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the clip annotation or note do not exist.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from a clip annotation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session.</p> required <code>obj</code> <code>ClipAnnotation</code> <p>The clip annotation to remove the tag from.</p> required <code>tag</code> <code>Tag</code> <p>The tag to remove.</p> required <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The updated clip annotation.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the clip annotation or tag do not exist.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.to_soundevent","title":"<code>to_soundevent(session, clip_annotation, audio_dir=None)</code>  <code>async</code>","text":"<p>Convert a clip annotation to a soundevent object.</p> <p>Parameters:</p> Name Type Description Default <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The clip annotation to convert.</p> required <p>Returns:</p> Type Description <code>ClipAnnotation</code> <p>The converted object in the soundevent format.</p>"},{"location":"reference/api/#whombat.api.clip_annotations.ClipAnnotationAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI","title":"<code>whombat.api.annotation_tasks.AnnotationTaskAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, AnnotationTask, AnnotationTask, AnnotationTaskCreate, AnnotationTaskUpdate]</code></p> <p>API for tasks.</p> <p>Methods:</p> Name Description <code>add_status_badge</code> <p>Add a status badge to a task.</p> <code>create</code> <p>Create a task.</p> <code>create_clip_annotation</code> <p>Create a clip annotation for a task.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Get or create a task from a <code>soundevent</code> task.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip</code> <p>Get the clip of a task.</p> <code>get_clip_annotation</code> <p>Get clip annotations for a task.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_status_badge</code> <p>Remove a status badge from a task.</p> <code>to_soundevent</code> <p>Convert a task to a <code>soundevent</code> task.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.add_status_badge","title":"<code>add_status_badge(session, obj, state, user=None)</code>  <code>async</code>","text":"<p>Add a status badge to a task.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationTask</code> <p>Task to add the status badge to.</p> required <code>state</code> <code>AnnotationState</code> <p>State of the status badge.</p> required <code>user</code> <code>SimpleUser | None</code> <p>User that owns the status badge.</p> <code>None</code> <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>Task with the new status badge.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.create","title":"<code>create(session, annotation_project, clip, **kwargs)</code>  <code>async</code>","text":"<p>Create a task.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>annotation_project</code> <code>AnnotationProject</code> <p>Annotation project to which the task belongs.</p> required <code>clip</code> <code>Clip</code> <p>Clip to annotate.</p> required <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation (e.g. <code>uuid</code>).</p> <code>{}</code> <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>Created task.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.create_clip_annotation","title":"<code>create_clip_annotation(session, obj)</code>  <code>async</code>","text":"<p>Create a clip annotation for a task.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.from_soundevent","title":"<code>from_soundevent(session, data, annotation_project)</code>  <code>async</code>","text":"<p>Get or create a task from a <code>soundevent</code> task.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>An async database session.</p> required <code>data</code> <code>AnnotationTask</code> <p>The <code>soundevent</code> task.</p> required <code>annotation_project</code> <code>AnnotationProject</code> <p>The annotation project to which the task belongs.</p> required <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>The created task.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.get_clip","title":"<code>get_clip(session, obj)</code>  <code>async</code>","text":"<p>Get the clip of a task.</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>AnnotationTask</code> <p>The task.</p> required <p>Returns:</p> Type Description <code>Clip</code> <p>The clip of the task.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.get_clip_annotation","title":"<code>get_clip_annotation(session, obj)</code>  <code>async</code>","text":"<p>Get clip annotations for a task.</p> <p>If the task does not have a clip annotation, one will be created.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationTask</code> <p>Task for which to get the annotations.</p> required <p>Returns:</p> Type Description <code>list[Annotation]</code> <p>Annotations for the task.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.remove_status_badge","title":"<code>remove_status_badge(session, obj, state)</code>  <code>async</code>","text":"<p>Remove a status badge from a task.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationTask</code> <p>Task to remove the status badge from.</p> required <code>state</code> <code>AnnotationState</code> <p>The state of the status badge to remove.</p> required <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>Task with the status badge removed.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.to_soundevent","title":"<code>to_soundevent(session, task, clip=None, audio_dir=None)</code>  <code>async</code>","text":"<p>Convert a task to a <code>soundevent</code> task.</p> <p>Parameters:</p> Name Type Description Default <code>task</code> <code>AnnotationTask</code> <p>The task to convert.</p> required <p>Returns:</p> Type Description <code>AnnotationTask</code> <p>The converted task.</p>"},{"location":"reference/api/#whombat.api.annotation_tasks.AnnotationTaskAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI","title":"<code>whombat.api.annotation_projects.AnnotationProjectAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, AnnotationProject, AnnotationProject, AnnotationProjectCreate, AnnotationProjectUpdate]</code></p> <p>Methods:</p> Name Description <code>add_tag</code> <p>Add a tag to an annotation project.</p> <code>add_task</code> <code>create</code> <p>Create an annotation project.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Convert a soundevent Annotation Project to a Whombat annotation project.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_annotations</code> <p>Get a list of annotations for an annotation project.</p> <code>get_base_dir</code> <p>Get the base directory from which to export recordings.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_tag</code> <p>Remove a tag from an annotation project.</p> <code>to_soundevent</code> <p>Convert a Whombat annotation project to a soundevent annotation project.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.add_tag","title":"<code>add_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Add a tag to an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationProject</code> <p>Annotation project to add the tag to.</p> required <code>tag</code> <code>Tag</code> <p>Tag to add.</p> required <p>Returns:</p> Type Description <code>AnnotationProject</code> <p>Annotation project with the tag added.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.add_task","title":"<code>add_task(session, obj, clip)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.create","title":"<code>create(session, name, description, annotation_instructions=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>name</code> <code>str</code> <p>Name of the annotation project.</p> required <code>description</code> <code>str</code> <p>Description of the annotation project.</p> required <code>annotation_instructions</code> <code>str | None</code> <p>Intructions for annotators on how to successfully annotate an annotation task. This is important for ensuring that annotations are consistent across annotators, and provides a unambiguous definition of what a completed annotation task should look like.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation.</p> <code>{}</code> <p>Returns:</p> Type Description <code>AnnotationProject</code> <p>Created annotation project.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Convert a soundevent Annotation Project to a Whombat annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>data</code> <code>AnnotationProject</code> <p>soundevent annotation project.</p> required <p>Returns:</p> Type Description <code>AnnotationProject</code> <p>Whombat annotation project.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.get_annotations","title":"<code>get_annotations(session, obj, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get a list of annotations for an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationProject</code> <p>Annotation project to get annotations for.</p> required <code>limit</code> <code>int</code> <p>Maximum number of annotations to return. By default 1000.</p> <code>1000</code> <code>offset</code> <code>int</code> <p>Offset of the first annotation to return. By default 0.</p> <code>0</code> <code>filters</code> <code>Sequence[Filter] | None</code> <p>Filters to apply. Only annotations matching all filters will be returned. By default None.</p> <code>None</code> <code>sort_by</code> <code>str | None</code> <p>Field to sort by.</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>annotations</code> <code>list[ClipAnnotation]</code> <p>List of clip annotations.</p> <code>count</code> <code>int</code> <p>Total number of annotations matching the given criteria. This number may be larger than the number of annotations returned if limit is smaller than the total number of annotations matching the given criteria.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.get_base_dir","title":"<code>get_base_dir(session, obj)</code>  <code>async</code>","text":"<p>Get the base directory from which to export recordings.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationProject</code> <p>Annotation project to remove the tag from.</p> required <code>tag</code> <code>Tag</code> <p>Tag to remove.</p> required <p>Returns:</p> Type Description <code>AnnotationProject</code> <p>Annotation project with the tag removed.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None)</code>  <code>async</code>","text":"<p>Convert a Whombat annotation project to a soundevent annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>obj</code> <code>AnnotationProject</code> <p>Whombat annotation project.</p> required <p>Returns:</p> Type Description <code>AnnotationProject</code> <p>soundevent annotation project.</p>"},{"location":"reference/api/#whombat.api.annotation_projects.AnnotationProjectAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI","title":"<code>whombat.api.sound_event_predictions.SoundEventPredictionAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, SoundEventPrediction, SoundEventPrediction, SoundEventPredictionCreate, SoundEventPredictionUpdate]</code></p> <p>Methods:</p> Name Description <code>add_tag</code> <p>Add a tag to a sound event prediction.</p> <code>create</code> <p>Create a sound event prediction.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Get the Whombat representation of a sound event prediction.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_tag</code> <p>Remove a tag from a sound event prediction.</p> <code>to_soundevent</code> <p>Get the the sound event prediction in <code>soundevent</code> format.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.add_tag","title":"<code>add_tag(session, obj, tag, score)</code>  <code>async</code>","text":"<p>Add a tag to a sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy database session.</p> required <code>obj</code> <code>SoundEventPrediction</code> <p>Sound event prediction to add the tag to.</p> required <code>tag</code> <code>Tag</code> <p>Tag to add.</p> required <code>score</code> <code>float</code> <p>Confidence score of the tag.</p> required <p>Returns:</p> Name Type Description <code>sound_event_prediction_tag</code> <code>SoundEventPredictionTag</code> <p>Updated sound event prediction.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.create","title":"<code>create(session, sound_event, clip_prediction, score, **kwargs)</code>  <code>async</code>","text":"<p>Create a sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>sound_event</code> <code>SoundEvent</code> <p>The sound event that was predicted.</p> required <code>clip_prediction</code> <code>ClipPrediction</code> <p>The clip prediction that this sound event prediction belongs to.</p> required <code>score</code> <code>float</code> <p>The confidence score of the prediction.</p> required <code>**kwargs</code> <p>Additional keyword arguments to use when creating the sound event (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Type Description <code>SoundEventPrediction</code> <p>Created sound event prediction.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.from_soundevent","title":"<code>from_soundevent(session, data, clip_prediction)</code>  <code>async</code>","text":"<p>Get the Whombat representation of a sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy database session.</p> required <code>data</code> <code>SoundEventPrediction</code> <p>A sound event prediction in soundevent format.</p> required <code>clip_prediction</code> <code>ClipPrediction</code> <p>The clip prediction that the sound event prediction belongs to.</p> required <p>Returns:</p> Name Type Description <code>sound_event_prediction</code> <code>SoundEventPrediction</code> <p>The sound event prediction in Whombat format.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from a sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy database session.</p> required <code>obj</code> <code>SoundEventPrediction</code> <p>Sound event prediction to remove the tag from.</p> required <code>tag</code> <code>Tag</code> <p>Tag to remove.</p> required <p>Returns:</p> Name Type Description <code>sound_event_prediction</code> <code>SoundEventPrediction</code> <p>The updated sound event prediction.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.to_soundevent","title":"<code>to_soundevent(session, sound_event_prediction, audio_dir=None, recording=None)</code>  <code>async</code>","text":"<p>Get the the sound event prediction in <code>soundevent</code> format.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event_prediction</code> <code>SoundEventPrediction</code> <p>The sound event prediction to convert to soundevent format.</p> required <p>Returns:</p> Name Type Description <code>sound_event</code> <code>SoundEventPrediction</code> <p>The sound event prediction in soundevent format.</p>"},{"location":"reference/api/#whombat.api.sound_event_predictions.SoundEventPredictionAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI","title":"<code>whombat.api.clip_predictions.ClipPredictionAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, ClipPrediction, ClipPrediction, ClipPredictionCreate, ClipPredictionUpdate]</code></p> <p>Methods:</p> Name Description <code>add_tag</code> <p>Add a tag to a clip prediction.</p> <code>create</code> <p>Create a clip prediction.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create or update a clip prediction from an object in soundevent.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_tag</code> <p>Remove a tag from a clip prediction.</p> <code>to_soundevent</code> <p>Convert a clip prediction to an object in soundevent format.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.add_tag","title":"<code>add_tag(session, obj, tag, score)</code>  <code>async</code>","text":"<p>Add a tag to a clip prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession to use for the database connection.</p> required <code>obj</code> <code>ClipPrediction</code> <p>Clip prediction to add the tag to.</p> required <code>tag</code> <code>Tag</code> <p>Tag to add to the clip prediction.</p> required <code>score</code> <code>float</code> <p>Score of the tag.</p> required <p>Returns:</p> Name Type Description <code>clip_prediction</code> <code>ClipPrediction</code> <p>Clip prediction with the added tag.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.create","title":"<code>create(session, clip, **kwargs)</code>  <code>async</code>","text":"<p>Create a clip prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>clip</code> <code>Clip</code> <p>Clip to create the clip prediction for.</p> required <code>**kwargs</code> <p>Additional arguments to pass to the create method (e.g. uuid).</p> <code>{}</code> <p>Returns:</p> Type Description <code>ClipPrediction</code> <p>Created clip prediction.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create or update a clip prediction from an object in soundevent.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession to use for the database connection.</p> required <code>data</code> <code>ClipPrediction</code> <p>Data of the clip prediction to create or update in soundevent format.</p> required <p>Returns:</p> Name Type Description <code>clip_prediction</code> <code>ClipPrediction</code> <p>Created or updated clip prediction.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from a clip prediction.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession to use for the database connection.</p> required <code>obj</code> <code>ClipPrediction</code> <p>Clip prediction to remove the tag from.</p> required <code>tag</code> <code>Tag</code> <p>Tag to remove from the clip prediction.</p> required <p>Returns:</p> Name Type Description <code>clip_prediction</code> <code>ClipPrediction</code> <p>Clip prediction with the removed tag.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.to_soundevent","title":"<code>to_soundevent(session, clip_prediction, audio_dir=None)</code>  <code>async</code>","text":"<p>Convert a clip prediction to an object in soundevent format.</p> <p>Parameters:</p> Name Type Description Default <code>clip_prediction</code> <code>ClipPrediction</code> <p>Clip prediction to convert.</p> required <p>Returns:</p> Name Type Description <code>clip_prediction</code> <code>ClipPrediction</code> <p>Converted clip prediction.</p>"},{"location":"reference/api/#whombat.api.clip_predictions.ClipPredictionAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI","title":"<code>whombat.api.model_runs.ModelRunAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, ModelRun, ModelRun, ModelRunCreate, ModelRunUpdate]</code></p> <p>Methods:</p> Name Description <code>add_clip_prediction</code> <code>create</code> <p>Create a model run.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip_predictions</code> <code>get_evaluation</code> <code>get_many</code> <p>Get many objects.</p> <code>to_soundevent</code> <code>update</code> <p>Update an object.</p> <code>update_from_soundevent</code>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.add_clip_prediction","title":"<code>add_clip_prediction(session, obj, clip_prediction, raise_if_exists=False)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.create","title":"<code>create(session, name, version, description=None, **kwargs)</code>  <code>async</code>","text":"<p>Create a model run.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>name</code> <code>str</code> <p>The name of the model used to generate the predictions in this run.</p> required <code>version</code> <code>str</code> <p>The version of the model used to generate the predictions in this run.</p> required <code>description</code> <code>str | None</code> <p>A description of the model used to generate the predictions in this run.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to use when creating the model run, (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Type Description <code>ModelRun</code> <p>Created model run.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.get_clip_predictions","title":"<code>get_clip_predictions(session, obj, *, limit=1000, offset=0, filters=None, sort_by=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.get_evaluation","title":"<code>get_evaluation(session, data, evaluation_set)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.model_runs.ModelRunAPI.update_from_soundevent","title":"<code>update_from_soundevent(session, obj, data)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI","title":"<code>whombat.api.user_runs.UserRunAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, UserRun, UserRun, UserRunCreate, UserRunUpdate]</code></p> <p>Methods:</p> Name Description <code>add_clip_prediction</code> <code>create</code> <p>Create a user run.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip_predictions</code> <code>get_many</code> <p>Get many objects.</p> <code>to_soundevent</code> <code>update</code> <p>Update an object.</p> <code>update_from_soundevent</code>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.add_clip_prediction","title":"<code>add_clip_prediction(session, obj, clip_prediction, raise_if_exists=False)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.create","title":"<code>create(session, user, **kwargs)</code>  <code>async</code>","text":"<p>Create a user run.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>user</code> <code>SimpleUser</code> <p>The user that created the run.</p> required <code>**kwargs</code> <p>Additional keyword arguments to use when creating the user run, (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Type Description <code>UserRun</code> <p>Created user run.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.from_soundevent","title":"<code>from_soundevent(session, data, user)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.get_clip_predictions","title":"<code>get_clip_predictions(session, obj, *, limit=1000, offset=0, filters=None, sort_by=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.user_runs.UserRunAPI.update_from_soundevent","title":"<code>update_from_soundevent(session, obj, data)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI","title":"<code>whombat.api.sound_event_evaluations.SoundEventEvaluationAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, SoundEventEvaluation, SoundEventEvaluation, SoundEventEvaluationCreate, SoundEventEvaluationUpdate]</code></p> <p>API for sound event evaluations.</p> <p>Methods:</p> Name Description <code>add_metric</code> <p>Add a metric to a sound event evaluation.</p> <code>create</code> <p>Create a sound event evaluation.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a sound event evaluation from a sound event evaluation.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_metric</code> <p>Remove a metric from a sound event evaluation.</p> <code>to_soundevent</code> <p>Convert a sound event evaluation to soundevent format.</p> <code>update</code> <p>Update an object.</p> <code>update_metric</code> <p>Update a metric of a sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.add_metric","title":"<code>add_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Add a metric to a sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.create","title":"<code>create(session, clip_evaluation, affinity=0, score=0, source=None, target=None, **kwargs)</code>  <code>async</code>","text":"<p>Create a sound event evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>clip_evaluation</code> <code>ClipEvaluation</code> <p>The clip evaluation that this sound event evaluation belongs to.</p> required <code>affinity</code> <code>float</code> <p>The geometric affinity between the source and target sound events regions of interest. Defaults to 0.</p> <code>0</code> <code>score</code> <code>float</code> <p>An overall score for the sound event evaluation. Defaults to 0.</p> <code>0</code> <code>source</code> <code>SoundEventPrediction | None</code> <p>The prediction being evaluated. Can be None if the target is not None, in which case no prediction was matched to the target, that is, this is a false negative.</p> <code>None</code> <code>target</code> <code>SoundEventAnnotation | None</code> <p>The annotation being evaluated. Can be None if the source is not None, in which case no annotation was matched to the source, that is, this is a false positive.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to use when creating the sound event evaluation, (e.g. <code>uuid</code> or <code>created_on</code>.)</p> <code>{}</code> <p>Returns:</p> Type Description <code>SoundEventEvaluation</code> <p>Created sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.from_soundevent","title":"<code>from_soundevent(session, data, clip_evaluation)</code>  <code>async</code>","text":"<p>Create a sound event evaluation from a sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.remove_metric","title":"<code>remove_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Remove a metric from a sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None, recording=None)</code>  <code>async</code>","text":"<p>Convert a sound event evaluation to soundevent format.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.sound_event_evaluations.SoundEventEvaluationAPI.update_metric","title":"<code>update_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Update a metric of a sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI","title":"<code>whombat.api.clip_evaluations.ClipEvaluationAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, ClipEvaluation, ClipEvaluation, ClipEvaluationCreate, ClipEvaluationUpdate]</code></p> <p>API for clip evaluations.</p> <p>Methods:</p> Name Description <code>add_metric</code> <p>Add a metric to a clip evaluation.</p> <code>create</code> <p>Create a clip evaluation.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create a clip evaluation from an object in soundevent format.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_many</code> <p>Get many objects.</p> <code>get_sound_event_evaluations</code> <p>Get the sound event evaluations of a clip evaluation.</p> <code>remove_metric</code> <p>Remove a metric from a clip evaluation.</p> <code>to_soundevent</code> <p>Create a clip evaluation in soundevent format from a clip evaluation in whombat format.</p> <code>update</code> <p>Update an object.</p> <code>update_metric</code> <p>Update a metric of a clip evaluation.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.add_metric","title":"<code>add_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Add a metric to a clip evaluation.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.create","title":"<code>create(session, evaluation, clip_annotation, clip_prediction, score=0, **kwargs)</code>  <code>async</code>","text":"<p>Create a clip evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>evaluation</code> <code>Evaluation</code> <p>The evaluation to which the clip evaluation belongs.</p> required <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The annotations used as ground truth.</p> required <code>clip_prediction</code> <code>ClipPrediction</code> <p>The predictions to evaluate.</p> required <code>score</code> <code>float</code> <p>An overall score for the clip evaluation.</p> <code>0</code> <code>**kwargs</code> <p>Additional keyword arguments to pass at creation (e.g. uuid).</p> <code>{}</code> <p>Returns:</p> Type Description <code>ClipEvaluation</code> <p>Created clip evaluation.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.from_soundevent","title":"<code>from_soundevent(session, data, evaluation)</code>  <code>async</code>","text":"<p>Create a clip evaluation from an object in soundevent format.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>An open database session.</p> required <code>data</code> <code>ClipEvaluation</code> <p>The clip evaluation in soundevent format.</p> required <code>evaluation</code> <code>Evaluation</code> <p>The evaluation to which the clip evaluation belongs.</p> required <p>Returns:</p> Type Description <code>ClipEvaluation</code> <p>The clip evaluation in whombat format.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.get_sound_event_evaluations","title":"<code>get_sound_event_evaluations(session, obj, *, limit=100, offset=0, filters=None, sort_by=None)</code>  <code>async</code>","text":"<p>Get the sound event evaluations of a clip evaluation.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.remove_metric","title":"<code>remove_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Remove a metric from a clip evaluation.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None, evaluations=None)</code>  <code>async</code>","text":"<p>Create a clip evaluation in soundevent format from a clip evaluation in whombat format.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>An open database session.</p> required <code>obj</code> <code>ClipEvaluation</code> <p>The clip evaluation in whombat format.</p> required <p>Returns:</p> Type Description <code>ClipEvaluation</code> <p>The clip evaluation in soundevent format.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.clip_evaluations.ClipEvaluationAPI.update_metric","title":"<code>update_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Update a metric of a clip evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI","title":"<code>whombat.api.evaluations.EvaluationAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, Evaluation, Evaluation, EvaluationCreate, EvaluationUpdate]</code></p> <p>API functions to interact with evaluations.</p> <p>Methods:</p> Name Description <code>add_metric</code> <p>Add a metric to an evaluation.</p> <code>create</code> <p>Create an evaluation.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>evaluate_model_run</code> <code>find</code> <code>from_soundevent</code> <p>Create an evaluation from a sound event evaluation.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip_evaluations</code> <p>Get clip evaluations of an evaluation.</p> <code>get_many</code> <p>Get many objects.</p> <code>remove_metric</code> <p>Remove a metric from an evaluation.</p> <code>to_soundevent</code> <p>Create a sound event evaluation from an evaluation.</p> <code>update</code> <p>Update an object.</p> <code>update_metric</code> <p>Update a metric of an evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.add_metric","title":"<code>add_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Add a metric to an evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.create","title":"<code>create(session, task, score=0, **kwargs)</code>  <code>async</code>","text":"<p>Create an evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>task</code> <code>str</code> <p>The evaluated task.</p> required <p>Returns:</p> Type Description <code>Evaluation</code> <p>Created evaluation.</p> Notes <p>The <code>task</code> parameter is a string that plays a crucial role in defining the machine learning context for the function evaluation. It represents the specific name of the machine learning task being assessed. This task name serves as a key identifier, indicating both the nature of the expected predictions and the criteria for evaluating their performance. Specifying the <code>task</code> is essential for providing clear and meaningful evaluations. Different machine learning tasks have distinct objectives, metrics, and criteria for success. Therefore, by explicitly defining the <code>task</code>, the function ensures that predictions are evaluated in a manner aligned with the specific requirements and expectations of that task. For example, the <code>task</code> parameter might be set to \"clip classification,\" \"sound event detection,\" or any other task type relevant to the machine learning model or user predictions.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.evaluate_model_run","title":"<code>evaluate_model_run(session, model_run, evaluation_set, audio_dir, user)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create an evaluation from a sound event evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.get_clip_evaluations","title":"<code>get_clip_evaluations(session, obj, *, limit=100, offset=0, filters=None, sort_by=None)</code>  <code>async</code>","text":"<p>Get clip evaluations of an evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.remove_metric","title":"<code>remove_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Remove a metric from an evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None)</code>  <code>async</code>","text":"<p>Create a sound event evaluation from an evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/api/#whombat.api.evaluations.EvaluationAPI.update_metric","title":"<code>update_metric(session, obj, metric)</code>  <code>async</code>","text":"<p>Update a metric of an evaluation.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI","title":"<code>whombat.api.evaluation_sets.EvaluationSetAPI()</code>","text":"<p>               Bases: <code>BaseAPI[UUID, EvaluationSet, EvaluationSet, EvaluationSetCreate, EvaluationSetUpdate]</code></p> <p>Methods:</p> Name Description <code>add_annotation_tasks</code> <p>Add multiple annotation tasks to an evaluation set.</p> <code>add_clip_annotation</code> <p>Add a clip annotation to an evaluation set.</p> <code>add_model_run</code> <p>Add a model run to an evaluation set.</p> <code>add_tag</code> <p>Add a tag to an annotation project.</p> <code>add_user_run</code> <p>Add a user run to an evaluation set.</p> <code>create</code> <p>Create an evaluation set.</p> <code>create_from_data</code> <p>Create an object.</p> <code>create_many</code> <p>Create many objects.</p> <code>create_many_without_duplicates</code> <p>Create many objects.</p> <code>delete</code> <p>Delete an object.</p> <code>find</code> <code>from_soundevent</code> <p>Create an evaluation set from an object in <code>soundevent</code> format.</p> <code>get</code> <p>Get an object by primary key.</p> <code>get_clip_annotations</code> <p>Get all clip annotations in an evaluation set.</p> <code>get_many</code> <p>Get many objects.</p> <code>get_model_runs</code> <p>Get all model runs in an evaluation set.</p> <code>get_user_runs</code> <p>Get all user runs in an evaluation set.</p> <code>remove_clip_annotation</code> <p>Remove a clip annotation from an evaluation set.</p> <code>remove_model_run</code> <p>Remove a model run from an evaluation set.</p> <code>remove_tag</code> <p>Remove a tag from an annotation project.</p> <code>remove_user_run</code> <p>Remove a user run from an evaluation set.</p> <code>to_soundevent</code> <p>Create an object in <code>soundevent</code> format from an evaluation set.</p> <code>update</code> <p>Update an object.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI-functions","title":"Functions","text":""},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.add_annotation_tasks","title":"<code>add_annotation_tasks(session, obj, annotation_task_uuids)</code>  <code>async</code>","text":"<p>Add multiple annotation tasks to an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.add_clip_annotation","title":"<code>add_clip_annotation(session, obj, annotation)</code>  <code>async</code>","text":"<p>Add a clip annotation to an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.add_model_run","title":"<code>add_model_run(session, obj, model_run)</code>  <code>async</code>","text":"<p>Add a model run to an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.add_tag","title":"<code>add_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Add a tag to an annotation project.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.add_user_run","title":"<code>add_user_run(session, obj, user_run)</code>  <code>async</code>","text":"<p>Add a user run to an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.create","title":"<code>create(session, name, description=None, task=PredictionTypes.sound_event_detection, **kwargs)</code>  <code>async</code>","text":"<p>Create an evaluation set.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>SQLAlchemy AsyncSession.</p> required <code>name</code> <code>str</code> <p>Name of the evaluation set.</p> required <code>description</code> <code>str | None</code> <p>A description of the evaluation set. Include information about how the evaluation set was created and what it is meant to be used for.</p> <code>None</code> <code>task</code> <code>PredictionTypes</code> <p>The task the evaluation set is used for. For example, Sound Event Detection.</p> <code>sound_event_detection</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the create function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>EvaluationSet</code> <p>Created evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.create_from_data","title":"<code>create_from_data(session, data=None, **kwargs)</code>  <code>async</code>","text":"<p>Create an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>CreateSchema | None</code> <p>The data to use for creation of the object.</p> <code>None</code> <code>**kwargs</code> <p>Additional keyword arguments to pass to the creation function.</p> <code>{}</code> <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The created object.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.create_many","title":"<code>create_many(session, data)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.create_many_without_duplicates","title":"<code>create_many_without_duplicates(session, data, return_all=False)</code>  <code>async</code>","text":"<p>Create many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>data</code> <code>Sequence[dict]</code> <p>The data to use for creation of the objects.</p> required <code>return_all</code> <code>bool</code> <p>Whether to return all objects, or only those created.</p> <code>False</code> <p>Returns:</p> Type Description <code>objs</code> <p>Will only return the created objects, not the existing ones.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.delete","title":"<code>delete(session, obj)</code>  <code>async</code>","text":"<p>Delete an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to delete.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The deleted object.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.find","title":"<code>find(session, filters)</code>  <code>async</code>","text":""},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.from_soundevent","title":"<code>from_soundevent(session, data)</code>  <code>async</code>","text":"<p>Create an evaluation set from an object in <code>soundevent</code> format.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.get","title":"<code>get(session, pk)</code>  <code>async</code>","text":"<p>Get an object by primary key.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The database session to use.</p> required <code>pk</code> <code>PrimaryKey</code> <p>The primary key.</p> required <p>Returns:</p> Type Description <code>obj</code> <p>The object with the given primary key.</p> <p>Raises:</p> Type Description <code>NotFoundError</code> <p>If the object could not be found.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.get_clip_annotations","title":"<code>get_clip_annotations(session, obj, *, limit=100, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get all clip annotations in an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.get_many","title":"<code>get_many(session, *, limit=1000, offset=0, filters=None, sort_by='-created_on')</code>  <code>async</code>","text":"<p>Get many objects.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>limit</code> <code>int | None</code> <p>The maximum number of objects to return, by default 1000</p> <code>1000</code> <code>offset</code> <code>int | None</code> <p>The offset to use, by default 0</p> <code>0</code> <code>filters</code> <code>Sequence[Filter | ColumnExpressionArgument] | None</code> <p>A list of filters to apply, by default None</p> <code>None</code> <code>sort_by</code> <code>ColumnExpressionArgument | str | None</code> <p>The column to sort by, by default None</p> <code>'-created_on'</code> <p>Returns:</p> Name Type Description <code>objs</code> <p>The objects.</p> <code>count</code> <code>int</code> <p>The total number of objects. This is the number of objects that would have been returned if no limit or offset was applied.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.get_model_runs","title":"<code>get_model_runs(session, obj, *, limit=100, offset=0, filters=None, sort_by=None)</code>  <code>async</code>","text":"<p>Get all model runs in an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.get_user_runs","title":"<code>get_user_runs(session, obj, *, limit=100, offset=0, filters=None, sort_by=None)</code>  <code>async</code>","text":"<p>Get all user runs in an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.remove_clip_annotation","title":"<code>remove_clip_annotation(session, obj, annotation)</code>  <code>async</code>","text":"<p>Remove a clip annotation from an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.remove_model_run","title":"<code>remove_model_run(session, obj, model_run)</code>  <code>async</code>","text":"<p>Remove a model run from an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.remove_tag","title":"<code>remove_tag(session, obj, tag)</code>  <code>async</code>","text":"<p>Remove a tag from an annotation project.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.remove_user_run","title":"<code>remove_user_run(session, obj, user_run)</code>  <code>async</code>","text":"<p>Remove a user run from an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.to_soundevent","title":"<code>to_soundevent(session, obj, audio_dir=None)</code>  <code>async</code>","text":"<p>Create an object in <code>soundevent</code> format from an evaluation set.</p>"},{"location":"reference/api/#whombat.api.evaluation_sets.EvaluationSetAPI.update","title":"<code>update(session, obj, data)</code>  <code>async</code>","text":"<p>Update an object.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>The SQLAlchemy AsyncSession of the database to use.</p> required <code>obj</code> <code>WhombatSchema</code> <p>The object to update.</p> required <code>data</code> <code>UpdateSchema</code> <p>The data to use for update.</p> required <p>Returns:</p> Type Description <code>WhombatSchema</code> <p>The updated object.</p>"},{"location":"reference/models/","title":"Database Models","text":"<p>Welcome to the comprehensive database models reference for Whombat! Here, you'll discover an organized collection of all the database models defined within the Whombat framework. Our categorization mirrors the structure outlined in <code>soundevent</code>.</p> <p>The models within Whombat share an analogical relationship with those in <code>soundevent</code> and are essentially a SQLAlchemy port. While the core concepts remain consistent, it's essential to note that some minor differences do exist.</p>"},{"location":"reference/models/#data-descriptors","title":"Data Descriptors","text":""},{"location":"reference/models/#users","title":"Users","text":""},{"location":"reference/models/#whombat.models.User","title":"<code>whombat.models.User</code>","text":"<p>               Bases: <code>Base</code></p> <p>User Model.</p> <p>Represents a user in the system.</p> <p>This model stores information about a user, including their email, hashed password, username, full name, and status (active, superuser, verified).</p> Notes <p>This class inherits from <code>SQLAlchemyBaseUserTableUUID</code> (provided by <code>fastapi-users</code>) which defines the <code>id</code>, <code>email</code>, <code>hashed_password</code>, <code>is_active</code>, and <code>is_superuser</code> attributes.</p> <p>Important: Do not create instances of this class directly. Use the <code>create_user</code> function in the <code>whombat.api.users</code> module instead.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>str</code> <p>The email address of the user.</p> required <code>hashed_password</code> <code>str</code> <p>The hashed password of the user.</p> required <code>username</code> <code>str</code> <p>The username of the user.</p> required <code>id</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('3290ebf1-16d8-4830-b16c-2c90125dd2d8')</code> <code>name</code> <code>str | None</code> <p>The full name of the user.</p> <code>None</code> <code>is_active</code> <code>bool</code> <p>Whether the user is active.</p> <code>True</code> <code>is_superuser</code> <code>bool</code> <p>Whether the user is a superuser.</p> <code>False</code> <code>is_verified</code> <code>bool</code> <p>Whether the user is verified.</p> <code>False</code> <p>Attributes:</p> Name Type Description <code>notes</code> <code>list[ForwardRef(Note)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_annotation_tags</code> <code>list[ForwardRef(SoundEventAnnotationTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>recordings</code> <code>list[ForwardRef(Recording)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>recording_owner</code> <code>list[ForwardRef(RecordingOwner)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>user_runs</code> <code>list[ForwardRef(UserRun)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p>"},{"location":"reference/models/#tags","title":"Tags","text":""},{"location":"reference/models/#whombat.models.Tag","title":"<code>whombat.models.Tag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Tag Model.</p> <p>Represents a tag with a key-value structure.</p> <p>Tags are used to categorize and annotate various elements, such as audio clips or sound events. The key-value structure provides a flexible way to organize and manage tags, with the \"key\" acting as a category or namespace and the \"value\" representing the specific tag within that category.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database ID of the tag.</p> <code>recordings</code> <code>list[ForwardRef(Recording)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>recording_tags</code> <code>list[ForwardRef(RecordingTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_annotations</code> <code>list[ForwardRef(SoundEventAnnotation)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_annotation_tags</code> <code>list[ForwardRef(SoundEventAnnotationTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clip_annotations</code> <code>list[ForwardRef(ClipAnnotation)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clip_annotation_tags</code> <code>list[ForwardRef(ClipAnnotationTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>evaluation_set_tags</code> <code>list[ForwardRef(EvaluationSetTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>annotation_projects</code> <code>list[ForwardRef(AnnotationProject)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>annotation_project_tags</code> <code>list[ForwardRef(AnnotationProjectTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_prediction_tags</code> <code>list[ForwardRef(SoundEventPredictionTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clip_prediction_tags</code> <code>list[ForwardRef(ClipPredictionTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>key</code> <code>str</code> <p>The key of the tag (e.g., \"instrument\", \"genre\", \"mood\").</p> <p>This serves as a category or namespace for organizing tags.</p> required <code>value</code> <code>str</code> <p>The value of the tag (e.g., \"guitar\", \"rock\", \"happy\").</p> <p>This represents the specific tag within the category defined by the key.</p> required"},{"location":"reference/models/#features","title":"Features","text":""},{"location":"reference/models/#whombat.models.FeatureName","title":"<code>whombat.models.FeatureName</code>","text":"<p>               Bases: <code>Base</code></p> <p>Feature Name Model.</p> <p>Represents the name of a feature.</p> <p>Features are numerical values associated with sound events, clips, or recordings, providing additional information about these objects. This model stores the unique names of those features.</p> <p>Features can represent various aspects:</p> <ul> <li>Sound Events: Duration, bandwidth, or other characteristics extracted     via deep learning models.</li> <li>Clips: Acoustic properties like signal-to-noise ratio or acoustic     indices.</li> <li>Recordings: Contextual information like temperature, wind speed, or     recorder height.</li> </ul> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the feature name</p> <code>recordings</code> <code>list[ForwardRef(RecordingFeature)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clips</code> <code>list[ForwardRef(ClipFeature)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_events</code> <code>list[ForwardRef(SoundEventFeature)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The feature name.</p> required"},{"location":"reference/models/#notes","title":"Notes","text":""},{"location":"reference/models/#whombat.models.Note","title":"<code>whombat.models.Note</code>","text":"<p>               Bases: <code>Base</code></p> <p>Note model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the note (autogenerated).</p> <code>created_by</code> <code>User</code> <p>The user who created the note.</p> <code>recording</code> <code>ForwardRef(Recording) | None</code> <code>recording_note</code> <code>ForwardRef(RecordingNote) | None</code> <code>sound_event_annotation</code> <code>ForwardRef(SoundEventAnnotation) | None</code> <code>sound_event_annotation_note</code> <code>ForwardRef(SoundEventAnnotationNote) | None</code> <code>clip_annotation</code> <code>ForwardRef(ClipAnnotation) | None</code> <code>clip_annotation_note</code> <code>ForwardRef(ClipAnnotationNote) | None</code> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>The textual message of the note.</p> required <code>created_by_id</code> <code>UUID</code> <p>The database id of the user who created the note.</p> required <code>is_issue</code> <code>bool</code> <p>Whether the note is an issue.</p> <code>False</code> <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('840f5c59-c878-4b0d-8ed7-e6fe576bcaf9')</code>"},{"location":"reference/models/#audio-content","title":"Audio Content","text":""},{"location":"reference/models/#recordings","title":"Recordings","text":""},{"location":"reference/models/#whombat.models.Recording","title":"<code>whombat.models.Recording</code>","text":"<p>               Bases: <code>Base</code></p> <p>Recording model for recording table.</p> <p>This model represents the recording table in the database. It contains the all the information about a recording.</p> Notes <p>If the time expansion factor is not 1.0, the duration and samplerate are the duration and samplerate of original recording, not the expanded recording.</p> <p>The path of the dataset is the path to the recording file relative to the base audio directory. We dont store the absolute path to the recording file in the database, as this may expose sensitive information, and it makes it easier to share datasets between users.</p> <p>The hash of the recording is used to uniquely identify it. It is computed from the recording file, and is used to check if a recording has already been registered in the database. If the hash of a recording is already in the database, the recording is not registered again.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the recording (autogenerated).</p> <code>clips</code> <code>list[ForwardRef(Clip)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>recording_datasets</code> <code>list[ForwardRef(DatasetRecording)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('4c921c25-60c5-4f22-9651-29f40ba556a0')</code> <code>hash</code> <code>str</code> <p>The md5 hash of the recording.</p> required <code>path</code> <code>Path</code> <p>The path to the recording file relative to the base audio directory.</p> required <code>duration</code> <code>float</code> <p>The duration of the recording in seconds.</p> required <code>samplerate</code> <code>int</code> <p>The samplerate of the recording in Hz.</p> required <code>channels</code> <code>int</code> <p>The number of channels of the recording.</p> required <code>date</code> <code>date | None</code> <p>The date at which the recording was made.</p> <code>None</code> <code>time</code> <code>time | None</code> <p>The time at which the recording was made.</p> <code>None</code> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording site.</p> <code>None</code> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording site.</p> <code>None</code> <code>time_expansion</code> <code>float</code> <p>The time expansion factor of the recording.</p> <code>1.0</code> <code>rights</code> <code>str | None</code> <p>A string describing the usage rights of the recording.</p> <code>None</code> <code>notes</code> <code>list[Note]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>features</code> <code>list[ForwardRef(RecordingFeature)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>owners</code> <code>list[User]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>recording_notes</code> <code>list[ForwardRef(RecordingNote)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>recording_tags</code> <code>list[ForwardRef(RecordingTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>recording_owners</code> <code>list[ForwardRef(RecordingOwner)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code>"},{"location":"reference/models/#whombat.models.RecordingTag","title":"<code>whombat.models.RecordingTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Recording Tag Model.</p> <p>Parameters:</p> Name Type Description Default <code>recording_id</code> <code>int</code> <p>The id of the recording.</p> required <code>tag_id</code> <code>int</code> <p>The id of the tag.</p> required <p>Attributes:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The recording to which the tag belongs.</p> <code>tag</code> <code>Tag</code> <p>The tag associated with the recording.</p> <code>recording_uuid</code> <code>AssociationProxy[UUID]</code>"},{"location":"reference/models/#whombat.models.RecordingNote","title":"<code>whombat.models.RecordingNote</code>","text":"<p>               Bases: <code>Base</code></p> <p>Recording Note Model.</p> <p>Parameters:</p> Name Type Description Default <code>recording_id</code> <code>int</code> <p>The id of the recording.</p> required <code>note_id</code> <code>int</code> <p>The id of the note.</p> required <p>Attributes:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The recording to which the note belongs.</p> <code>note</code> <code>Note</code> <p>The note associated with the recording.</p>"},{"location":"reference/models/#whombat.models.RecordingFeature","title":"<code>whombat.models.RecordingFeature</code>","text":"<p>               Bases: <code>Base</code></p> <p>Recording Feature Model.</p> <p>Parameters:</p> Name Type Description Default <code>recording_id</code> <code>int</code> <p>The id of the recording.</p> required <code>feature_name_id</code> <code>int</code> <p>The id of the feature name.</p> required <code>value</code> <code>float</code> <p>The value of the feature.</p> required <p>Attributes:</p> Name Type Description <code>name</code> <code>AssociationProxy[str]</code> <p>The name of the feature.</p> <code>recording</code> <code>Recording</code> <code>feature_name</code> <code>FeatureName</code>"},{"location":"reference/models/#whombat.models.RecordingOwner","title":"<code>whombat.models.RecordingOwner</code>","text":"<p>               Bases: <code>Base</code></p> <p>RecordingOwner model for recording_owner table.</p> <p>Parameters:</p> Name Type Description Default <code>recording_id</code> <code>int</code> <p>The id of the recording.</p> required <code>user_id</code> <code>UUID</code> <p>The id of the user.</p> required <p>Attributes:</p> Name Type Description <code>recording</code> <code>Recording</code> <p>The recording being owned.</p> <code>user</code> <code>User</code> <p>The user owning the recording.</p>"},{"location":"reference/models/#datasets","title":"Datasets","text":""},{"location":"reference/models/#whombat.models.Dataset","title":"<code>whombat.models.Dataset</code>","text":"<p>               Bases: <code>Base</code></p> <p>Dataset model for dataset table.</p> Notes <p>The <code>audio_dir</code> attribute is the path to the audio directory of the dataset. This is the directory that contains all the recordings of the dataset. Only the relative path to the base audio directory is stored in the database. Note that we should NEVER store absolute paths in the database.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the dataset.</p> <code>recordings</code> <code>list[Recording]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>dataset_recordings</code> <code>list[ForwardRef(DatasetRecording)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('8fadb35d-fb11-46f7-9247-051810b4c4c7')</code> <code>name</code> <code>str</code> <p>The name of the dataset.</p> required <code>description</code> <code>str</code> <p>A textual description of the dataset.</p> required <code>audio_dir</code> <code>Path</code> <p>The path to the audio directory of the dataset.</p> required"},{"location":"reference/models/#whombat.models.DatasetRecording","title":"<code>whombat.models.DatasetRecording</code>","text":"<p>               Bases: <code>Base</code></p> <p>Dataset Recording Model.</p> <p>A dataset recording is a link between a dataset and a recording. It contains the path to the recording within the dataset.</p> Notes <p>The dataset recording model is a many-to-many relationship between the dataset and recording models. This means that a recording can be part of multiple datasets. This is useful when a recording is used in multiple studies or deployments. However, as we do not want to duplicate recordings in the database, we use a many-to-many relationship to link recordings to datasets.</p> <p>Parameters:</p> Name Type Description Default <code>dataset_id</code> <code>int</code> <p>The id of the dataset.</p> required <code>recording_id</code> <code>int</code> <p>The id of the recording.</p> required <code>path</code> <code>Path</code> <p>The path to the recording within the dataset.</p> required <p>Attributes:</p> Name Type Description <code>dataset</code> <code>Dataset</code> <code>recording</code> <code>Recording</code>"},{"location":"reference/models/#acoustic-objects","title":"Acoustic Objects","text":""},{"location":"reference/models/#sound-events","title":"Sound Events","text":""},{"location":"reference/models/#whombat.models.SoundEvent","title":"<code>whombat.models.SoundEvent</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event model.</p> Notes <p>The geometry attribute is stored as a JSON string in the database.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the sound event.</p> <code>recording</code> <code>Recording</code> <p>The recording to which the sound event belongs.</p> <code>features</code> <code>list[ForwardRef(SoundEventFeature)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_annotation</code> <code>ForwardRef(SoundEventAnnotation) | None</code> <code>sound_event_prediction</code> <code>ForwardRef(SoundEventPrediction) | None</code> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('9ecd2c4e-89cf-471b-8b29-92332ce4b19d')</code> <code>recording_id</code> <code>int</code> <p>The id of the recording to which the sound event belongs.</p> required <code>geometry_type</code> <code>str</code> <p>The type of geometry used to mark the RoI of the sound event.</p> required <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> <p>The geometry of the mark used to mark the RoI of the sound event.</p> required"},{"location":"reference/models/#whombat.models.SoundEventFeature","title":"<code>whombat.models.SoundEventFeature</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event Feature model.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event_id</code> <code>int</code> <p>The id of the sound event.</p> required <code>feature_name_id</code> <code>int</code> <p>The id of the feature name.</p> required <code>value</code> <code>float</code> <p>The value of the feature.</p> required <p>Attributes:</p> Name Type Description <code>name</code> <code>AssociationProxy[str]</code> <p>The name of the feature.</p> <code>sound_event</code> <code>SoundEvent</code> <code>feature_name</code> <code>FeatureName</code>"},{"location":"reference/models/#clips","title":"Clips","text":""},{"location":"reference/models/#whombat.models.Clip","title":"<code>whombat.models.Clip</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the clip.</p> <code>recording</code> <code>Recording</code> <p>The recording to which the clip belongs.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('8e2570fa-dfc4-46e6-9ec3-5ff304a4a628')</code> <code>recording_id</code> <code>int</code> <p>The database id of the recording to which the clip belongs.</p> required <code>start_time</code> <code>float</code> <p>The start time of the clip in seconds.</p> required <code>end_time</code> <code>float</code> <p>The end time of the clip in seconds.</p> required <code>features</code> <code>list[ForwardRef(ClipFeature)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code>"},{"location":"reference/models/#whombat.models.ClipFeature","title":"<code>whombat.models.ClipFeature</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Feature Model.</p> <p>Parameters:</p> Name Type Description Default <code>clip_id</code> <code>int</code> <p>The database id of the clip to which the feature belongs.</p> required <code>feature_name_id</code> <code>int</code> <p>The database id of the feature name of the feature.</p> required <code>value</code> <code>float</code> <p>The value of the feature.</p> required <p>Attributes:</p> Name Type Description <code>name</code> <code>AssociationProxy[str]</code> <p>The name of the feature.</p> <code>feature_name</code> <code>FeatureName</code> <code>clip</code> <code>Clip</code>"},{"location":"reference/models/#annotation","title":"Annotation","text":""},{"location":"reference/models/#sound-event-annotation","title":"Sound Event Annotation","text":""},{"location":"reference/models/#whombat.models.SoundEventAnnotation","title":"<code>whombat.models.SoundEventAnnotation</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event Annotation model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the annotation.</p> <code>clip_annotation</code> <code>ForwardRef(ClipAnnotation)</code> <p>The clip annotation to which the annotation belongs.</p> <code>created_by</code> <code>User | None</code> <p>The user who created the annotation.</p> <code>sound_event</code> <code>SoundEvent</code> <p>The sound event annotated by the annotation.</p> <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>notes</code> <code>list[Note]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_annotation_notes</code> <code>list[ForwardRef(SoundEventAnnotationNote)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_event_annotation_tags</code> <code>list[ForwardRef(SoundEventAnnotationTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('1f4da5a3-ac07-456e-be0d-dd1f09aac532')</code> <code>clip_annotation_id</code> <code>int</code> <p>The id of the clip annotation to which the annotation belongs.</p> required <code>created_by_id</code> <code>int | None</code> <p>The id of the user who created the annotation.</p> required <code>sound_event_id</code> <code>int</code> <p>The id of the sound event annotated by the annotation.</p> required"},{"location":"reference/models/#whombat.models.SoundEventAnnotationTag","title":"<code>whombat.models.SoundEventAnnotationTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Annotation tag model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the annotation tag.</p> <code>sound_event_annotation</code> <code>SoundEventAnnotation</code> <p>The annotation to which the annotation tag belongs.</p> <code>tag</code> <code>Tag</code> <p>The tag attached to the annotation.</p> <code>created_by</code> <code>User | None</code> <p>The user who created the annotation.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event_annotation_id</code> <code>int</code> <p>The id of the annotation to which the annotation tag belongs.</p> required <code>tag_id</code> <code>int</code> <p>The id of the tag attached to the annotation.</p> required <code>created_by_id</code> <code>int | None</code> <p>The id of the user who created the annotation.</p> required"},{"location":"reference/models/#whombat.models.SoundEventAnnotationNote","title":"<code>whombat.models.SoundEventAnnotationNote</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event Annotation Note Model.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event_annotation_id</code> <code>int</code> <p>The id of the annotation to which the note belongs.</p> required <code>note_id</code> <code>int</code> <p>The id of the note associated with the annotation.</p> required <p>Attributes:</p> Name Type Description <code>sound_event_annotation</code> <code>SoundEventAnnotation</code> <p>The annotation to which the note belongs to.</p> <code>note</code> <code>Note</code> <p>The note associated with the annotation.</p>"},{"location":"reference/models/#clip-annotation","title":"Clip Annotation","text":""},{"location":"reference/models/#whombat.models.ClipAnnotation","title":"<code>whombat.models.ClipAnnotation</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Annotation Model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the annotation.</p> <code>clip</code> <code>Clip</code> <p>The clip being annotated.</p> <code>sound_events</code> <code>list[SoundEventAnnotation]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>notes</code> <code>list[Note]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clip_annotation_notes</code> <code>list[ForwardRef(ClipAnnotationNote)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clip_annotation_tags</code> <code>list[ForwardRef(ClipAnnotationTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>annotation_task</code> <code>ForwardRef(AnnotationTask)</code> <code>evaluation_sets</code> <code>list[ForwardRef(EvaluationSet)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>evaluation_set_annotations</code> <code>list[ForwardRef(EvaluationSetAnnotation)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('5366b357-2f99-47bb-9b5d-67ad1b77c2ba')</code> <code>clip_id</code> <code>int</code> <p>The database id of the clip being annotated.</p> required"},{"location":"reference/models/#whombat.models.ClipAnnotationTag","title":"<code>whombat.models.ClipAnnotationTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Annotation Tag Model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the annotation tag.</p> <code>tag</code> <code>Tag</code> <p>The tag attached to the annotation.</p> <code>created_by</code> <code>User | None</code> <p>The user who tagged the annotation.</p> <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The annotation being tagged.</p> <p>Parameters:</p> Name Type Description Default <code>clip_annotation_id</code> <code>int</code> <p>The database id of the annotation to which the tag belongs</p> required <code>tag_id</code> <code>int</code> <p>The database id of the tag attached to the annotation.</p> required <code>created_by_id</code> <code>int | None</code> <p>The database id of the user who tagged the annotation.</p> required"},{"location":"reference/models/#whombat.models.ClipAnnotationNote","title":"<code>whombat.models.ClipAnnotationNote</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Annotation Note Model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the annotation note.</p> <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The annotation to which the note belongs to.</p> <code>note</code> <code>Note</code> <p>The note associated with the annotation.</p> <p>Parameters:</p> Name Type Description Default <code>clip_annotation_id</code> <code>int</code> <p>The database id of the annotation to which the note belongs.</p> required <code>note_id</code> <code>int</code> <p>The database id of the note attached to the annotation.</p> required"},{"location":"reference/models/#annotation-task","title":"Annotation Task","text":""},{"location":"reference/models/#whombat.models.AnnotationTask","title":"<code>whombat.models.AnnotationTask</code>","text":"<p>               Bases: <code>Base</code></p> <p>Annotation Task model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the task.</p> <code>annotation_project</code> <code>ForwardRef(AnnotationProject)</code> <p>The project to which the task belongs.</p> <code>clip</code> <code>Clip</code> <p>The clip that needs to be annotated to complete this task.</p> <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The annotations of the clip this task pertains to.</p> <code>status_badges</code> <code>list[ForwardRef(AnnotationStatusBadge)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>annotation_project_id</code> <code>int</code> <p>The id of the project to which the task belongs.</p> required <code>clip_id</code> <code>int</code> <p>The id of the clip to be annotated.</p> required <code>clip_annotation_id</code> <code>int</code> <p>The id of the annotation created for the task.</p> required <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('fa41682c-f723-4aa7-9f9b-9e9ac58ade30')</code>"},{"location":"reference/models/#whombat.models.AnnotationStatusBadge","title":"<code>whombat.models.AnnotationStatusBadge</code>","text":"<p>               Bases: <code>Base</code></p> <p>Annotation status badge model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the status badge.</p> <code>annotation_task</code> <code>AnnotationTask</code> <p>The task to which the status badge belongs.</p> <code>user</code> <code>User | None</code> <p>The user to whom the status badge refers.</p> <p>Parameters:</p> Name Type Description Default <code>annotation_task_id</code> <code>int</code> <p>The id of the task to which the status badge belongs.</p> required <code>user_id</code> <code>UUID | None</code> <p>The id of the user to whom the status badge refers.</p> required <code>state</code> <code>AnnotationState</code> <p>The state of annotation attached to the badge.</p> required"},{"location":"reference/models/#annotation-project","title":"Annotation Project","text":""},{"location":"reference/models/#whombat.models.AnnotationProject","title":"<code>whombat.models.AnnotationProject</code>","text":"<p>               Bases: <code>Base</code></p> <p>Annotation Project model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('801892e4-085b-4723-a2c4-ca5e46e8b6c3')</code> <code>name</code> <code>str</code> <p>The name of the annotation project.</p> required <code>description</code> <code>str</code> <p>The description of the annotation project.</p> required <code>annotation_instructions</code> <code>str | None</code> <p>The instructions for annotators.</p> <code>None</code> <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>annotation_tasks</code> <code>list[ForwardRef(AnnotationTask)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>annotation_project_tags</code> <code>list[ForwardRef(AnnotationProjectTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code>"},{"location":"reference/models/#whombat.models.AnnotationProjectTag","title":"<code>whombat.models.AnnotationProjectTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Annotation Project Tag model.</p> <p>Parameters:</p> Name Type Description Default <code>annotation_project_id</code> <code>int</code> <p>The database id of the annotation project associated with the tag.</p> required <code>tag_id</code> <code>int</code> <p>The database id of the tag.</p> required <p>Attributes:</p> Name Type Description <code>annotation_project</code> <code>AnnotationProject</code> <p>The annotation project associated with the tag.</p> <code>tag</code> <code>Tag</code> <p>The tag associated with the annotation project.</p>"},{"location":"reference/models/#prediction","title":"Prediction","text":""},{"location":"reference/models/#sound-event-prediction","title":"Sound Event Prediction","text":""},{"location":"reference/models/#whombat.models.SoundEventPrediction","title":"<code>whombat.models.SoundEventPrediction</code>","text":"<p>               Bases: <code>Base</code></p> <p>Predicted Sound Event model.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The database id of the sound event prediction.</p> required <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('8eb4c7a8-b070-4b5a-9f79-9af0fc841017')</code> <code>sound_event_id</code> <code>int</code> <p>The database id of the predicted sound event.</p> required <code>clip_prediction_id</code> <code>int</code> <p>The database id of the clip prediction to which the sound event belongs.</p> required <code>score</code> <code>float</code> <p>The confidence score assigned to the sound event prediction.</p> <p>The confidence score assigned to the sound event prediction reflects the model's confidence in the presence and location of the sound event, but not in its identification. The individual score in each predicted tag provides the confidence in the identification.</p> required <p>Attributes:</p> Name Type Description <code>sound_event</code> <code>SoundEvent</code> <p>The sound event being predicted.</p> <code>clip_prediction</code> <code>ForwardRef(ClipPrediction)</code> <p>The clip prediction to which the sound event prediction belongs.</p> <code>tags</code> <code>list[ForwardRef(SoundEventPredictionTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p>"},{"location":"reference/models/#whombat.models.SoundEventPredictionTag","title":"<code>whombat.models.SoundEventPredictionTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event Prediction Tag model.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event_prediction_id</code> <code>int</code> <p>The database id of the sound event prediction associated with the</p> required <code>tag_id</code> <code>int</code> <p>The database id of the tag associated with the sound event.</p> required <code>score</code> <code>float</code> <p>The confidence score assigned to the tag.</p> <code>1.0</code> <p>Attributes:</p> Name Type Description <code>tag</code> <code>Tag</code> <p>The tag associated with the sound event prediction.</p>"},{"location":"reference/models/#clip-prediction","title":"Clip Prediction","text":""},{"location":"reference/models/#whombat.models.ClipPrediction","title":"<code>whombat.models.ClipPrediction</code>","text":"<p>               Bases: <code>Base</code></p> <p>Prediction Clip model.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The database id of the clip prediction.</p> required <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('734ba3a6-70c9-477b-9c30-669e0e25309b')</code> <code>clip_id</code> <code>int</code> <p>The database id of the clip to which the prediction belongs.</p> required <p>Attributes:</p> Name Type Description <code>clip</code> <code>Clip</code> <p>The clip over which the predictions were made.</p> <code>tags</code> <code>list[ForwardRef(ClipPredictionTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>sound_events</code> <code>list[SoundEventPrediction]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p>"},{"location":"reference/models/#whombat.models.ClipPredictionTag","title":"<code>whombat.models.ClipPredictionTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Prediction Tag model.</p> <p>Parameters:</p> Name Type Description Default <code>clip_prediction_id</code> <code>int</code> <p>The database id of the clip prediction associated with the tag.</p> required <code>tag_id</code> <code>int</code> <p>The database id of the tag associated with the clip prediction.</p> required <code>score</code> <code>float</code> <p>The confidence score of the prediction tag.</p> <p>The confidence score of the prediction tag represents the predictors's confidence in the assignment of this tag to the clip. The score is a number between 0 and 1, where 1 is the highest confidence and 0 is the lowest.</p> <code>1.0</code> <p>Attributes:</p> Name Type Description <code>tag</code> <code>Tag</code> <p>The tag associated with the clip prediction.</p>"},{"location":"reference/models/#model-run","title":"Model Run","text":""},{"location":"reference/models/#whombat.models.ModelRun","title":"<code>whombat.models.ModelRun</code>","text":"<p>               Bases: <code>Base</code></p> <p>Model Run Model.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the model run.</p> <code>clip_predictions</code> <code>list[ClipPrediction]</code> <p>List of the predictions made during the model run.</p> <code>evaluations</code> <code>list[Evaluation]</code> <p>List of evaluations for the model run.</p> <code>model_run_predictions</code> <code>list[ForwardRef(ModelRunPrediction)]</code> <code>model_run_evaluations</code> <code>list[ForwardRef(ModelRunEvaluation)]</code> <code>evaluation_sets</code> <code>list[ForwardRef(EvaluationSet)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>evaluation_set_model_runs</code> <code>list[ForwardRef(EvaluationSetModelRun)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('e0cf08b8-b509-4dd2-bc1a-e57e7aeb2aab')</code> <code>name</code> <code>str</code> <p>The name of the model used to generate the predictions.</p> required <code>version</code> <code>str</code> <p>The version of the model used to generate the predictions.</p> required <code>description</code> <code>str</code> <p>The description of the model.</p> required"},{"location":"reference/models/#user-run","title":"User Run","text":""},{"location":"reference/models/#whombat.models.UserRun","title":"<code>whombat.models.UserRun</code>","text":"<p>               Bases: <code>Base</code></p> <p>User Run User.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the user run.</p> <code>user</code> <code>ForwardRef(User)</code> <p>The user who created the user run.</p> <code>clip_predictions</code> <code>list[ClipPrediction]</code> <p>The list of clip predictions made by the user.</p> <code>evaluations</code> <code>list[Evaluation]</code> <p>List of evaluations for the user run.</p> <code>user_run_predictions</code> <code>list[ForwardRef(UserRunPrediction)]</code> <code>user_run_evaluations</code> <code>list[ForwardRef(UserRunEvaluation)]</code> <code>evaluation_sets</code> <code>list[ForwardRef(EvaluationSet)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>evaluation_set_user_runs</code> <code>list[ForwardRef(EvaluationSetUserRun)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('acfa747c-808f-465e-8f70-546791d9efc1')</code> <code>user_id</code> <code>int</code> <p>The database id of the user who created the user run.</p> required"},{"location":"reference/models/#evaluation","title":"Evaluation","text":""},{"location":"reference/models/#sound-event-evaluation","title":"Sound Event Evaluation","text":""},{"location":"reference/models/#whombat.models.SoundEventEvaluation","title":"<code>whombat.models.SoundEventEvaluation</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event Evaluation.</p> <p>Represents the evaluation of a predicted sound event against a ground truth annotation.</p> <p>This class stores the results of comparing a predicted sound event (from a model or user) to a corresponding annotated sound event (ground truth). It includes various metrics and scores to quantify the accuracy of the prediction.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the sound event evaluation.</p> <code>source</code> <code>SoundEventPrediction | None</code> <p>The predicted sound event object.</p> <code>target</code> <code>SoundEventAnnotation | None</code> <p>The target (ground truth) sound event annotation object.</p> <code>metrics</code> <code>list[ForwardRef(SoundEventEvaluationMetric)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>clip_evaluation</code> <code>ForwardRef(ClipEvaluation)</code> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('446eaeb2-c9eb-4401-b0cb-8d2be756aea2')</code> <code>clip_evaluation_id</code> <code>int</code> <p>The ID of the clip evaluation to which this evaluation belongs.</p> required <code>source_id</code> <code>int | None</code> <p>The id of the predicted sound event.</p> required <code>target_id</code> <code>int | None</code> <p>The ID of the target (ground truth) sound event annotation.</p> required <code>affinity</code> <code>float</code> <p>The affinity score between the prediction and the ground truth.</p> <p>This score measures the geometric similarity between the predicted  and true sound event regions, without considering semantic information.</p> required <code>score</code> <code>float</code> <p>The overall score of the match between prediction and ground truth.</p> required"},{"location":"reference/models/#whombat.models.SoundEventEvaluationMetric","title":"<code>whombat.models.SoundEventEvaluationMetric</code>","text":"<p>               Bases: <code>Base</code></p> <p>Sound Event Evaluation Metric model.</p> <p>Represents a specific metric used to evaluate a sound event prediction.</p> <p>This class stores the value of a single evaluation metric (e.g., precision, recall, F1-score) calculated for a SoundEventEvaluation. It links the metric value to its name (stored in the FeatureName table) and the corresponding evaluation.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database ID of the metric.</p> <code>name</code> <code>AssociationProxy[str]</code> <p>The name of the metric (accessed via the FeatureName relationship).</p> <code>feature_name</code> <code>FeatureName</code> <p>The FeatureName object associated with this metric.</p> <code>sound_event_evaluation</code> <code>SoundEventEvaluation</code> <p>The SoundEventEvaluation object to which this metric belongs.</p> <p>Parameters:</p> Name Type Description Default <code>sound_event_evaluation_id</code> <code>int</code> <p>The ID of the sound event evaluation to which this metric belongs.</p> required <code>feature_name_id</code> <code>int</code> <p>The ID of the feature name associated with this metric.</p> required <code>value</code> <code>float</code> <p>The value of the metric.</p> required"},{"location":"reference/models/#clip-evaluation","title":"Clip Evaluation","text":""},{"location":"reference/models/#whombat.models.ClipEvaluation","title":"<code>whombat.models.ClipEvaluation</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Evaluation Model.</p> <p>Represents the evaluation of a clip-level prediction against ground truth.</p> <p>This class compares a prediction made on an audio clip to the corresponding ground truth annotation for that clip. It considers both clip-level tags and sound event predictions within the clip, providing an overall score and detailed metrics for the evaluation.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database ID of the clip evaluation.</p> <code>clip_annotation</code> <code>ClipAnnotation</code> <p>The ground truth clip annotation object.</p> <code>clip_prediction</code> <code>ClipPrediction</code> <p>The clip prediction object.</p> <code>sound_event_evaluations</code> <code>list[SoundEventEvaluation]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>metrics</code> <code>list[ForwardRef(ClipEvaluationMetric)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>evaluation</code> <code>ForwardRef(Evaluation)</code> <p>The overall evaluation object to which this clip evaluation belongs.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('571a46d3-46eb-4282-b4e1-a36cf2265dbd')</code> <code>evaluation_id</code> <code>int</code> <p>The ID of the overall evaluation to which this clip evaluation belongs.</p> required <code>clip_annotation_id</code> <code>int</code> <p>The ID of the ground truth clip annotation.</p> required <code>clip_prediction_id</code> <code>int</code> <p>The ID of the clip prediction.</p> required <code>score</code> <code>float</code> <p>The overall score of the clip prediction.</p> required"},{"location":"reference/models/#whombat.models.ClipEvaluationMetric","title":"<code>whombat.models.ClipEvaluationMetric</code>","text":"<p>               Bases: <code>Base</code></p> <p>Clip Evaluation Metric.</p> <p>Represents a specific metric used to evaluate a clip-level prediction.</p> <p>This class stores the value of a single evaluation metric (e.g., accuracy, precision, recall) calculated for a ClipEvaluation. It links the metric value to its name (stored in the FeatureName table) and the corresponding clip evaluation.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database ID of the metric.</p> <code>name</code> <code>AssociationProxy[str]</code> <p>The name of the metric (accessed via the FeatureName relationship).</p> <code>feature_name</code> <code>FeatureName</code> <p>The FeatureName object associated with this metric.</p> <code>clip_evaluation</code> <code>ClipEvaluation</code> <p>The clip evaluation to which the metric belongs.</p> <p>Parameters:</p> Name Type Description Default <code>clip_evaluation_id</code> <code>int</code> <p>The ID of the clip evaluation to which this metric belongs.</p> required <code>feature_name_id</code> <code>int</code> <p>The ID of the feature name associated with this metric.</p> required <code>value</code> <code>float</code> <p>The value of the metric.</p> required"},{"location":"reference/models/#evaluation_1","title":"Evaluation","text":""},{"location":"reference/models/#whombat.models.Evaluation","title":"<code>whombat.models.Evaluation</code>","text":"<p>               Bases: <code>Base</code></p> <p>Evaluation.</p> <p>Represents a complete evaluation of a model's predictions.</p> <p>This class stores high-level information about the evaluation of a set of predictions compared to ground truth annotations. It includes an overall score, aggregated metrics, and a breakdown of individual clip evaluations. This provides a comprehensive overview of the model's performance on a specific task (e.g., sound event detection).</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the evaluation.</p> <code>metrics</code> <code>list[ForwardRef(EvaluationMetric)]</code> <p>A list of metrics associated with the overall evaluation.</p> <code>clip_evaluations</code> <code>list[ClipEvaluation]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('8c240d0f-d68c-4ff4-95ab-6d129c6d5c4e')</code> <code>task</code> <code>str</code> <p>The specific task that was evaluated (e.g., 'sound_event_detection').</p> required <code>score</code> <code>float</code> <p>The overall score of the evaluation.</p> <code>0</code>"},{"location":"reference/models/#whombat.models.EvaluationMetric","title":"<code>whombat.models.EvaluationMetric</code>","text":"<p>               Bases: <code>Base</code></p> <p>Evaluation Metric.</p> <p>Represents a specific metric associated with an overall evaluation.</p> <p>This class stores the value of an evaluation metric (e.g., overall accuracy, macro F1-score) calculated for an Evaluation. It links the metric value to its name (from the FeatureName table) and the corresponding evaluation, providing insights into the model's performance on a broader level.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database ID of the metric.</p> <code>name</code> <code>AssociationProxy[str]</code> <p>The name of the metric (accessed via the FeatureName relationship).</p> <code>feature_name</code> <code>FeatureName</code> <p>The FeatureName object associated with this metric.</p> <code>evaluation</code> <code>Evaluation</code> <p>The Evaluation object to which this metric belongs.</p> <p>Parameters:</p> Name Type Description Default <code>evaluation_id</code> <code>int</code> <p>The ID of the evaluation to which this metric belongs.</p> required <code>feature_name_id</code> <code>int</code> <p>The ID of the feature name associated with this metric.</p> required <code>value</code> <code>float</code> <p>The value of the metric.</p> required"},{"location":"reference/models/#evaluation-set","title":"Evaluation Set","text":""},{"location":"reference/models/#whombat.models.EvaluationSet","title":"<code>whombat.models.EvaluationSet</code>","text":"<p>               Bases: <code>Base</code></p> <p>Evaluation Set Model.</p> <p>Represents a collection of data and settings for evaluating model predictions.</p> <p>An EvaluationSet defines the parameters and data required for a specific evaluation task. It includes:</p> <ol> <li>Target Tags: The list of sound tags that are the focus of the    evaluation.</li> <li>Prediction Task: The type of prediction being evaluated (e.g., sound    event detection).</li> <li>Ground Truth Examples: A set of clip annotations serving as the    ground truth for comparison.</li> </ol> <p>This allows for structured and standardized evaluation of different models and prediction types.</p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database ID of the evaluation set.</p> <code>clip_annotations</code> <code>list[ForwardRef(ClipAnnotation)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('e168d9ce-ea59-4d9e-b946-c8cfd7a59e3d')</code> <code>name</code> <code>str</code> <p>A unique name for the evaluation set.</p> required <code>description</code> <code>str</code> <p>A description of the evaluation set.</p> required <code>task</code> <code>str</code> <p>The type of prediction task being evaluated.</p> <p>For example: 'sound_event_detection', 'acoustic_scene_classification', etc.</p> required <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>model_runs</code> <code>list[ModelRun]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>user_runs</code> <code>list[UserRun]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>evaluation_set_annotations</code> <code>list[ForwardRef(EvaluationSetAnnotation)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>evaluation_set_tags</code> <code>list[ForwardRef(EvaluationSetTag)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>evaluation_set_model_runs</code> <code>list[ForwardRef(EvaluationSetModelRun)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>evaluation_set_user_runs</code> <code>list[ForwardRef(EvaluationSetUserRun)]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code>"},{"location":"reference/models/#whombat.models.EvaluationSetTag","title":"<code>whombat.models.EvaluationSetTag</code>","text":"<p>               Bases: <code>Base</code></p> <p>Evaluation Set Tag model.</p> <p>Parameters:</p> Name Type Description Default <code>evaluation_set_id</code> <code>int</code> required <code>tag_id</code> <code>int</code> required <p>Attributes:</p> Name Type Description <code>evaluation_set</code> <code>EvaluationSet</code> <code>tag</code> <code>Tag</code>"},{"location":"reference/models/#whombat.models.EvaluationSetAnnotation","title":"<code>whombat.models.EvaluationSetAnnotation</code>","text":"<p>               Bases: <code>Base</code></p> <p>Evaluation Set Annotation Model.</p> <p>Parameters:</p> Name Type Description Default <code>evaluation_set_id</code> <code>int</code> required <code>clip_annotation_id</code> <code>int</code> required <p>Attributes:</p> Name Type Description <code>evaluation_set</code> <code>EvaluationSet</code> <code>clip_annotation</code> <code>ClipAnnotation</code>"},{"location":"reference/schemas/","title":"Schemas","text":""},{"location":"reference/schemas/#whombat.schemas","title":"<code>whombat.schemas</code>","text":"<p>Schemas for Whombat data models.</p> <p>The Whombat Python API returns these schemas to the user, and they are the main way that the user interacts with the data.</p> <p>Schemas are defined using Pydantic, and are used to validate data before it is inserted into the database, and also to validate data before it is returned to the user.</p> <p>Most database models have multiple schemas, a main schema that is used to return data to the user, and a create and update schema that is used to validate data before it is inserted into the database.</p> <p>Modules:</p> Name Description <code>annotation_projects</code> <p>Schemas for Annotation Projects.</p> <code>annotation_tasks</code> <p>Schemas for annotation tasks.</p> <code>audio</code> <p>Schemas for spectrograms.</p> <code>base</code> <p>Base class to use for all schemas in whombat.</p> <code>clip_annotations</code> <p>Schemas for Clip Annotations related objects.</p> <code>clip_evaluations</code> <p>Schemas for Clip Evaluation related objects.</p> <code>clip_predictions</code> <p>Schemas for Clip Prediction related objects.</p> <code>clips</code> <p>Schemas for handling clips.</p> <code>datasets</code> <p>Schemas for handling Datasets.</p> <code>evaluation_sets</code> <p>Schemas for handling Evaluation Sets.</p> <code>evaluations</code> <p>Schemas for Evaluations.</p> <code>features</code> <p>Schemas for handling Features.</p> <code>model_runs</code> <p>Schemas for handling Prediction Runs.</p> <code>notes</code> <p>Schemas for handling Notes.</p> <code>plugin</code> <p>Schemas for handling Plugin information.</p> <code>recordings</code> <p>Schemas for handling Recordings.</p> <code>sound_event_annotations</code> <p>Schemas for Sound Event Annotation related objects.</p> <code>sound_event_evaluations</code> <p>Schemas for Sound Event Evaluation related objects.</p> <code>sound_event_predictions</code> <p>Schemas for Sound Event Predictions related objects.</p> <code>sound_events</code> <p>Schemas for sound events.</p> <code>spectrograms</code> <p>Schemas for spectrograms.</p> <code>tags</code> <p>Schemas for handling Tags.</p> <code>user_runs</code> <p>Schemas for handling User Runs.</p> <code>users</code> <p>Schemas for User objects.</p> <p>Classes:</p> Name Description <code>AmplitudeParameters</code> <p>Parameters for amplitude clamping.</p> <code>AnnotationProject</code> <p>Schema for an annotation project.</p> <code>AnnotationProjectCreate</code> <p>Schema for creating an annotation project.</p> <code>AnnotationProjectUpdate</code> <p>Schema for updating an annotation project.</p> <code>AnnotationStatusBadge</code> <p>Schema for a task status badge.</p> <code>AnnotationStatusBadgeUpdate</code> <p>Schema for updating a task status badge.</p> <code>AnnotationTask</code> <p>Schema for a task.</p> <code>AnnotationTaskCreate</code> <p>Schema for creating a new task.</p> <code>AnnotationTaskNote</code> <p>Schema for a task note.</p> <code>AnnotationTaskUpdate</code> <p>Schema for updating a task.</p> <code>AudioParameters</code> <p>Parameters for audio loading.</p> <code>BaseSchema</code> <p>Base class for all schemas in whombat.</p> <code>Clip</code> <p>Schema for Clip objects returned to the user.</p> <code>ClipAnnotation</code> <p>Schema for an ClipAnnotation.</p> <code>ClipAnnotationCreate</code> <p>Schema for data required to create an ClipAnnotation.</p> <code>ClipAnnotationNote</code> <p>Schema for a ClipAnnotationNote.</p> <code>ClipAnnotationTag</code> <p>Schema for an ClipAnnotationTag.</p> <code>ClipAnnotationUpdate</code> <p>Schema for data required to update an ClipAnnotation.</p> <code>ClipCreate</code> <p>Schema for creating a clip.</p> <code>ClipEvaluation</code> <code>ClipEvaluationCreate</code> <p>Schema for creating a new Clip Evaluation.</p> <code>ClipEvaluationUpdate</code> <p>Schema for updating an existing Clip Evaluation.</p> <code>ClipPrediction</code> <p>Schema for a clip prediction.</p> <code>ClipPredictionCreate</code> <p>Schema for creating a new clip prediction.</p> <code>ClipPredictionTag</code> <p>Schema for a clip prediction tag.</p> <code>ClipPredictionUpdate</code> <p>Schema for updating a clip prediction.</p> <code>ClipUpdate</code> <p>Schema for updating a clip.</p> <code>Dataset</code> <p>Schema for Dataset objects returned to the user.</p> <code>DatasetCreate</code> <p>Schema for Dataset objects created by the user.</p> <code>DatasetFile</code> <p>Schema for DatasetFile objects returned to the user.</p> <code>DatasetRecording</code> <p>Schema for DatasetRecording objects returned to the user.</p> <code>DatasetRecordingCreate</code> <p>Schema for DatasetRecording objects created by the user.</p> <code>DatasetUpdate</code> <p>Schema for Dataset objects updated by the user.</p> <code>Evaluation</code> <p>Evaluation schema.</p> <code>EvaluationCreate</code> <p>Evaluation creation schema.</p> <code>EvaluationSet</code> <p>Schema for EvaluationSet objects returned to the user.</p> <code>EvaluationSetCreate</code> <p>Schema for creating EvaluationSet objects.</p> <code>EvaluationSetUpdate</code> <p>Schema for updating EvaluationSet objects.</p> <code>EvaluationUpdate</code> <p>Evaluation update schema.</p> <code>Feature</code> <p>Schema for Feature objects returned to the user.</p> <code>FeatureName</code> <p>Schema for FeatureName objects returned to the user.</p> <code>FeatureNameCreate</code> <p>Schema for FeatureName objects created by the user.</p> <code>FeatureNameUpdate</code> <p>Schema for FeatureName objects updated by the user.</p> <code>FileState</code> <p>The state of a file in a dataset.</p> <code>ModelRun</code> <p>Schema of a model run as returned to the user.</p> <code>ModelRunCreate</code> <p>Model Run creation schema.</p> <code>ModelRunUpdate</code> <p>Model Run update schema.</p> <code>Note</code> <p>Schema for Note objects returned to the user.</p> <code>NoteCreate</code> <p>Schema for creating notes.</p> <code>NoteUpdate</code> <p>Schema for updating notes.</p> <code>Page</code> <p>A page of results.</p> <code>PluginInfo</code> <p>Plugin information.</p> <code>PredictedTag</code> <p>Schema for PredictedTag objects returned to the user.</p> <code>Recording</code> <p>Schema for Recording objects returned to the user.</p> <code>RecordingCreate</code> <p>Data for Recording creation.</p> <code>RecordingNote</code> <p>Schema for RecordingNote objects.</p> <code>RecordingTag</code> <p>Schema for RecordingTag objects.</p> <code>RecordingUpdate</code> <p>Schema for Recording objects updated by the user.</p> <code>STFTParameters</code> <p>Parameters for STFT computation.</p> <code>SimpleUser</code> <p>Schema for User objects returned to the user.</p> <code>SoundEvent</code> <p>Public schema for handling sound events.</p> <code>SoundEventAnnotation</code> <p>Schema for an SoundEventAnnotation.</p> <code>SoundEventAnnotationCreate</code> <p>Schema for data required to create an SoundEventAnnotation.</p> <code>SoundEventAnnotationNote</code> <p>Schema for a SoundEventAnnotationNote.</p> <code>SoundEventAnnotationTag</code> <p>Schema for a SoundEventAnnotationTag.</p> <code>SoundEventAnnotationUpdate</code> <p>Schema for data required to update an SoundEventAnnotation.</p> <code>SoundEventCreate</code> <p>Schema for SoundEvent objects created by the user.</p> <code>SoundEventEvaluation</code> <p>Schema for a sound event evaluation.</p> <code>SoundEventEvaluationCreate</code> <p>Schema for creating a new sound event evaluation.</p> <code>SoundEventEvaluationUpdate</code> <p>Schema for updating a sound event evaluation.</p> <code>SoundEventPrediction</code> <p>Schema for a sound event prediction.</p> <code>SoundEventPredictionCreate</code> <p>Schema for creating a new sound event prediction.</p> <code>SoundEventPredictionTag</code> <p>Schema for a sound event prediction tag.</p> <code>SoundEventPredictionUpdate</code> <p>Schema for updating a sound event prediction.</p> <code>SoundEventUpdate</code> <p>Schema for SoundEvent objects updated by the user.</p> <code>SpectrogramParameters</code> <p>Parameters for spectrogram computation.</p> <code>Tag</code> <p>Schema for Tag objects returned to the user.</p> <code>TagCount</code> <p>Schema for TagCount objects returned to the user.</p> <code>TagCreate</code> <p>Schema for creating Tag objects.</p> <code>TagUpdate</code> <p>Schema for updating Tag objects.</p> <code>User</code> <p>Schema for User objects returned to the user.</p> <code>UserCreate</code> <p>Schema for User objects created by the user.</p> <code>UserRun</code> <p>Schema of a user run as returned to the user.</p> <code>UserRunCreate</code> <p>Model Run creation schema.</p> <code>UserRunUpdate</code> <p>Schema for updating a user run.</p> <code>UserUpdate</code> <p>Schema for User objects updated by the user.</p> <p>Attributes:</p> Name Type Description <code>Scale</code> <code>Window</code>"},{"location":"reference/schemas/#whombat.schemas-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Scale","title":"<code>Scale = Literal['amplitude', 'power', 'dB']</code>  <code>module-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.Window","title":"<code>Window = Literal['boxcar', 'triang', 'bartlett', 'flattop', 'parzen', 'bohman', 'blackman', 'blackmanharris', 'nuttall', 'barthann', 'hamming', 'hann', 'kaiser']</code>  <code>module-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas-classes","title":"Classes","text":""},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters","title":"<code>AmplitudeParameters</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Parameters for amplitude clamping.</p> <p>Parameters:</p> Name Type Description Default <code>scale</code> <code>Literal['amplitude', 'power', 'dB']</code> <p>Scale to use for spectrogram computation.</p> <code>'dB'</code> <code>clamp</code> <code>bool</code> <p>Whether to clamp amplitude values.</p> <code>False</code> <code>min_dB</code> <code>float</code> <p>Minimum amplitude value.</p> <code>-100.0</code> <code>max_dB</code> <code>float</code> <p>Maximum amplitude value.</p> <code>0</code> <code>normalize</code> <code>bool</code> <p>Whether to normalize spectrogram before amplitude scaling.</p> <p>If <code>True</code>, the spectrogram will be normalized to the range [0, 1] before amplitude scaling. In particular dB values are relative to the maximum amplitude value in the spectrogram, and not the maximum possible amplitude value of the recorder.</p> <p>This can have the effect of making the spectrogram appear noisier than it actually is, since the maximum amplitude value in the spectrogram may be much lower than the maximum possible amplitude value of the recorder.</p> <p>Also, when visualizing spectrograms in clips, the amplitude scale will be relative to the maximum amplitude value in the clip, and not the maximum of the recording as a whole. This can make it difficult to compare amplitude levels across clips, and will create artificial seams between clips when visualizing spectrograms in recordings.</p> <code>True</code> <p>Methods:</p> Name Description <code>check_db_are_negative</code> <p>Check that min_dB and max_dB are non positive.</p> <code>check_min_dB_and_max_dB</code> <p>Check that min_dB is less than max_dB.</p> <p>Attributes:</p> Name Type Description <code>clamp</code> <code>bool</code> <p>Whether to clamp amplitude values.</p> <code>max_dB</code> <code>float</code> <p>Maximum amplitude value.</p> <code>min_dB</code> <code>float</code> <p>Minimum amplitude value.</p> <code>normalize</code> <code>bool</code> <p>Whether to normalize spectrogram before amplitude scaling.</p> <code>scale</code> <code>Scale</code> <p>Scale to use for spectrogram computation.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.clamp","title":"<code>clamp = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether to clamp amplitude values.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.max_dB","title":"<code>max_dB = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Maximum amplitude value.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.min_dB","title":"<code>min_dB = -100.0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Minimum amplitude value.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.normalize","title":"<code>normalize = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether to normalize spectrogram before amplitude scaling.</p> <p>If <code>True</code>, the spectrogram will be normalized to the range [0, 1] before amplitude scaling. In particular dB values are relative to the maximum amplitude value in the spectrogram, and not the maximum possible amplitude value of the recorder.</p> <p>This can have the effect of making the spectrogram appear noisier than it actually is, since the maximum amplitude value in the spectrogram may be much lower than the maximum possible amplitude value of the recorder.</p> <p>Also, when visualizing spectrograms in clips, the amplitude scale will be relative to the maximum amplitude value in the clip, and not the maximum of the recording as a whole. This can make it difficult to compare amplitude levels across clips, and will create artificial seams between clips when visualizing spectrograms in recordings.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.scale","title":"<code>scale = 'dB'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Scale to use for spectrogram computation.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters-functions","title":"Functions","text":""},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.check_db_are_negative","title":"<code>check_db_are_negative(value)</code>  <code>classmethod</code>","text":"<p>Check that min_dB and max_dB are non positive.</p>"},{"location":"reference/schemas/#whombat.schemas.AmplitudeParameters.check_min_dB_and_max_dB","title":"<code>check_min_dB_and_max_dB()</code>","text":"<p>Check that min_dB is less than max_dB.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject","title":"<code>AnnotationProject</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>UUID of the annotation project.</p> required <code>id</code> <code>int</code> <p>Database ID of the annotation project.</p> required <code>name</code> <code>str</code> <p>Name of the annotation project.</p> required <code>description</code> <code>str</code> <p>A description of the annotation project.</p> required <code>annotation_instructions</code> <code>str | None</code> <p>Project instructions for annotating.</p> <code>None</code> <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>annotation_instructions</code> <code>str | None</code> <p>Project instructions for annotating.</p> <code>description</code> <code>str</code> <p>A description of the annotation project.</p> <code>id</code> <code>int</code> <p>Database ID of the annotation project.</p> <code>name</code> <code>str</code> <p>Name of the annotation project.</p> <code>tags</code> <code>list[Tag]</code> <p>Tags to be used throughout the annotation project.</p> <code>uuid</code> <code>UUID</code> <p>UUID of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationProject.annotation_instructions","title":"<code>annotation_instructions = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Project instructions for annotating.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject.description","title":"<code>description</code>  <code>instance-attribute</code>","text":"<p>A description of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>Name of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tags to be used throughout the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProject.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectCreate","title":"<code>AnnotationProjectCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Name of the annotation project.</p> required <code>description</code> <code>str</code> <p>A description of the annotation project.</p> required <code>annotation_instructions</code> <code>str | None</code> <p>Project instructions for annotating.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>annotation_instructions</code> <code>str | None</code> <p>Project instructions for annotating.</p> <code>description</code> <code>str</code> <p>A description of the annotation project.</p> <code>name</code> <code>str</code> <p>Name of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectCreate.annotation_instructions","title":"<code>annotation_instructions = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Project instructions for annotating.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectCreate.description","title":"<code>description</code>  <code>instance-attribute</code>","text":"<p>A description of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectCreate.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>Name of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectUpdate","title":"<code>AnnotationProjectUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating an annotation project.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>Name of the annotation project.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>A description of the annotation project.</p> <code>None</code> <code>annotation_instructions</code> <code>str | None</code> <p>Project instructions for annotating.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>annotation_instructions</code> <code>str | None</code> <p>Project instructions for annotating.</p> <code>description</code> <code>str | None</code> <p>A description of the annotation project.</p> <code>name</code> <code>str | None</code> <p>Name of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectUpdate.annotation_instructions","title":"<code>annotation_instructions = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Project instructions for annotating.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectUpdate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A description of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationProjectUpdate.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Name of the annotation project.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadge","title":"<code>AnnotationStatusBadge</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a task status badge.</p> <p>Parameters:</p> Name Type Description Default <code>state</code> <code>AnnotationState</code> <p>State of the task.</p> required <code>user</code> <code>SimpleUser | None</code> <p>User to whom the status badge refers.</p> required <p>Attributes:</p> Name Type Description <code>state</code> <code>AnnotationState</code> <p>State of the task.</p> <code>user</code> <code>SimpleUser | None</code> <p>User to whom the status badge refers.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadge-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadge.state","title":"<code>state</code>  <code>instance-attribute</code>","text":"<p>State of the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadge.user","title":"<code>user</code>  <code>instance-attribute</code>","text":"<p>User to whom the status badge refers.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadgeUpdate","title":"<code>AnnotationStatusBadgeUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating a task status badge.</p> <p>Parameters:</p> Name Type Description Default <code>state</code> <code>AnnotationState | None</code> <p>State of the task.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>state</code> <code>AnnotationState | None</code> <p>State of the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadgeUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationStatusBadgeUpdate.state","title":"<code>state = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>State of the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTask","title":"<code>AnnotationTask</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a task.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>UUID of the task.</p> required <code>id</code> <code>int</code> <p>Database ID of the task.</p> required <code>status_badges</code> <code>list[AnnotationStatusBadge]</code> <p>Status badges for the task.</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Database ID of the task.</p> <code>status_badges</code> <code>list[AnnotationStatusBadge]</code> <p>Status badges for the task.</p> <code>uuid</code> <code>UUID</code> <p>UUID of the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTask-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationTask.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTask.status_badges","title":"<code>status_badges</code>  <code>instance-attribute</code>","text":"<p>Status badges for the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTask.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskCreate","title":"<code>AnnotationTaskCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating a new task.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskNote","title":"<code>AnnotationTaskNote</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a task note.</p> <p>Parameters:</p> Name Type Description Default <code>note</code> <code>Note</code> <p>Note attached to this annotation.</p> required <code>task_annotation_uuid</code> <code>UUID</code> <p>UUID of the task annotation this note is attached to.</p> required <p>Attributes:</p> Name Type Description <code>note</code> <code>Note</code> <p>Note attached to this annotation.</p> <code>task_annotation_uuid</code> <code>UUID</code> <p>UUID of the task annotation this note is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskNote-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskNote.note","title":"<code>note</code>  <code>instance-attribute</code>","text":"<p>Note attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskNote.task_annotation_uuid","title":"<code>task_annotation_uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the task annotation this note is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskUpdate","title":"<code>AnnotationTaskUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating a task.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | None</code> <code>None</code> <p>Attributes:</p> Name Type Description <code>uuid</code> <code>UUID | None</code>"},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.AnnotationTaskUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.AudioParameters","title":"<code>AudioParameters</code>","text":"<p>               Bases: <code>ResamplingParameters</code>, <code>FilteringParameters</code></p> <p>Parameters for audio loading.</p>"},{"location":"reference/schemas/#whombat.schemas.BaseSchema","title":"<code>BaseSchema</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Base class for all schemas in whombat.</p> <p>All schemas should inherit from this class, either directly or indirectly.</p> <p>Parameters:</p> Name Type Description Default <code>created_on</code> <code>datetime</code> <code>datetime.datetime(2025, 10, 31, 19, 32, 3, 882838, tzinfo=datetime.timezone.utc)</code> <p>Attributes:</p> Name Type Description <code>created_on</code> <code>datetime</code> <code>model_config</code>"},{"location":"reference/schemas/#whombat.schemas.BaseSchema-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.BaseSchema.created_on","title":"<code>created_on = Field(repr=False, default_factory=(lambda: datetime.datetime.now(datetime.timezone.utc)))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.BaseSchema.model_config","title":"<code>model_config = ConfigDict(from_attributes=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.Clip","title":"<code>Clip</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for Clip objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The unique identifier of the clip.</p> required <code>id</code> <code>int</code> <p>The database id of the clip.</p> required <code>start_time</code> <code>float</code> <p>The start time of the clip.</p> required <code>end_time</code> <code>float</code> <p>The end time of the clip.</p> required <code>recording</code> <code>Recording</code> <p>Recording information for the clip.</p> required <code>features</code> <code>list[Feature]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>end_time</code> <code>float</code> <p>The end time of the clip.</p> <code>features</code> <code>list[Feature]</code> <p>The features associated with the clip.</p> <code>id</code> <code>int</code> <p>The database id of the clip.</p> <code>recording</code> <code>Recording</code> <p>Recording information for the clip.</p> <code>start_time</code> <code>float</code> <p>The start time of the clip.</p> <code>uuid</code> <code>UUID</code> <p>The unique identifier of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Clip-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Clip.end_time","title":"<code>end_time</code>  <code>instance-attribute</code>","text":"<p>The end time of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Clip.features","title":"<code>features = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The features associated with the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Clip.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The database id of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Clip.recording","title":"<code>recording</code>  <code>instance-attribute</code>","text":"<p>Recording information for the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Clip.start_time","title":"<code>start_time</code>  <code>instance-attribute</code>","text":"<p>The start time of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Clip.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The unique identifier of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation","title":"<code>ClipAnnotation</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for an ClipAnnotation.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> required <code>id</code> <code>int</code> <p>Database ID of this annotation.</p> required <code>clip</code> <code>Clip</code> <p>Clip this annotation is attached to.</p> required <code>notes</code> <code>list[Note]</code> <p>Notes attached to this annotation.</p> <code>&lt;dynamic&gt;</code> <code>tags</code> <code>list[Tag]</code> <p>Tags attached to this annotation.</p> <code>&lt;dynamic&gt;</code> <code>sound_events</code> <code>list[SoundEventAnnotation]</code> <p>Annotated sound events attached to this clip.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>clip</code> <code>Clip</code> <p>Clip this annotation is attached to.</p> <code>id</code> <code>int</code> <p>Database ID of this annotation.</p> <code>notes</code> <code>list[Note]</code> <code>sound_events</code> <code>list[SoundEventAnnotation]</code> <code>tags</code> <code>list[Tag]</code> <code>uuid</code> <code>UUID</code>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation.clip","title":"<code>clip</code>  <code>instance-attribute</code>","text":"<p>Clip this annotation is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation.notes","title":"<code>notes = Field(default_factory=list, description='Notes attached to this annotation.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation.sound_events","title":"<code>sound_events = Field(default_factory=list, description='Annotated sound events attached to this clip.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation.tags","title":"<code>tags = Field(default_factory=list, description='Tags attached to this annotation.', alias_priority=10000)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotation.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationCreate","title":"<code>ClipAnnotationCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for data required to create an ClipAnnotation.</p> <p>Parameters:</p> Name Type Description Default <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>tags</code> <code>list[Tag]</code>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationCreate.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationNote","title":"<code>ClipAnnotationNote</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a ClipAnnotationNote.</p> <p>Parameters:</p> Name Type Description Default <code>note</code> <code>Note</code> <p>Note attached to this annotation.</p> required <code>clip_annotation_uuid</code> <code>UUID</code> <p>UUID of the ClipAnnotation this note is attached to.</p> required <p>Attributes:</p> Name Type Description <code>clip_annotation_uuid</code> <code>UUID</code> <p>UUID of the ClipAnnotation this note is attached to.</p> <code>note</code> <code>Note</code> <p>Note attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationNote-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationNote.clip_annotation_uuid","title":"<code>clip_annotation_uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the ClipAnnotation this note is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationNote.note","title":"<code>note</code>  <code>instance-attribute</code>","text":"<p>Note attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationTag","title":"<code>ClipAnnotationTag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for an ClipAnnotationTag.</p> <p>Parameters:</p> Name Type Description Default <code>created_by</code> <code>SimpleUser | None</code> <p>User who created this annotation tag.</p> required <code>tag</code> <code>Tag</code> <p>Tag attached to this annotation.</p> required <code>clip_annotation_uuid</code> <code>UUID</code> <p>UUID of the ClipAnnotation this tag is attached to.</p> required <p>Attributes:</p> Name Type Description <code>clip_annotation_uuid</code> <code>UUID</code> <p>UUID of the ClipAnnotation this tag is attached to.</p> <code>created_by</code> <code>SimpleUser | None</code> <p>User who created this annotation tag.</p> <code>tag</code> <code>Tag</code> <p>Tag attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationTag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationTag.clip_annotation_uuid","title":"<code>clip_annotation_uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the ClipAnnotation this tag is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationTag.created_by","title":"<code>created_by</code>  <code>instance-attribute</code>","text":"<p>User who created this annotation tag.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationTag.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>Tag attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationUpdate","title":"<code>ClipAnnotationUpdate</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for data required to update an ClipAnnotation.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | None</code> <p>UUID of the annotation.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>uuid</code> <code>UUID | None</code> <p>UUID of the annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipAnnotationUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>UUID of the annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipCreate","title":"<code>ClipCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating a clip.</p> <p>Parameters:</p> Name Type Description Default <code>start_time</code> <code>float</code> <p>The start time of the clip.</p> required <code>end_time</code> <code>float</code> <p>The end time of the clip.</p> required <p>Methods:</p> Name Description <code>validate_times</code> <p>Validate that start_time &lt; end_time.</p> <p>Attributes:</p> Name Type Description <code>end_time</code> <code>float</code> <p>The end time of the clip.</p> <code>start_time</code> <code>float</code> <p>The start time of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipCreate.end_time","title":"<code>end_time</code>  <code>instance-attribute</code>","text":"<p>The end time of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipCreate.start_time","title":"<code>start_time</code>  <code>instance-attribute</code>","text":"<p>The start time of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipCreate-functions","title":"Functions","text":""},{"location":"reference/schemas/#whombat.schemas.ClipCreate.validate_times","title":"<code>validate_times(values)</code>","text":"<p>Validate that start_time &lt; end_time.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation","title":"<code>ClipEvaluation</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>UUID of the Clip Evaluation.</p> required <code>id</code> <code>int</code> <p>Database ID of the evaluation.</p> required <code>clip_annotation</code> <code>ClipAnnotation</code> <p>Clip annotation used for the evaluation.</p> required <code>clip_prediction</code> <code>ClipPrediction</code> <p>Clip prediction being evaluated.</p> required <code>sound_event_evaluations</code> <code>list[SoundEventEvaluation]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>metrics</code> <code>list[Feature]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> required <p>Attributes:</p> Name Type Description <code>clip_annotation</code> <code>ClipAnnotation</code> <p>Clip annotation used for the evaluation.</p> <code>clip_prediction</code> <code>ClipPrediction</code> <p>Clip prediction being evaluated.</p> <code>id</code> <code>int</code> <p>Database ID of the evaluation.</p> <code>metrics</code> <code>list[Feature]</code> <p>Evaluation metrics.</p> <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> <code>sound_event_evaluations</code> <code>list[SoundEventEvaluation]</code> <p>The evaluation of the sound events within the clip.</p> <code>uuid</code> <code>UUID</code> <p>UUID of the Clip Evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.clip_annotation","title":"<code>clip_annotation</code>  <code>instance-attribute</code>","text":"<p>Clip annotation used for the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.clip_prediction","title":"<code>clip_prediction</code>  <code>instance-attribute</code>","text":"<p>Clip prediction being evaluated.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.metrics","title":"<code>metrics = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Evaluation metrics.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.sound_event_evaluations","title":"<code>sound_event_evaluations = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The evaluation of the sound events within the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluation.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the Clip Evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationCreate","title":"<code>ClipEvaluationCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating a new Clip Evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> required <p>Attributes:</p> Name Type Description <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationCreate.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationUpdate","title":"<code>ClipEvaluationUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating an existing Clip Evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>score</code> <code>float | None</code> <p>Overall score of the evaluation.</p> <code>None</code> <code>uuid</code> <code>UUID | None</code> <p>UUID of the Clip Evaluation.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>score</code> <code>float | None</code> <p>Overall score of the evaluation.</p> <code>uuid</code> <code>UUID | None</code> <p>UUID of the Clip Evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationUpdate.score","title":"<code>score = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipEvaluationUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>UUID of the Clip Evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPrediction","title":"<code>ClipPrediction</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a clip prediction.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>UUID of the prediction.</p> required <code>id</code> <code>int</code> <p>Database ID of the prediction.</p> required <code>clip</code> <code>Clip</code> <p>Clip to which this prediction belongs.</p> required <code>sound_events</code> <code>list[SoundEventPrediction]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>tags</code> <code>list[ClipPredictionTag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>clip</code> <code>Clip</code> <p>Clip to which this prediction belongs.</p> <code>id</code> <code>int</code> <p>Database ID of the prediction.</p> <code>sound_events</code> <code>list[SoundEventPrediction]</code> <p>Sound event predictions of the clip.</p> <code>tags</code> <code>list[ClipPredictionTag]</code> <p>Tags of the prediction.</p> <code>uuid</code> <code>UUID</code> <p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPrediction-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipPrediction.clip","title":"<code>clip</code>  <code>instance-attribute</code>","text":"<p>Clip to which this prediction belongs.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPrediction.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPrediction.sound_events","title":"<code>sound_events = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Sound event predictions of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPrediction.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tags of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPrediction.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionCreate","title":"<code>ClipPredictionCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating a new clip prediction.</p> <p>Parameters:</p> Name Type Description Default <code>tags</code> <code>list[PredictedTag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>tags</code> <code>list[PredictedTag]</code> <p>Tags of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipPredictionCreate.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tags of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionTag","title":"<code>ClipPredictionTag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a clip prediction tag.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>Tag</code> <p>Tag of the prediction.</p> required <code>score</code> <code>float</code> <p>Confidence of the prediction.</p> required <p>Attributes:</p> Name Type Description <code>score</code> <code>float</code> <p>Confidence of the prediction.</p> <code>tag</code> <code>Tag</code> <p>Tag of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionTag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipPredictionTag.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Confidence of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionTag.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>Tag of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionUpdate","title":"<code>ClipPredictionUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating a clip prediction.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | None</code> <p>UUID of the prediction.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>uuid</code> <code>UUID | None</code> <p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipPredictionUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipPredictionUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipUpdate","title":"<code>ClipUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating a clip.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | None</code> <p>The unique identifier of the clip.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>uuid</code> <code>UUID | None</code> <p>The unique identifier of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.ClipUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ClipUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The unique identifier of the clip.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset","title":"<code>Dataset</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for Dataset objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The uuid of the dataset.</p> required <code>id</code> <code>int</code> <p>The database id of the dataset.</p> required <code>audio_dir</code> <code>Path</code> <p>The path to the directory containing the audio files.</p> required <code>name</code> <code>str</code> <p>The name of the dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of the dataset.</p> required <code>recording_count</code> <code>int</code> <p>The number of recordings in the dataset.</p> <code>0</code> <p>Attributes:</p> Name Type Description <code>audio_dir</code> <code>Path</code> <p>The path to the directory containing the audio files.</p> <code>description</code> <code>str | None</code> <p>The description of the dataset.</p> <code>id</code> <code>int</code> <p>The database id of the dataset.</p> <code>name</code> <code>str</code> <p>The name of the dataset.</p> <code>recording_count</code> <code>int</code> <p>The number of recordings in the dataset.</p> <code>uuid</code> <code>UUID</code> <p>The uuid of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Dataset.audio_dir","title":"<code>audio_dir</code>  <code>instance-attribute</code>","text":"<p>The path to the directory containing the audio files.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset.description","title":"<code>description</code>  <code>instance-attribute</code>","text":"<p>The description of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The database id of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>The name of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset.recording_count","title":"<code>recording_count = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The number of recordings in the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.Dataset.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The uuid of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetCreate","title":"<code>DatasetCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for Dataset objects created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>audio_dir</code> <code>Path</code> <p>The path to the directory containing the audio files.</p> required <code>name</code> <code>str</code> <p>The name of the dataset.</p> required <code>description</code> <code>str | None</code> <p>The description of the dataset.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>audio_dir</code> <code>DirectoryPath</code> <p>The path to the directory containing the audio files.</p> <code>description</code> <code>str | None</code> <p>The description of the dataset.</p> <code>name</code> <code>str</code> <p>The name of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.DatasetCreate.audio_dir","title":"<code>audio_dir</code>  <code>instance-attribute</code>","text":"<p>The path to the directory containing the audio files.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetCreate.description","title":"<code>description = Field(None)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The description of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetCreate.name","title":"<code>name = Field(..., min_length=1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetFile","title":"<code>DatasetFile</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for DatasetFile objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>The path to the file.</p> required <code>state</code> <code>FileState</code> <p>The state of the file.</p> required <p>Attributes:</p> Name Type Description <code>path</code> <code>Path</code> <p>The path to the file.</p> <code>state</code> <code>FileState</code> <p>The state of the file.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetFile-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.DatasetFile.path","title":"<code>path</code>  <code>instance-attribute</code>","text":"<p>The path to the file.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetFile.state","title":"<code>state</code>  <code>instance-attribute</code>","text":"<p>The state of the file.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetRecording","title":"<code>DatasetRecording</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for DatasetRecording objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>recording</code> <code>Recording</code> <p>The uuid of the recording.</p> required <code>state</code> <code>FileState</code> <p>The state of the file.</p> <code>&lt;FileState.REGISTERED: 'registered'&gt;</code> <code>path</code> <code>Path</code> <p>The path to the recording in the dataset directory.</p> required <p>Attributes:</p> Name Type Description <code>path</code> <code>Path</code> <p>The path to the recording in the dataset directory.</p> <code>recording</code> <code>Recording</code> <p>The uuid of the recording.</p> <code>state</code> <code>FileState</code> <p>The state of the file.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetRecording-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.DatasetRecording.path","title":"<code>path</code>  <code>instance-attribute</code>","text":"<p>The path to the recording in the dataset directory.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetRecording.recording","title":"<code>recording</code>  <code>instance-attribute</code>","text":"<p>The uuid of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetRecording.state","title":"<code>state = Field(default=(FileState.REGISTERED))</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The state of the file.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetRecordingCreate","title":"<code>DatasetRecordingCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for DatasetRecording objects created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>Path</code> <p>The path to the recording in the dataset directory.</p> required <p>Attributes:</p> Name Type Description <code>path</code> <code>Path</code> <p>The path to the recording in the dataset directory.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetRecordingCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.DatasetRecordingCreate.path","title":"<code>path</code>  <code>instance-attribute</code>","text":"<p>The path to the recording in the dataset directory.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetUpdate","title":"<code>DatasetUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for Dataset objects updated by the user.</p> <p>Parameters:</p> Name Type Description Default <code>audio_dir</code> <code>Annotated[Path, PathType] | None</code> <p>The path to the directory containing the audio files.</p> <code>None</code> <code>name</code> <code>str | None</code> <p>The name of the dataset.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the dataset.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>audio_dir</code> <code>DirectoryPath | None</code> <p>The path to the directory containing the audio files.</p> <code>description</code> <code>str | None</code> <p>The description of the dataset.</p> <code>name</code> <code>str | None</code> <p>The name of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.DatasetUpdate.audio_dir","title":"<code>audio_dir = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The path to the directory containing the audio files.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetUpdate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The description of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.DatasetUpdate.name","title":"<code>name = Field(default=None, min_length=1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the dataset.</p>"},{"location":"reference/schemas/#whombat.schemas.Evaluation","title":"<code>Evaluation</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Evaluation schema.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> required <code>id</code> <code>int</code> <p>Dataset identifier of the evaluation.</p> required <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> required <code>task</code> <code>str</code> <p>Task of the evaluation.</p> required <code>metrics</code> <code>list[Feature]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Dataset identifier of the evaluation.</p> <code>metrics</code> <code>list[Feature]</code> <p>List of metrics of the evaluation.</p> <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> <code>task</code> <code>str</code> <p>Task of the evaluation.</p> <code>uuid</code> <code>UUID</code>"},{"location":"reference/schemas/#whombat.schemas.Evaluation-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Evaluation.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Dataset identifier of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.Evaluation.metrics","title":"<code>metrics = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of metrics of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.Evaluation.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.Evaluation.task","title":"<code>task</code>  <code>instance-attribute</code>","text":"<p>Task of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.Evaluation.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.EvaluationCreate","title":"<code>EvaluationCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Evaluation creation schema.</p> <p>Parameters:</p> Name Type Description Default <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> <code>0</code> <code>task</code> <code>str</code> <p>Task of the evaluation.</p> required <p>Attributes:</p> Name Type Description <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> <code>task</code> <code>str</code> <p>Task of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.EvaluationCreate.score","title":"<code>score = Field(default=0, ge=0, le=1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationCreate.task","title":"<code>task</code>  <code>instance-attribute</code>","text":"<p>Task of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet","title":"<code>EvaluationSet</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for EvaluationSet objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The uuid of the evaluation set.</p> required <code>id</code> <code>int</code> <p>The id of the evaluation set.</p> required <code>name</code> <code>str</code> <p>The name of the evaluation set.</p> required <code>description</code> <code>str | None</code> <p>The description of the evaluation set.</p> required <code>task</code> <code>PredictionTypes</code> <p>The name of the task the evaluation set is used for.</p> required <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>description</code> <code>str | None</code> <p>The description of the evaluation set.</p> <code>id</code> <code>int</code> <p>The id of the evaluation set.</p> <code>name</code> <code>str</code> <p>The name of the evaluation set.</p> <code>tags</code> <code>list[Tag]</code> <p>The tags to use for the evaluation set.</p> <code>task</code> <code>PredictionTypes</code> <p>The name of the task the evaluation set is used for.</p> <code>uuid</code> <code>UUID</code> <p>The uuid of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.EvaluationSet.description","title":"<code>description</code>  <code>instance-attribute</code>","text":"<p>The description of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The id of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>The name of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The tags to use for the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet.task","title":"<code>task</code>  <code>instance-attribute</code>","text":"<p>The name of the task the evaluation set is used for.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSet.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The uuid of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetCreate","title":"<code>EvaluationSetCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating EvaluationSet objects.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the evaluation set.</p> required <code>description</code> <code>str | None</code> <p>The description of the evaluation set.</p> <code>None</code> <code>task</code> <code>PredictionTypes</code> <p>The name of the task the evaluation set is used for.</p> required <p>Attributes:</p> Name Type Description <code>description</code> <code>str | None</code> <p>The description of the evaluation set.</p> <code>name</code> <code>str</code> <p>The name of the evaluation set.</p> <code>task</code> <code>PredictionTypes</code> <p>The name of the task the evaluation set is used for.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.EvaluationSetCreate.description","title":"<code>description = Field(default=None)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The description of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetCreate.name","title":"<code>name = Field(..., min_length=1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetCreate.task","title":"<code>task = Field(..., min_length=1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the task the evaluation set is used for.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetUpdate","title":"<code>EvaluationSetUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating EvaluationSet objects.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the evaluation set.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the evaluation set.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>description</code> <code>str | None</code> <p>The description of the evaluation set.</p> <code>name</code> <code>str | None</code> <p>The name of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.EvaluationSetUpdate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The description of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationSetUpdate.name","title":"<code>name = Field(default=None, min_length=1)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the evaluation set.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationUpdate","title":"<code>EvaluationUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Evaluation update schema.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | None</code> <p>Unique identifier of the evaluation.</p> <code>None</code> <code>score</code> <code>float | None</code> <p>Overall score of the evaluation.</p> <code>None</code> <code>task</code> <code>str | None</code> <p>Task of the evaluation.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>score</code> <code>float | None</code> <p>Overall score of the evaluation.</p> <code>task</code> <code>str | None</code> <p>Task of the evaluation.</p> <code>uuid</code> <code>UUID | None</code> <p>Unique identifier of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.EvaluationUpdate.score","title":"<code>score = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationUpdate.task","title":"<code>task = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Task of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.EvaluationUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Unique identifier of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.Feature","title":"<code>Feature</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for Feature objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the feature.</p> required <code>value</code> <code>float</code> <p>The value of the feature.</p> required <p>Attributes:</p> Name Type Description <code>model_config</code> <code>name</code> <code>str</code> <p>The name of the feature.</p> <code>value</code> <code>float</code> <p>The value of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.Feature-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Feature.model_config","title":"<code>model_config = ConfigDict(from_attributes=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.Feature.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.Feature.value","title":"<code>value</code>  <code>instance-attribute</code>","text":"<p>The value of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureName","title":"<code>FeatureName</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for FeatureName objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>The database id of the feature name.</p> required <code>name</code> <code>str</code> <p>The name of the feature.</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database id of the feature name.</p> <code>name</code> <code>str</code> <p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureName-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.FeatureName.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The database id of the feature name.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureName.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureNameCreate","title":"<code>FeatureNameCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for FeatureName objects created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the feature.</p> required <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureNameCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.FeatureNameCreate.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureNameUpdate","title":"<code>FeatureNameUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for FeatureName objects updated by the user.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>The name of the feature.</p> required <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FeatureNameUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.FeatureNameUpdate.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>The name of the feature.</p>"},{"location":"reference/schemas/#whombat.schemas.FileState","title":"<code>FileState</code>","text":"<p>               Bases: <code>Enum</code></p> <p>The state of a file in a dataset.</p> <p>Datasets can contain files that are not registered in the database. This can happen if the file was added to the dataset directory after the dataset was registered. Additionally, files can be registered in the database but missing from the dataset directory. This can happen if the file was removed from the dataset directory after the dataset was registered.</p> <p>The state of a file can be one of the following:</p> <ul> <li> <p><code>missing</code>: The file is not registered in the database and is missing.</p> </li> <li> <p><code>registered</code>: The file is registered in the database and is present.</p> </li> <li> <p><code>unregistered</code>: The file is not registered in the database but is     present in the dataset directory.</p> </li> </ul> <p>Attributes:</p> Name Type Description <code>MISSING</code> <p>If the recording is registered but the file is missing.</p> <code>REGISTERED</code> <p>If the recording is registered and the file is present.</p> <code>UNREGISTERED</code> <p>If the recording is not registered but the file is present.</p>"},{"location":"reference/schemas/#whombat.schemas.FileState-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.FileState.MISSING","title":"<code>MISSING = 'missing'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the recording is registered but the file is missing.</p>"},{"location":"reference/schemas/#whombat.schemas.FileState.REGISTERED","title":"<code>REGISTERED = 'registered'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the recording is registered and the file is present.</p>"},{"location":"reference/schemas/#whombat.schemas.FileState.UNREGISTERED","title":"<code>UNREGISTERED = 'unregistered'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the recording is not registered but the file is present.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRun","title":"<code>ModelRun</code>","text":"<p>               Bases: <code>ModelRunCreate</code></p> <p>Schema of a model run as returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The unique identifier of the model run.</p> required <code>id</code> <code>int</code> <p>The database identifier of the model run.</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The database identifier of the model run.</p> <code>uuid</code> <code>UUID</code> <p>The unique identifier of the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRun-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ModelRun.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The database identifier of the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRun.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The unique identifier of the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunCreate","title":"<code>ModelRunCreate</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Model Run creation schema.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Name of the model used to generate the model run.</p> required <code>version</code> <code>str</code> <p>Version of the model used to generate the model run.</p> required <code>description</code> <code>str | None</code> <p>A description of the model used to generate the model run.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>description</code> <code>str | None</code> <p>A description of the model used to generate the model run.</p> <code>name</code> <code>str</code> <p>Name of the model used to generate the model run.</p> <code>version</code> <code>str</code> <p>Version of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ModelRunCreate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A description of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunCreate.name","title":"<code>name</code>  <code>instance-attribute</code>","text":"<p>Name of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunCreate.version","title":"<code>version</code>  <code>instance-attribute</code>","text":"<p>Version of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunUpdate","title":"<code>ModelRunUpdate</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Model Run update schema.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the model used to generate the model run.</p> <code>None</code> <code>version</code> <code>str | None</code> <p>The version of the model used to generate the model run.</p> <code>None</code> <code>description</code> <code>str | None</code> <p>The description of the model used to generate the model run.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>description</code> <code>str | None</code> <p>The description of the model used to generate the model run.</p> <code>name</code> <code>str | None</code> <p>The name of the model used to generate the model run.</p> <code>version</code> <code>str | None</code> <p>The version of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.ModelRunUpdate.description","title":"<code>description = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The description of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunUpdate.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The name of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.ModelRunUpdate.version","title":"<code>version = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The version of the model used to generate the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.Note","title":"<code>Note</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for Note objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The uuid of the note.</p> required <code>id</code> <code>int</code> <p>The database id of the note.</p> required <code>message</code> <code>str</code> <p>The message of the note.</p> required <code>is_issue</code> <code>bool</code> <p>Whether the note is an issue.</p> required <code>created_by</code> <code>SimpleUser | None</code> <p>The user who created the note.</p> required <p>Attributes:</p> Name Type Description <code>created_by</code> <code>SimpleUser | None</code> <p>The user who created the note.</p> <code>id</code> <code>int</code> <p>The database id of the note.</p> <code>is_issue</code> <code>bool</code> <p>Whether the note is an issue.</p> <code>message</code> <code>str</code> <p>The message of the note.</p> <code>uuid</code> <code>UUID</code> <p>The uuid of the note.</p>"},{"location":"reference/schemas/#whombat.schemas.Note-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Note.created_by","title":"<code>created_by</code>  <code>instance-attribute</code>","text":"<p>The user who created the note.</p>"},{"location":"reference/schemas/#whombat.schemas.Note.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The database id of the note.</p>"},{"location":"reference/schemas/#whombat.schemas.Note.is_issue","title":"<code>is_issue</code>  <code>instance-attribute</code>","text":"<p>Whether the note is an issue.</p>"},{"location":"reference/schemas/#whombat.schemas.Note.message","title":"<code>message</code>  <code>instance-attribute</code>","text":"<p>The message of the note.</p>"},{"location":"reference/schemas/#whombat.schemas.Note.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The uuid of the note.</p>"},{"location":"reference/schemas/#whombat.schemas.NoteCreate","title":"<code>NoteCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating notes.</p> <p>This schema is used when creating notes from the API as the user does not need to provide the id of the user who created the note.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> required <code>is_issue</code> <code>bool</code> <code>False</code> <p>Attributes:</p> Name Type Description <code>is_issue</code> <code>bool</code> <code>message</code> <code>str</code>"},{"location":"reference/schemas/#whombat.schemas.NoteCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.NoteCreate.is_issue","title":"<code>is_issue = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.NoteCreate.message","title":"<code>message = Field(min_length=1, max_length=1000)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.NoteUpdate","title":"<code>NoteUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating notes.</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str | None</code> <p>The message of the note.</p> <code>None</code> <code>is_issue</code> <code>bool | None</code> <p>Whether the note is an issue.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>is_issue</code> <code>bool | None</code> <p>Whether the note is an issue.</p> <code>message</code> <code>str | None</code> <p>The message of the note.</p>"},{"location":"reference/schemas/#whombat.schemas.NoteUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.NoteUpdate.is_issue","title":"<code>is_issue = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether the note is an issue.</p>"},{"location":"reference/schemas/#whombat.schemas.NoteUpdate.message","title":"<code>message = Field(None, min_length=1, max_length=1000)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The message of the note.</p>"},{"location":"reference/schemas/#whombat.schemas.Page","title":"<code>Page</code>","text":"<p>               Bases: <code>BaseModel</code>, <code>Generic[M]</code></p> <p>A page of results.</p> <p>Parameters:</p> Name Type Description Default <code>items</code> <code>Sequence[M]</code> required <code>total</code> <code>int</code> required <code>offset</code> <code>int</code> required <code>limit</code> <code>int</code> required <p>Attributes:</p> Name Type Description <code>items</code> <code>Sequence[M]</code> <code>limit</code> <code>int</code> <code>offset</code> <code>int</code> <code>total</code> <code>int</code>"},{"location":"reference/schemas/#whombat.schemas.Page-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Page.items","title":"<code>items</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.Page.limit","title":"<code>limit</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.Page.offset","title":"<code>offset</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.Page.total","title":"<code>total</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo","title":"<code>PluginInfo</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Plugin information.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Plugin name.</p> required <code>url</code> <code>str</code> <p>Route to the plugin pages.</p> required <code>description</code> <code>str | None</code> <p>Plugin description.</p> <code>None</code> <code>version</code> <code>str | None</code> <p>Plugin version.</p> <code>None</code> <code>thumbnail</code> <code>str | None</code> <p>Plugin thumbnail.</p> <code>None</code> <code>attribution</code> <code>str | None</code> <p>Plugin attribution.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>attribution</code> <code>str | None</code> <code>description</code> <code>str | None</code> <code>name</code> <code>str</code> <code>thumbnail</code> <code>str | None</code> <code>url</code> <code>str</code> <code>version</code> <code>str | None</code>"},{"location":"reference/schemas/#whombat.schemas.PluginInfo-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo.attribution","title":"<code>attribution = Field(default=None, description='Plugin attribution.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo.description","title":"<code>description = Field(default=None, description='Plugin description.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo.name","title":"<code>name = Field(..., description='Plugin name.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo.thumbnail","title":"<code>thumbnail = Field(default=None, description='Plugin thumbnail.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo.url","title":"<code>url = Field(..., description='Route to the plugin pages.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PluginInfo.version","title":"<code>version = Field(default=None, description='Plugin version.')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.PredictedTag","title":"<code>PredictedTag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for PredictedTag objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>Tag</code> <p>The tag that was predicted.</p> required <code>score</code> <code>float</code> <p>The confidence score for the assignment of the tag.</p> required <p>Attributes:</p> Name Type Description <code>score</code> <code>float</code> <p>The confidence score for the assignment of the tag.</p> <code>tag</code> <code>Tag</code> <p>The tag that was predicted.</p>"},{"location":"reference/schemas/#whombat.schemas.PredictedTag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.PredictedTag.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>The confidence score for the assignment of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.PredictedTag.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>The tag that was predicted.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording","title":"<code>Recording</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for Recording objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The UUID of the recording.</p> required <code>id</code> <code>int</code> <p>The database id of the recording.</p> required <code>path</code> <code>Path</code> <p>The path to the audio file, relative to the audio directory.</p> required <code>date</code> <code>date | None</code> <p>The date of the recording.</p> required <code>time</code> <code>time | None</code> <p>The time of the recording.</p> required <code>latitude</code> <code>float | None</code> <p>The latitude of the recording.</p> required <code>longitude</code> <code>float | None</code> <p>The longitude of the recording.</p> required <code>time_expansion</code> <code>float</code> <p>The time expansion factor of the recording.</p> required <code>hash</code> <code>str</code> <p>The md5 hash of the audio file.</p> required <code>duration</code> <code>float</code> <p>The duration of the audio file in seconds.</p> <p>This is the duration of the original audio file, not the time expanded version. This can vary depending on the time expansion factor. If the stored file has a duration of 10 seconds and a time expansion factor is 2, this means that the original recording was 5 seconds long. So the duration of the original recording is 5 seconds, not 10.</p> required <code>channels</code> <code>int</code> <p>The number of channels in the audio file.</p> required <code>samplerate</code> <code>int</code> <p>The sample rate of the audio file in Hz.</p> <p>This is the sample rate of the original audio file, not the time expanded version. This can vary depending on the time expansion factor. If the stored file has a sample rate of 44100 Hz and a time expansion factor is 2, this means that the original recording had a sample rate of 88200 Hz. So the sample rate of the original recording is 88200 Hz, not 44100 Hz.</p> required <code>rights</code> <code>str | None</code> <p>A text describing the usage rights of the recording.</p> required <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>features</code> <code>list[Feature]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>notes</code> <code>list[Note]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>owners</code> <code>list[SimpleUser]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>channels</code> <code>int</code> <p>The number of channels in the audio file.</p> <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>duration</code> <code>float</code> <p>The duration of the audio file in seconds.</p> <code>features</code> <code>list[Feature]</code> <p>The features associated with the recording.</p> <code>hash</code> <code>str</code> <p>The md5 hash of the audio file.</p> <code>id</code> <code>int</code> <p>The database id of the recording.</p> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording.</p> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording.</p> <code>notes</code> <code>list[Note]</code> <p>The notes associated with the recording.</p> <code>owners</code> <code>list[SimpleUser]</code> <p>The users that own the recording.</p> <code>path</code> <code>Path</code> <p>The path to the audio file, relative to the audio directory.</p> <code>rights</code> <code>str | None</code> <p>A text describing the usage rights of the recording.</p> <code>samplerate</code> <code>int</code> <p>The sample rate of the audio file in Hz.</p> <code>tags</code> <code>list[Tag]</code> <p>The tags associated with the recording.</p> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>time_expansion</code> <code>float</code> <p>The time expansion factor of the recording.</p> <code>uuid</code> <code>UUID</code> <p>The UUID of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Recording.channels","title":"<code>channels</code>  <code>instance-attribute</code>","text":"<p>The number of channels in the audio file.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.date","title":"<code>date</code>  <code>instance-attribute</code>","text":"<p>The date of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.duration","title":"<code>duration</code>  <code>instance-attribute</code>","text":"<p>The duration of the audio file in seconds.</p> <p>This is the duration of the original audio file, not the time expanded version. This can vary depending on the time expansion factor. If the stored file has a duration of 10 seconds and a time expansion factor is 2, this means that the original recording was 5 seconds long. So the duration of the original recording is 5 seconds, not 10.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.features","title":"<code>features = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The features associated with the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.hash","title":"<code>hash</code>  <code>instance-attribute</code>","text":"<p>The md5 hash of the audio file.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The database id of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.latitude","title":"<code>latitude</code>  <code>instance-attribute</code>","text":"<p>The latitude of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.longitude","title":"<code>longitude</code>  <code>instance-attribute</code>","text":"<p>The longitude of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.notes","title":"<code>notes = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The notes associated with the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.owners","title":"<code>owners = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The users that own the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.path","title":"<code>path</code>  <code>instance-attribute</code>","text":"<p>The path to the audio file, relative to the audio directory.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.rights","title":"<code>rights</code>  <code>instance-attribute</code>","text":"<p>A text describing the usage rights of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.samplerate","title":"<code>samplerate</code>  <code>instance-attribute</code>","text":"<p>The sample rate of the audio file in Hz.</p> <p>This is the sample rate of the original audio file, not the time expanded version. This can vary depending on the time expansion factor. If the stored file has a sample rate of 44100 Hz and a time expansion factor is 2, this means that the original recording had a sample rate of 88200 Hz. So the sample rate of the original recording is 88200 Hz, not 44100 Hz.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The tags associated with the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.time","title":"<code>time</code>  <code>instance-attribute</code>","text":"<p>The time of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.time_expansion","title":"<code>time_expansion</code>  <code>instance-attribute</code>","text":"<p>The time expansion factor of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.Recording.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The UUID of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate","title":"<code>RecordingCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Data for Recording creation.</p> <p>Parameters:</p> Name Type Description Default <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>None</code> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>None</code> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording.</p> <code>None</code> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording.</p> <code>None</code> <code>time_expansion</code> <code>float</code> <p>The time expansion factor of the recording.</p> <code>1.0</code> <code>rights</code> <code>str | None</code> <p>A text describing the usage rights of the recording.</p> <code>None</code> <code>path</code> <code>Path</code> <p>The path to the audio file.</p> required <p>Methods:</p> Name Description <code>is_an_audio_file</code> <p>Validate that the given path is an audio file.</p> <p>Attributes:</p> Name Type Description <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording.</p> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording.</p> <code>path</code> <code>FilePath</code> <p>The path to the audio file.</p> <code>rights</code> <code>str | None</code> <p>A text describing the usage rights of the recording.</p> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>time_expansion</code> <code>float</code> <p>The time expansion factor of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.date","title":"<code>date = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The date of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.latitude","title":"<code>latitude = Field(default=None, ge=(-90), le=90)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The latitude of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.longitude","title":"<code>longitude = Field(default=None, ge=(-180), le=180)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The longitude of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.path","title":"<code>path</code>  <code>instance-attribute</code>","text":"<p>The path to the audio file.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.rights","title":"<code>rights = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A text describing the usage rights of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.time","title":"<code>time = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The time of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.time_expansion","title":"<code>time_expansion = Field(default=1.0, gt=0)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The time expansion factor of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingCreate-functions","title":"Functions","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingCreate.is_an_audio_file","title":"<code>is_an_audio_file(v)</code>","text":"<p>Validate that the given path is an audio file.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingNote","title":"<code>RecordingNote</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for RecordingNote objects.</p> <p>Parameters:</p> Name Type Description Default <code>recording_uuid</code> <code>UUID</code> required <code>note</code> <code>Note</code> required <p>Attributes:</p> Name Type Description <code>note</code> <code>Note</code> <code>recording_uuid</code> <code>UUID</code>"},{"location":"reference/schemas/#whombat.schemas.RecordingNote-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingNote.note","title":"<code>note</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingNote.recording_uuid","title":"<code>recording_uuid</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingTag","title":"<code>RecordingTag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for RecordingTag objects.</p> <p>Parameters:</p> Name Type Description Default <code>recording_uuid</code> <code>UUID</code> <p>The UUID of the recording.</p> required <code>tag</code> <code>Tag</code> <p>The tag associated with the recording.</p> required <p>Attributes:</p> Name Type Description <code>recording_uuid</code> <code>UUID</code> <p>The UUID of the recording.</p> <code>tag</code> <code>Tag</code> <p>The tag associated with the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingTag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingTag.recording_uuid","title":"<code>recording_uuid</code>  <code>instance-attribute</code>","text":"<p>The UUID of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingTag.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>The tag associated with the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate","title":"<code>RecordingUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for Recording objects updated by the user.</p> <p>Parameters:</p> Name Type Description Default <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>None</code> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>None</code> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording.</p> <code>None</code> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording.</p> <code>None</code> <code>path</code> <code>Annotated[Path, PathType] | None</code> <p>New path to the audio file.</p> <code>None</code> <code>time_expansion</code> <code>float | None</code> <p>New time expansion factor of the recording.</p> <code>None</code> <code>rights</code> <code>str | None</code> <p>A text describing the usage rights of the recording.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>date</code> <code>date | None</code> <p>The date of the recording.</p> <code>latitude</code> <code>float | None</code> <p>The latitude of the recording.</p> <code>longitude</code> <code>float | None</code> <p>The longitude of the recording.</p> <code>path</code> <code>FilePath | None</code> <p>New path to the audio file.</p> <code>rights</code> <code>str | None</code> <p>A text describing the usage rights of the recording.</p> <code>time</code> <code>time | None</code> <p>The time of the recording.</p> <code>time_expansion</code> <code>float | None</code> <p>New time expansion factor of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.date","title":"<code>date = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The date of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.latitude","title":"<code>latitude = Field(default=None, ge=(-90), le=90)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The latitude of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.longitude","title":"<code>longitude = Field(default=None, ge=(-180), le=180)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The longitude of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.path","title":"<code>path = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>New path to the audio file.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.rights","title":"<code>rights = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A text describing the usage rights of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.time","title":"<code>time = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The time of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.RecordingUpdate.time_expansion","title":"<code>time_expansion = Field(default=None, gt=0)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>New time expansion factor of the recording.</p>"},{"location":"reference/schemas/#whombat.schemas.STFTParameters","title":"<code>STFTParameters</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Parameters for STFT computation.</p> <p>Parameters:</p> Name Type Description Default <code>window_size</code> <code>float</code> <p>Size of FFT window in seconds.</p> <code>0.025</code> <code>overlap</code> <code>float</code> <p>Window overlap as a fraction of window size.</p> <code>0.5</code> <code>window</code> <code>Literal['boxcar', 'triang', 'bartlett', 'flattop', 'parzen', 'bohman', 'blackman', 'blackmanharris', 'nuttall', 'barthann', 'hamming', 'hann', 'kaiser']</code> <p>Window function.</p> <code>'hann'</code> <p>Methods:</p> Name Description <code>check_positive</code> <p>Check that window size and hop size are positive.</p> <p>Attributes:</p> Name Type Description <code>overlap</code> <code>float</code> <p>Window overlap as a fraction of window size.</p> <code>window</code> <code>Window</code> <p>Window function.</p> <code>window_size</code> <code>float</code> <p>Size of FFT window in seconds.</p>"},{"location":"reference/schemas/#whombat.schemas.STFTParameters-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.STFTParameters.overlap","title":"<code>overlap = Field(default=0.5, gt=0.0, le=1.0)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Window overlap as a fraction of window size.</p>"},{"location":"reference/schemas/#whombat.schemas.STFTParameters.window","title":"<code>window = 'hann'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Window function.</p>"},{"location":"reference/schemas/#whombat.schemas.STFTParameters.window_size","title":"<code>window_size = 0.025</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Size of FFT window in seconds.</p>"},{"location":"reference/schemas/#whombat.schemas.STFTParameters-functions","title":"Functions","text":""},{"location":"reference/schemas/#whombat.schemas.STFTParameters.check_positive","title":"<code>check_positive(value)</code>  <code>classmethod</code>","text":"<p>Check that window size and hop size are positive.</p>"},{"location":"reference/schemas/#whombat.schemas.SimpleUser","title":"<code>SimpleUser</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for User objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>UUID</code> required <code>username</code> <code>str</code> required <code>email</code> <code>EmailStr | None</code> <code>None</code> <code>name</code> <code>str | None</code> <code>None</code> <code>is_active</code> <code>bool | None</code> <code>False</code> <code>is_superuser</code> <code>bool | None</code> <code>False</code> <code>is_verified</code> <code>bool | None</code> <code>False</code> <p>Attributes:</p> Name Type Description <code>email</code> <code>EmailStr | None</code> <code>id</code> <code>UUID</code> <code>is_active</code> <code>bool | None</code> <code>is_superuser</code> <code>bool | None</code> <code>is_verified</code> <code>bool | None</code> <code>name</code> <code>str | None</code> <code>username</code> <code>str</code>"},{"location":"reference/schemas/#whombat.schemas.SimpleUser-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.email","title":"<code>email = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.id","title":"<code>id</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.is_active","title":"<code>is_active = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.is_superuser","title":"<code>is_superuser = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.is_verified","title":"<code>is_verified = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SimpleUser.username","title":"<code>username</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEvent","title":"<code>SoundEvent</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Public schema for handling sound events.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>The uuid of the sound event.</p> required <code>id</code> <code>int</code> <p>The id of the sound event.</p> required <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> required <code>geometry_type</code> <code>Literal[TimeStamp] | Literal[TimeInterval] | Literal[BoundingBox] | Literal[Point] | Literal[LineString] | Literal[Polygon] | Literal[MultiPoint] | Literal[MultiLineString] | Literal[MultiPolygon]</code> required <code>features</code> <code>list[Feature]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>features</code> <code>list[Feature]</code> <p>The features associated with the sound event.</p> <code>geometry</code> <code>Geometry</code> <code>geometry_type</code> <code>GeometryType</code> <code>id</code> <code>int</code> <p>The id of the sound event.</p> <code>uuid</code> <code>UUID</code> <p>The uuid of the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEvent-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEvent.features","title":"<code>features = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The features associated with the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEvent.geometry","title":"<code>geometry = Field(..., discriminator='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEvent.geometry_type","title":"<code>geometry_type</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEvent.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The id of the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEvent.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>The uuid of the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation","title":"<code>SoundEventAnnotation</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for an SoundEventAnnotation.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>UUID of this annotation.</p> required <code>id</code> <code>int</code> <p>Database ID of this annotation.</p> required <code>created_by</code> <code>SimpleUser | None</code> <p>User who created this annotation.</p> required <code>sound_event</code> <code>SoundEvent</code> <p>Sound event this annotation is attached to.</p> required <code>notes</code> <code>list[Note]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <code>tags</code> <code>list[Tag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>created_by</code> <code>SimpleUser | None</code> <p>User who created this annotation.</p> <code>id</code> <code>int</code> <p>Database ID of this annotation.</p> <code>notes</code> <code>list[Note]</code> <p>Notes attached to this annotation.</p> <code>sound_event</code> <code>SoundEvent</code> <p>Sound event this annotation is attached to.</p> <code>tags</code> <code>list[Tag]</code> <p>Tags attached to this annotation.</p> <code>uuid</code> <code>UUID</code> <p>UUID of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation.created_by","title":"<code>created_by</code>  <code>instance-attribute</code>","text":"<p>User who created this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation.notes","title":"<code>notes = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Notes attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation.sound_event","title":"<code>sound_event</code>  <code>instance-attribute</code>","text":"<p>Sound event this annotation is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tags attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotation.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationCreate","title":"<code>SoundEventAnnotationCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for data required to create an SoundEventAnnotation.</p> <p>Parameters:</p> Name Type Description Default <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> <p>Geometry of this annotation.</p> required <code>tags</code> <code>list[TagCreate]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>geometry</code> <code>Geometry</code> <p>Geometry of this annotation.</p> <code>tags</code> <code>list[TagCreate]</code> <p>Tags attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationCreate.geometry","title":"<code>geometry = Field(..., discriminator='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geometry of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationCreate.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tags attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationNote","title":"<code>SoundEventAnnotationNote</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a SoundEventAnnotationNote.</p> <p>Parameters:</p> Name Type Description Default <code>note</code> <code>Note</code> <p>Note attached to this annotation.</p> required <code>sound_event_annotation_uuid</code> <code>UUID</code> <p>UUID of the SoundEventAnnotation this note is attached to.</p> required <p>Attributes:</p> Name Type Description <code>note</code> <code>Note</code> <p>Note attached to this annotation.</p> <code>sound_event_annotation_uuid</code> <code>UUID</code> <p>UUID of the SoundEventAnnotation this note is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationNote-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationNote.note","title":"<code>note</code>  <code>instance-attribute</code>","text":"<p>Note attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationNote.sound_event_annotation_uuid","title":"<code>sound_event_annotation_uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the SoundEventAnnotation this note is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationTag","title":"<code>SoundEventAnnotationTag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a SoundEventAnnotationTag.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>Tag</code> <p>Tag attached to this annotation.</p> required <code>created_by</code> <code>SimpleUser | None</code> <p>User who created this annotation.</p> required <code>sound_event_annotation_uuid</code> <code>UUID</code> <p>UUID of the SoundEventAnnotation this tag is attached to.</p> required <p>Attributes:</p> Name Type Description <code>created_by</code> <code>SimpleUser | None</code> <p>User who created this annotation.</p> <code>sound_event_annotation_uuid</code> <code>UUID</code> <p>UUID of the SoundEventAnnotation this tag is attached to.</p> <code>tag</code> <code>Tag</code> <p>Tag attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationTag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationTag.created_by","title":"<code>created_by</code>  <code>instance-attribute</code>","text":"<p>User who created this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationTag.sound_event_annotation_uuid","title":"<code>sound_event_annotation_uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the SoundEventAnnotation this tag is attached to.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationTag.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>Tag attached to this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationUpdate","title":"<code>SoundEventAnnotationUpdate</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for data required to update an SoundEventAnnotation.</p> <p>Parameters:</p> Name Type Description Default <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> <p>Geometry of this annotation.</p> required <p>Attributes:</p> Name Type Description <code>geometry</code> <code>Geometry</code> <p>Geometry of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventAnnotationUpdate.geometry","title":"<code>geometry = Field(..., discriminator='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geometry of this annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventCreate","title":"<code>SoundEventCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for SoundEvent objects created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> <p>The geometry of the sound event.</p> required <p>Attributes:</p> Name Type Description <code>geometry</code> <code>Geometry</code> <p>The geometry of the sound event.</p> <code>geometry_type</code> <code>GeometryType</code> <p>Return the type of geometry used to mark the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventCreate.geometry","title":"<code>geometry = Field(..., discriminator='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The geometry of the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventCreate.geometry_type","title":"<code>geometry_type</code>  <code>property</code>","text":"<p>Return the type of geometry used to mark the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation","title":"<code>SoundEventEvaluation</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a sound event evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> required <code>id</code> <code>int</code> <p>Database ID of the evaluation.</p> required <code>source</code> <code>SoundEventPrediction | None</code> <p>Source sound event prediction.</p> required <code>target</code> <code>SoundEventAnnotation | None</code> <p>Target sound event annotation.</p> required <code>affinity</code> <code>float</code> <p>Affinity of the match between the source and target.</p> required <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> required <code>metrics</code> <code>list[Feature]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>affinity</code> <code>float</code> <p>Affinity of the match between the source and target.</p> <code>id</code> <code>int</code> <p>Database ID of the evaluation.</p> <code>metrics</code> <code>list[Feature]</code> <p>Evaluation metrics.</p> <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> <code>source</code> <code>SoundEventPrediction | None</code> <p>Source sound event prediction.</p> <code>target</code> <code>SoundEventAnnotation | None</code> <p>Target sound event annotation.</p> <code>uuid</code> <code>UUID</code>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.affinity","title":"<code>affinity</code>  <code>instance-attribute</code>","text":"<p>Affinity of the match between the source and target.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.metrics","title":"<code>metrics = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Evaluation metrics.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.source","title":"<code>source</code>  <code>instance-attribute</code>","text":"<p>Source sound event prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.target","title":"<code>target</code>  <code>instance-attribute</code>","text":"<p>Target sound event annotation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluation.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationCreate","title":"<code>SoundEventEvaluationCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating a new sound event evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>affinity</code> <code>float</code> <p>Affinity of the match between the source and target.</p> required <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p> required <p>Attributes:</p> Name Type Description <code>affinity</code> <code>float</code> <p>Affinity of the match between the source and target.</p> <code>score</code> <code>float</code> <p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationCreate.affinity","title":"<code>affinity</code>  <code>instance-attribute</code>","text":"<p>Affinity of the match between the source and target.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationCreate.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationUpdate","title":"<code>SoundEventEvaluationUpdate</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for updating a sound event evaluation.</p> <p>Parameters:</p> Name Type Description Default <code>affinity</code> <code>float | None</code> <p>Affinity of the match between the source and target.</p> <code>None</code> <code>score</code> <code>float | None</code> <p>Overall score of the evaluation.</p> <code>None</code> <code>uuid</code> <code>UUID | None</code> <p>UUID of the Sound Event Evaluation.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>affinity</code> <code>float | None</code> <p>Affinity of the match between the source and target.</p> <code>score</code> <code>float | None</code> <p>Overall score of the evaluation.</p> <code>uuid</code> <code>UUID | None</code> <p>UUID of the Sound Event Evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationUpdate.affinity","title":"<code>affinity = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Affinity of the match between the source and target.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationUpdate.score","title":"<code>score = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Overall score of the evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventEvaluationUpdate.uuid","title":"<code>uuid = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>UUID of the Sound Event Evaluation.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction","title":"<code>SoundEventPrediction</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>UUID of the prediction.</p> required <code>id</code> <code>int</code> <p>Database ID of the prediction.</p> required <code>sound_event</code> <code>SoundEvent</code> <p>Sound event to be predicted.</p> required <code>score</code> <code>float</code> <p>Overall score of the prediction.</p> required <code>tags</code> <code>list[SoundEventPredictionTag]</code> <p>Built-in mutable sequence.</p> <p>If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.</p> <code>&lt;dynamic&gt;</code> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Database ID of the prediction.</p> <code>score</code> <code>float</code> <p>Overall score of the prediction.</p> <code>sound_event</code> <code>SoundEvent</code> <p>Sound event to be predicted.</p> <code>tags</code> <code>list[SoundEventPredictionTag]</code> <p>Tags of the prediction.</p> <code>uuid</code> <code>UUID</code> <p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction.sound_event","title":"<code>sound_event</code>  <code>instance-attribute</code>","text":"<p>Sound event to be predicted.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction.tags","title":"<code>tags = Field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Tags of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPrediction.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionCreate","title":"<code>SoundEventPredictionCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating a new sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> <p>Geometry of this sound event prediction.</p> required <code>score</code> <code>float</code> <p>Overall score of the prediction.</p> required <p>Attributes:</p> Name Type Description <code>geometry</code> <code>Geometry</code> <p>Geometry of this sound event prediction.</p> <code>score</code> <code>float</code> <p>Overall score of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionCreate.geometry","title":"<code>geometry = Field(..., discriminator='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Geometry of this sound event prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionCreate.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionTag","title":"<code>SoundEventPredictionTag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for a sound event prediction tag.</p> <p>Parameters:</p> Name Type Description Default <code>score</code> <code>float</code> <p>Score of the tag.</p> required <code>tag</code> <code>Tag</code> <p>Tag.</p> required <p>Attributes:</p> Name Type Description <code>score</code> <code>float</code> <p>Score of the tag.</p> <code>tag</code> <code>Tag</code> <p>Tag.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionTag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionTag.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Score of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionTag.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>Tag.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionUpdate","title":"<code>SoundEventPredictionUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating a sound event prediction.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID | None</code> <p>UUID of the prediction.</p> required <code>score</code> <code>float | None</code> <p>Overall score of the prediction.</p> required <p>Attributes:</p> Name Type Description <code>score</code> <code>float | None</code> <p>Overall score of the prediction.</p> <code>uuid</code> <code>UUID | None</code> <p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionUpdate.score","title":"<code>score</code>  <code>instance-attribute</code>","text":"<p>Overall score of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventPredictionUpdate.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>UUID of the prediction.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventUpdate","title":"<code>SoundEventUpdate</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for SoundEvent objects updated by the user.</p> <p>Parameters:</p> Name Type Description Default <code>geometry</code> <code>TimeStamp | TimeInterval | Point | LineString | Polygon | BoundingBox | MultiPoint | MultiLineString | MultiPolygon</code> <p>The geometry of the sound event.</p> required <p>Attributes:</p> Name Type Description <code>geometry</code> <code>Geometry</code> <p>The geometry of the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SoundEventUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SoundEventUpdate.geometry","title":"<code>geometry = Field(..., discriminator='type')</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The geometry of the sound event.</p>"},{"location":"reference/schemas/#whombat.schemas.SpectrogramParameters","title":"<code>SpectrogramParameters</code>","text":"<p>               Bases: <code>STFTParameters</code>, <code>AmplitudeParameters</code></p> <p>Parameters for spectrogram computation.</p> <p>Parameters:</p> Name Type Description Default <code>channel</code> <code>int</code> <p>Channel to use for spectrogram computation.</p> <code>0</code> <code>pcen</code> <code>bool</code> <p>Whether to apply PCEN for de-noising.</p> <code>True</code> <code>cmap</code> <code>str</code> <p>Colormap to use for spectrogram.</p> <code>'gray'</code> <p>Attributes:</p> Name Type Description <code>channel</code> <code>int</code> <p>Channel to use for spectrogram computation.</p> <code>cmap</code> <code>str</code> <p>Colormap to use for spectrogram.</p> <code>pcen</code> <code>bool</code> <p>Whether to apply PCEN for de-noising.</p>"},{"location":"reference/schemas/#whombat.schemas.SpectrogramParameters-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.SpectrogramParameters.channel","title":"<code>channel = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Channel to use for spectrogram computation.</p>"},{"location":"reference/schemas/#whombat.schemas.SpectrogramParameters.cmap","title":"<code>cmap = 'gray'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Colormap to use for spectrogram.</p>"},{"location":"reference/schemas/#whombat.schemas.SpectrogramParameters.pcen","title":"<code>pcen = True</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether to apply PCEN for de-noising.</p>"},{"location":"reference/schemas/#whombat.schemas.Tag","title":"<code>Tag</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for Tag objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>int</code> <p>Database ID of the tag.</p> required <code>key</code> <code>str</code> <p>Key of the tag.</p> required <code>value</code> <code>str</code> <p>Value of the tag.</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>Database ID of the tag.</p> <code>key</code> <code>str</code> <p>Key of the tag.</p> <code>value</code> <code>str</code> <p>Value of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.Tag-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.Tag.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Database ID of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.Tag.key","title":"<code>key</code>  <code>instance-attribute</code>","text":"<p>Key of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.Tag.value","title":"<code>value</code>  <code>instance-attribute</code>","text":"<p>Value of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagCount","title":"<code>TagCount</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema for TagCount objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>Tag</code> <p>Tag object.</p> required <code>count</code> <code>int</code> <p>Count of the tag.</p> required <p>Attributes:</p> Name Type Description <code>count</code> <code>int</code> <p>Count of the tag.</p> <code>tag</code> <code>Tag</code> <p>Tag object.</p>"},{"location":"reference/schemas/#whombat.schemas.TagCount-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.TagCount.count","title":"<code>count</code>  <code>instance-attribute</code>","text":"<p>Count of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagCount.tag","title":"<code>tag</code>  <code>instance-attribute</code>","text":"<p>Tag object.</p>"},{"location":"reference/schemas/#whombat.schemas.TagCreate","title":"<code>TagCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for creating Tag objects.</p> <p>Parameters:</p> Name Type Description Default <code>key</code> <code>str</code> <p>Key of the tag.</p> required <code>value</code> <code>str</code> <p>Value of the tag.</p> required <p>Attributes:</p> Name Type Description <code>key</code> <code>str</code> <p>Key of the tag.</p> <code>value</code> <code>str</code> <p>Value of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.TagCreate.key","title":"<code>key = Field(min_length=1, max_length=255)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Key of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagCreate.value","title":"<code>value = Field(min_length=1, max_length=255)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Value of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagUpdate","title":"<code>TagUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating Tag objects.</p> <p>Parameters:</p> Name Type Description Default <code>key</code> <code>str | None</code> <p>Key of the tag.</p> <code>None</code> <code>value</code> <code>str | None</code> <p>Value of the tag.</p> <code>None</code> <p>Attributes:</p> Name Type Description <code>key</code> <code>str | None</code> <p>Key of the tag.</p> <code>value</code> <code>str | None</code> <p>Value of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.TagUpdate.key","title":"<code>key = Field(default=None, min_length=1, max_length=255)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Key of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.TagUpdate.value","title":"<code>value = Field(default=None, min_length=1, max_length=255)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Value of the tag.</p>"},{"location":"reference/schemas/#whombat.schemas.User","title":"<code>User</code>","text":"<p>               Bases: <code>BaseUser[UUID]</code></p> <p>Schema for User objects returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> required <code>name</code> <code>str | None</code> <code>None</code> <code>created_on</code> <code>datetime</code> required <p>Attributes:</p> Name Type Description <code>created_on</code> <code>datetime</code> <code>name</code> <code>Optional[str]</code> <code>username</code> <code>str</code>"},{"location":"reference/schemas/#whombat.schemas.User-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.User.created_on","title":"<code>created_on</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.User.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.User.username","title":"<code>username</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.UserCreate","title":"<code>UserCreate</code>","text":"<p>               Bases: <code>BaseUserCreate</code></p> <p>Schema for User objects created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> required <code>name</code> <code>str | None</code> <code>None</code> <p>Attributes:</p> Name Type Description <code>name</code> <code>str | None</code> <code>username</code> <code>str</code>"},{"location":"reference/schemas/#whombat.schemas.UserCreate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.UserCreate.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.UserCreate.username","title":"<code>username</code>  <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.UserRun","title":"<code>UserRun</code>","text":"<p>               Bases: <code>BaseSchema</code></p> <p>Schema of a user run as returned to the user.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Unique identifier of the user run.</p> required <code>id</code> <code>int</code> <p>The databset identifier of the model run.</p> required <code>user</code> <code>SimpleUser</code> <p>The user who created the user run.</p> required <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <p>The databset identifier of the model run.</p> <code>user</code> <code>SimpleUser</code> <p>The user who created the user run.</p> <code>uuid</code> <code>UUID</code> <p>Unique identifier of the user run.</p>"},{"location":"reference/schemas/#whombat.schemas.UserRun-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.UserRun.id","title":"<code>id = Field(..., exclude=True)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The databset identifier of the model run.</p>"},{"location":"reference/schemas/#whombat.schemas.UserRun.user","title":"<code>user</code>  <code>instance-attribute</code>","text":"<p>The user who created the user run.</p>"},{"location":"reference/schemas/#whombat.schemas.UserRun.uuid","title":"<code>uuid</code>  <code>instance-attribute</code>","text":"<p>Unique identifier of the user run.</p>"},{"location":"reference/schemas/#whombat.schemas.UserRunCreate","title":"<code>UserRunCreate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model Run creation schema.</p>"},{"location":"reference/schemas/#whombat.schemas.UserRunUpdate","title":"<code>UserRunUpdate</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Schema for updating a user run.</p> <p>Parameters:</p> Name Type Description Default <code>uuid</code> <code>UUID</code> <p>Generate a random UUID.</p> <code>UUID('40742474-b1f9-49a9-a277-ea0d18c8eef6')</code> <p>Attributes:</p> Name Type Description <code>uuid</code> <code>UUID</code> <p>Unique identifier of the user run.</p>"},{"location":"reference/schemas/#whombat.schemas.UserRunUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.UserRunUpdate.uuid","title":"<code>uuid = Field(default_factory=uuid4)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Unique identifier of the user run.</p>"},{"location":"reference/schemas/#whombat.schemas.UserUpdate","title":"<code>UserUpdate</code>","text":"<p>               Bases: <code>BaseUserUpdate</code></p> <p>Schema for User objects updated by the user.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str | None</code> <code>None</code> <code>name</code> <code>str | None</code> <code>None</code> <p>Attributes:</p> Name Type Description <code>name</code> <code>str | None</code> <code>username</code> <code>str | None</code>"},{"location":"reference/schemas/#whombat.schemas.UserUpdate-attributes","title":"Attributes","text":""},{"location":"reference/schemas/#whombat.schemas.UserUpdate.name","title":"<code>name = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"reference/schemas/#whombat.schemas.UserUpdate.username","title":"<code>username = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"user_guide/","title":"User Guide","text":""},{"location":"user_guide/#welcome-to-whombat","title":"Welcome to Whombat!","text":"<p>We're happy to have you on board with Whombat, the open-source tool for audio annotation with ML in mind. Whether you're just getting started or looking to refine your annotation process, this guide is here to make your work smooth and enjoyable.</p> <p>Here we you can get more information about how to start your audio annotation work and make best use of this tool.</p>"},{"location":"user_guide/#getting-started","title":"Getting Started","text":"<p>Here's how to get started:</p> <ol> <li>Install\u00a0Whombat: Follow the step-by-step instructions in the installation guide to set up Whombat on your machine.</li> </ol>"},{"location":"user_guide/#core-concepts-features","title":"Core Concepts &amp; Features","text":"<p>Once installed, familiarize yourself with Whombat's core functionality by reviewing the user guides for each main section:</p> <ul> <li>Datasets: Learn how to manage and organize your audio data and associated metadata.</li> <li>Annotation\u00a0Projects: Discover how to create and manage annotation projects, define tasks, and collaborate with others.</li> <li>Evaluation\u00a0Sets: Understand how to create standardized evaluation sets for assessing model performance.</li> <li>Exploration: Explore the tools and visualizations for interactive data exploration and analysis.</li> </ul>"},{"location":"user_guide/#practical-guides-workflows","title":"Practical Guides &amp; Workflows","text":"<p>Learn how to perform specific tasks, see Whombat in action, and explore more advanced use cases:</p> <ul> <li>Import\u00a0Example\u00a0Data: The best way to get a hands-on feel! Learn how to load the provided example data to see Whombat's features with a pre-populated project.</li> <li>Navigating\u00a0the\u00a0Spectrogram: Master the art of viewing, zooming, and interacting with audio spectrograms \u2013 the heart of your annotation work.</li> <li>Export\u00a0Annotations\u00a0for\u00a0ML\u00a0Development: Learn how to export your hard work in formats ready for training your machine learning models.</li> <li>Explore All Guides &amp; Use Cases: Browse our full collection of practical guides, advanced tutorials, and integration examples. We're always adding more!</li> </ul>"},{"location":"user_guide/#searching-for-answers","title":"Searching for Answers","text":"<p>Can't find what you're looking for?</p> <ul> <li>Use the search bar above for quick lookups.</li> <li>Check out our FAQ\u00a0section for answers to common questions.</li> <li>Don't hesitate to reach out if you need further assistance.</li> </ul>"},{"location":"user_guide/annotation_projects/","title":"Audio Annotation","text":"<p>Welcome to the core of Whombat: Annotation Projects. This is where the real work gets done. It's where you and your fellow annotators can dive deep into your audio data, applying your expertise to identify, classify, and annotate important sound events.</p> <p>In this section, we will guide you through various topics:</p> <ol> <li>Understanding\u00a0Annotation: Delve into the fundamentals of annotation.</li> <li>Getting\u00a0Started\u00a0with\u00a0Annotation: Learn how to initiate your annotation work in Whombat.</li> <li>Creating\u00a0or\u00a0Importing\u00a0an\u00a0Annotation\u00a0Project: Explore the steps to set up a new project or import an existing one.</li> <li>Selecting\u00a0Annotation\u00a0Tags: Understand the importance of selecting the right tags for annotation.</li> <li>Adding\u00a0Annotation\u00a0Tasks\u00a0to\u00a0a\u00a0Project: Discover how to enhance your project with specific annotation tasks.</li> <li>The\u00a0Annotation\u00a0Project\u00a0Dashboard: Navigate through the project dashboard for a comprehensive overview.</li> <li>Annotating\u00a0a\u00a0Clip: Dive into the actual process of annotating a clip with precision.</li> <li>Exporting\u00a0the\u00a0Data: Learn how to export annotated data for further analysis or sharing.</li> </ol> <p>Explore Whombat with Example Data</p> <p>Want to see Whombat in action without starting from scratch? Import the example dataset and annotation project to explore the interface and functionality with pre-populated data. Check out the import data guide for step-by-step instructions.</p>"},{"location":"user_guide/annotation_projects/#understanding-annotation","title":"Understanding Annotation","text":"<p>Annotation in audio is about adding human-interpretable meaning to raw audio data, and it can take various forms. For instance, attaching a tag to a recording constitutes a form of annotation. However, Whombat primarily centers on two types of annotation.</p> <p>The first type is annotating sound events. In Whombat, a sound event encompasses any distinguishable sound of interest to the annotator. To annotate a sound event, the annotator marks the RoI in the spectrogram where the sound occurs and attaches tags or notes to it.</p> <p>Defining the RoI</p> <p>The method an annotator uses to mark the RoI for each sound event can vary, depending on the type of sound being annotated. Whombat provides multiple approaches for this. For instance, annotators can use a bounding box to encompass the starting and ending time of the sound event, along with its lowest and highest frequency. Alternatively, annotators may choose to mark only the exact moment in time when the sound occurs, particularly for short pulses.</p> <p>The second type is annotating an audio clip. Annotations for a clip in Whombat involve attaching tags or creating notes for the entire clip, not for a specific sound within it. However, when annotating a clip, the annotator can, of course, create annotations for the sound events within the clip.</p> <p>What is a Clip?</p> <p>In Whombat, an audio clip is a portion of a complete recording, like the first second of a soundscape. Surprisingly, the entire recording can also be seen as a clip, and even a clip extending beyond the recording's end is valid. Whombat leans on clips for annotation because they offer a standardized and more manageable way of annotating. Imagine annotating a full 1-hour recording\u2014clips make this task more feasible. Additionally, using clips of consistent duration within a project enhances comparability.</p> <p>With these two ways of annotation, Whombat lets you describe audio details exactly as you need.</p> <p>Annotation serves a specific purpose, whether it's reviewing all recordings from a dataset or gathering material for ML development. To streamline this process, Whombat neatly organizes all annotation work into annotation projects.</p> <p>An annotation project in Whombat comprises annotation tasks, a collection of audio clips awaiting annotation. Each project should establish a clear criterion for what constitutes a successfully annotated clip. Therefore, we encourage each project to provide explicit instructions on how to annotate. As a best practice, designing a set of tags for consistent use across all annotation work within the project enhances efficiency and coherence.</p>"},{"location":"user_guide/annotation_projects/#getting-started-with-annotation","title":"Getting Started With Annotation","text":"<p>Now that you're prepared to begin annotating, head to the annotation section by clicking the annotation button (labeled B in the figure) in the left sidebar or utilizing the navigation cards on the homepage.</p> <p></p> <p>Upon entering, you'll encounter a list of all registered annotation projects. Locate the specific project you want to work on using the search bar and click on it.</p> <p></p>"},{"location":"user_guide/annotation_projects/#creating-or-importing-an-annotation-project","title":"Creating or Importing an Annotation Project","text":"<p>If you want to initiate a new annotation project, click the +Create button at the top of the project list. You'll be prompted to provide a name for the project, a description outlining its purpose and contents, and crucially, annotation instructions.</p> <p>If you already have an exported annotation project file, you can import it by clicking the Import button and selecting your file.</p> Crafting Effective Annotation Instructions <p>Whombat provides tools for annotation without prescribing specific annotation instructions. This can make the definition of completing an annotation task somewhat open-ended. When drafting annotation instructions, consider your project goals and align the instructions accordingly. For projects requiring annotators to determine if a clip contains a particular sound, provide specific guidance like \"Review each clip, listen in full, and decide if it contains car sounds. If yes, add a 'sound:car' tag; otherwise, leave it empty.\" For annotating sound events, specify how to mark the RoI, the preferred geometry, and aim for precision. For example: \"Use a bounding box to enclose each bat echolocation pulse, encompassing the main harmonic. Keep the boxes tight, utilize the -80dB threshold to cut off extraneous noise, and add the 'event:echolocation' tag for each pulse. Mark faint pulses but, if uncertain, add a tag indicating uncertainty.\"</p>"},{"location":"user_guide/annotation_projects/#the-annotation-project-dashboard","title":"The Annotation Project Dashboard","text":"<p>After selecting or creating the desired annotation project, you'll be directed to the project dashboard. Here, you'll find a summary of annotation progress, indicating how many tasks have been completed, how many have encountered issues, and how many are still pending.</p> <p>You can also view and modify project information, including the description and annotation instructions.</p> Deleting an Annotation Project <p>If needed, you have the option to delete an annotation project. However, exercise caution as this action permanently erases all annotations within the project. Ensure you are confident in this decision or have a backup in place.</p> <p>Additionally, you can access basic statistics detailing the number of annotations made, categorized by tag. Finally, you'll find a section highlighting the most recent issues within the project, facilitating quick resolution.</p>"},{"location":"user_guide/annotation_projects/#selecting-annotation-tags","title":"Selecting Annotation Tags","text":"<p>Navigate to the \"Tags\" tab in the navigation header or click the \"Manage Tags\" button in the Tag Summary section of the dashboard to manage tags specific to this annotation project. Here, you can view and search all currently whitelisted tags for annotation, remove existing ones, or introduce new ones.</p> <p>Use the search bar on the left to find existing tags for addition or create new ones. The tags listed on the right column are registered for the project. Click on a tag to remove it.</p> <p></p> <p>Restricted tag set</p> <p>During annotation, annotators will only see tags registered in the project when searching. This helps prevent duplication and ensures the correct tags are consistently used.</p> A well designed tag set <p>As tags can cover a wide range, agreeing on a set of tags for a project is essential. This ensures tags are easily interpretable and applicable. It's advisable to establish some tags before annotation, facilitating a smoother process and clearer task understanding for annotators. However, tags can be added progressively, so there's flexibility in this aspect. Don't feel pressured to finalize all tags from the start.</p>"},{"location":"user_guide/annotation_projects/#adding-annotation-tasks-to-a-project","title":"Adding Annotation Tasks to a Project","text":"<p>As discussed in the Understanding\u00a0Annotation section, an annotation task involves a full annotation of an audio clip (based on the provided annotation instructions). To add tasks to a project, click the \"Add Tasks\" button in the Progress Overview on the dashboard or press the \"Tasks\" button in the navigation header.</p> <p>To add tasks to the project:</p> <ul> <li>Select a Dataset: Choose the dataset from which recordings will be sourced.</li> <li>Choose Recordings: Select specific recordings from the chosen dataset.</li> <li>Determine Clip Selection Method: Decide how to select clips from the chosen recordings.</li> </ul> <p></p> <p>The first step is straightforward. However, for the second step, you have the option to include only a subset of all dataset recordings. This can be achieved by applying filters to refine the set of recordings or by randomly subsampling from the entire set of recordings.</p> <p>The clip selection step is equally crucial. Here, you can choose between using the entire recordings as clips or using clips of a predefined duration. The second option is the default, and if selected, you can configure the duration of each clip, the amount of overlap between consecutive clips, and the maximum number of clips to extract from each recording.</p> Avoid Many Clips per Recording <p>Although having numerous annotated clips may seem beneficial, especially for training ML models, the number of clips can sometimes be misleading. Annotating many clips from the same recording may not provide fully independent examples as they share a common background. Therefore, the number of clips may not immediately reflect the dataset size. Whenever possible, it's preferable to have a few clips from many different recordings than numerous clips from a few recordings.</p> Selecting an adequate clip duration <p>Choosing the right clip duration for the annotation task is a pivotal decision. A thoughtful selection should consider the goals of annotation, how annotators will create annotations, and ultimately, how the annotations will be utilized. If there are specific sounds to annotate, ensure the clip duration is longer than the typical duration of those sounds. This ensures the entire sound is encompassed, providing a sufficient buffer. Annotators will only have access to the audio clip and recording metadata, so it's vital to ensure the audio clip contains enough content for correct interpretation. Clips that are too short may be challenging to understand, while overly long clips may become tedious to annotate. Lastly, if the intention is to use annotations for training an ML model, consider the model's training requirements and input expectations.</p>"},{"location":"user_guide/annotation_projects/#annotating-a-clip","title":"Annotating a Clip","text":"<p>When you're ready to start annotating, click on the \"Annotate\" button in the navigation header. This action will open the annotation interface, as illustrated in the image below.</p> <p></p> <p>In this interface, you'll encounter one annotation task at a time, featuring the spectrogram of the corresponding clip and controls for adding annotations. The primary annotation workflow involves reviewing the spectrogram, adding annotations, and marking the task as done, in need of review, or verified.</p> Verified status <p>It's common to conduct a second review of the annotations for accuracy. Whombat facilitates this by offering a \"verified\" status. This status indicates that the annotations were initially completed and subsequently verified independently.</p> <p>Now, let's explore each section of the interface in more detail.</p>"},{"location":"user_guide/annotation_projects/#navigating-the-annotation-tasks","title":"Navigating the Annotation Tasks","text":"<p>At the top, you'll find an Annotation Progress bar (labeled A in the image) that provides information about the progress of annotation. This includes the annotation instructions, progress monitoring, and task navigation. To move to the next or previous task, use the arrows at the extremes of the bar.</p> <p>Work on a subset of tasks</p> <p>Utilize the filter menu to focus on a specific subset of annotation tasks. This feature is beneficial for team collaboration, allowing tasks to be distributed based on filtering conditions. For instance, one annotator may exclusively work on tasks associated with source recordings tagged as \"Country:Mexico,\" while another focuses on those tagged with \"Country:Costa Rica.\" This approach ensures annotators concentrate on priority tasks that require annotation.</p>"},{"location":"user_guide/annotation_projects/#reviewing-the-task-status","title":"Reviewing the Task Status","text":"<p>At the top right (labeled B), you'll find the Annotation Status of the current viewed task. If another annotator has marked the task as complete, in need of review, or verified, it will appear here as a badge. Clicking on the badge allows you to remove that status if necessary. The buttons on the right enable you to assign the corresponding status to the task.</p>"},{"location":"user_guide/annotation_projects/#providing-context-to-the-annotator","title":"Providing Context to the Annotator","text":"<p>Below the Annotation Progress bar, you'll encounter a section displaying the Recording Context (labeled C). Here, relevant metadata of the source recording is presented, including date, time, and location of the recording, along with any tags attached to the recording. This contextual information aids in interpreting the sounds present in the displayed clip.</p>"},{"location":"user_guide/annotation_projects/#creating-and-editing-sound-event-annotations","title":"Creating and Editing Sound Event Annotations","text":"<p>The Clip Spectrogram is a critical component with dedicated controls. This section displays the spectrogram of the assigned clip for annotation, along with any existing sound event annotations. The controls provided allow you to navigate, playback, and create new sound event annotations. For detailed information on navigating the spectrogram, refer to the Navigating\u00a0the\u00a0Spectrogram section. In the annotation interface, additional controls are available for creating annotations. These include Select, Create, and Delete options.</p> <ul> <li>Use the Select option to hover over and choose a single annotated sound event by clicking on it.     Once selected, you can Edit its RoI or view its details in the section below, including adding notes to this specific sound event (Sound Event Detail, labeled G in the figure).</li> <li>The Delete mode allows you to hover over and select a single sound event for deletion.</li> <li>Utilize the Create button to draw a RoI and generate a new sound event annotation.     The dropdown menu in the annotation controls lets you choose the type of geometry to use.</li> </ul> <p>Copying Annotations</p> <p>In scenarios where multiple similar-looking sound events occur within a single clip, you can efficiently annotate them by creating a single sound event, adding all the relevant tags, and then copying the annotation to create clones. To achieve this, select the desired annotation, press the Control key, and drag a copy to the desired location. This feature streamlines the annotation process for repetitive sound events.</p> <p>All annotations will be visible in the spectrogram alongside the current tags. A button next to the tags of a sound event annotation enables you to add more tags. Alternatively, click on a single tag to remove it from the annotation.</p>"},{"location":"user_guide/annotation_projects/#annotating-the-task-clip","title":"Annotating the Task Clip","text":"<p>Adjacent to the spectrogram, you'll find two essential sections for annotating the clip:</p> <ul> <li>Clip Tags Section (E): Use this section to attach tags to the entire audio content within the clip.</li> <li>Clip Notes Section (F): Employ this section to add any relevant notes pertaining to the clip.</li> </ul>"},{"location":"user_guide/annotation_projects/#the-tag-palette","title":"The Tag Palette","text":"<p>Directly above these sections is the Tag Palette (H): a powerful tool for expediting annotations. The Tag Palette allows you to store an assortment of annotation tags for easy access across different tasks. It serves two primary purposes:</p> <ul> <li>Automatic Tag Attachment: When creating a new sound event annotation, all tags in the palette are automatically attached to the annotation.</li> <li>Efficient Tag Addition: Clicking on a tag in the palette instantly adds it to the clip tags, streamlining the annotation process.</li> </ul> <p>Annotating Multiple Instances of the Same Sound:</p> <p>Every new sound event annotation automatically inherits all tags from the palette. This is particularly useful for annotating multiple sounds of the same source.</p> <p>Quickly Classify Clips</p> <p>Streamline the classification of audio clips by pre-selecting and keeping relevant tags in the palette. During clip review, a simple click on the appropriate tag completes the task.</p> <p>Adding Recording Tags to the Palette</p> <p>Clicking on a tag in the Recording Context section adds it to the Tag Palette. This is valuable, especially when all recordings are associated with known species. During annotation, you can utilize the recording-level tag and add it to the palette for precise sound event tagging.</p>"},{"location":"user_guide/annotation_projects/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<p>To enhance the speed of the annotation process, Whombat provides a set of convenient keyboard shortcuts for common actions. Refer to the table below for an overview of these shortcuts:</p> Keys Description Z Activate the Zoom mode of the spectrogram X Deselect everything and return to the Drag mode of the spectrogram A Enter the Create new sound event mode to initiate drawing a new RoI S Activate the Select mode to hover an select a single sound event D Activate the Delete mode to hover, select and delete a sound event G Mark the current task as Completed (Good) R Reject the current task or mark as in need for Review V Mark the current task as Verified N Proceed to the Next annotation task P Navigate to the Previous annotation task"},{"location":"user_guide/annotation_projects/#exporting-the-data","title":"Exporting the Data","text":"<p>Upon completing your diligent annotation work, you have the option to export all the annotations from your project for various purposes. Follow these steps:</p> <ul> <li>Navigate back to the project dashboard.</li> <li>Click on the download button located in the top-right corner of the dashboard.</li> </ul> <p>This action will generate a single JSON file containing all the annotations in the AOEF format. For more details on the format, refer to this website. The exported file can be easily shared with others, allowing them to import it directly into Whombat and view your annotations (assuming they have the recordings pre-registered, check Sharing\u00a0Datasets for more information). Sharing your annotations becomes a seamless process, enabling collaborative efforts and knowledge exchange.</p>"},{"location":"user_guide/annotation_projects/#conclusion","title":"Conclusion","text":"<p>Congratulations! You are now well-equipped to successfully manage and execute your annotation projects in Whombat. Whether you're diving into the Evaluation\u00a0section to gain insights into the performance of ML models and user annotators, or exploring the data further using the tools in the Exploration\u00a0section, you have a solid foundation to make the most of your annotations.</p>"},{"location":"user_guide/datasets/","title":"Managing Datasets and Recordings","text":"<p>In Whombat, you have the flexibility to efficiently manage multiple recording datasets.</p> <p>A dataset, simply put, is a collection of recordings. However, these recordings typically share a common context, whether it's from a single research project, a specific field season, or files downloaded from a particular website. While you can structure your datasets as you prefer, creating coherent datasets is generally considered good practice.</p> <p>Navigate to the dataset list using the sidebar or the cards on the homepage.</p> <p>Explore Whombat with Example Data</p> <p>Curious to see how a fully populated dataset looks in Whombat? Import the example dataset, complete with rich metadata and recordings, to explore its features and functionalities. The import data guide provides step-by-step instructions.</p>"},{"location":"user_guide/datasets/#selecting-a-dataset-to-work-on","title":"Selecting a Dataset to Work On","text":"<p>On the dataset list page, you'll find an overview of all available datasets. Clicking on the name of a dataset takes you to a dedicated page where you can explore its details and the recordings it contains.</p> <p></p>"},{"location":"user_guide/datasets/#create-a-dataset","title":"Create a dataset","text":"<p>To create a new dataset, click the +Create button. You'll be prompted to provide a name and a description for your dataset. Additionally, paste the full path of the folder containing the recordings you want to add. Whombat will scan the folder and automatically include all available audio files it can find.</p> Supported Audio Formats <p>Since v0.5.0, Whombat supports FLAC and MP3 in addition to WAV files.</p> <p>Audio file preparation</p> <p>Ensure that all dataset files are contained within the dataset folder. Prepare this folder before creating the dataset. While moving files, refrain from making any other modifications. Editing files may unintentionally erase crucial metadata associated with the recording.</p> Whombat Audio Folder <p>Whombat can only detect files located in your home folder. If you're using an external hard drive, copy the recordings you wish to annotate into your home folder. If you wish to modify this configuration, feel free to reach out.</p> <p>Whombat automatically extracts fundamental information from each discovered file, such as recording duration, sampling rate, and the number of audio channels. While Whombat can store additional details like date, time, and location of the recording, automatic extraction is not applied due to the diverse formats in which this information can be stored. Manual input is required for these specific details.</p>"},{"location":"user_guide/datasets/#import-a-dataset","title":"Import a dataset","text":"<p>Whombat offers a convenient option to import all dataset information from a file. Currently, we support datasets in a JSON-based format known as AOEF. Refer to this link for comprehensive information about the AOEF format.</p> <p>To import a dataset, simply click the import button. Select the JSON file you want to upload and provide the path to the directory where the recordings are stored.</p> What path should I provide? <p>AOEF files contain information about recordings, with each recording's path stored relative to a dataset audio directory. This design ensures portability, allowing others to download all dataset audio files into a custom folder. You can then import the dataset file by pointing to this custom folder.</p>"},{"location":"user_guide/datasets/#dataset-home-page","title":"Dataset Home Page","text":"<p>Upon selecting or creating a dataset, you'll be directed to the dataset detail page, offering a comprehensive overview of your dataset. Here, you'll find key statistics, including the total number of recordings. Additionally, the page provides insights into potential issues with files or their metadata, along with a detailed breakdown of the recording count.</p> <p></p> <p>From this dashboard, you can easily handle your dataset in various ways. A) shows the total number of recordings, while B) points out any issues found for specific recordings. C) Highlights recordings that were initially registered but are currently missing from your files, offering essential visibility. D) Gives a breakdown of the recordings based on tags, helping you organize efficiently. E) Showcases the latest recording issues and notes. Lastly, F) provides detailed information about the dataset and allows for easy editing.</p> <p>Deleting the dataset</p> <p>If you've made a mistake or need to remove a dataset for any reason, there's a delete button in the dashboard. Keep in mind that using this button will erase all recordings within the dataset, along with any work, including annotations, associated with those recordings. Please ensure you fully understand the consequences before proceeding.</p> <p>Sharing your dataset</p> <p>The dashboard also provides a button to download the dataset, allowing you to obtain metadata for all recordings. You can choose between a CSV or JSON format. If you plan to share the dataset with others, we recommend using the JSON format. This file enables your partner to effortlessly import all information into Whombat, assuming they also possess the corresponding audio files.</p>"},{"location":"user_guide/datasets/#manage-the-recordings-metadata","title":"Manage the Recordings Metadata","text":"<p>To access the table of recordings, simply click on the Recordings button in the navigation header. Within this table, you can conveniently edit the metadata of your recordings in a tabular format. This includes manually inputting the date and time of recording, specifying the location where the recording was made, and most importantly, adding any number of tags to your recordings.</p> <p></p> <p>Tag your recordings</p> <p>Whombat leverages tags throughout the system to improve data organization and provide additional context to associated objects. In Whombat, tags consist of a pair of text values referred to as key and value, giving each tag a unique meaning. The key specifies the category to which it belongs, while the value provides a specific meaning. For example, a tag's key could be \"species\" and its value could be \"Myotis myotis\". Feel free to create any tag with any key and value, allowing you the flexibility to organize your tags as needed.</p> <p>Tags as Recording Context</p> <p>Tags serve a dual purpose by not only organizing and querying your dataset but also providing essential context. When attached to a recording, tags act as snippets of information, offering details about the where, how and when of a recording. Displayed in the annotation interface, these tags equip annotators with valuable context, aiding in the interpretation and identification of the sometimes enigmatic sounds.</p> <p>Efficient Recording Search</p> <p>Easily find a recording using the search bar by entering a filename-related query. To further refine your view, apply filters through the  filter menu. Identify your desired filters, set them up, and see them displayed in the filter bar. To remove a filter, just click on its badge. Simplify your recording navigation with these helpful search and filter features.</p>"},{"location":"user_guide/datasets/#see-the-recording-spectrogram","title":"See the Recording Spectrogram","text":"<p>If you want to view the spectrogram of a recording, simply click on the path of the recording. This will lead you to a dedicated page where you can access all the recording information, visualize the spectrogram, and play the recording. Additionally, you have the option to edit the recording metadata directly from this page.</p> <p></p> <p>Adding Notes to the Recording</p> <p>On this page, you can view existing notes attached to the recording and add your own. Notes can include any information you find relevant. If you notice any issues with the recording or its metadata, adding a note and flagging it as an issue ensures that you or others can address the problem later.</p> <p>Deleting a recording</p> <p>Deleting a recording is also possible, but exercise caution as it will erase any annotations associated with this recording.</p>"},{"location":"user_guide/datasets/#ready-to-start-annotating","title":"Ready to start annotating","text":"<p>Now that you've registered a dataset and ensured its metadata is accurate, you're all set to begin annotating your audio material. Head to the next section to learn how to create and manage an annotation project.</p>"},{"location":"user_guide/evaluation/","title":"Evaluation","text":"<p>While the primary focus of Whombat revolves around annotation work, we acknowledge that annotation is just one facet of the ML development workflow. Whombat aims to enhance this workflow by not only providing tools for generating annotations but also offering features to comprehend the performance of ML models trained with these annotations.</p> <p>In this section, we will delve into leveraging the annotations created through your efforts to evaluate and explore ML model and annotator predictions. The topics we will cover include:</p> <ol> <li>Understanding\u00a0predictions</li> <li>Evaluation\u00a0Sets</li> <li>Creating\u00a0or\u00a0Importing\u00a0an\u00a0Evaluation\u00a0Set</li> <li>Selecting\u00a0Evaluation\u00a0Tags</li> <li>Adding\u00a0Examples\u00a0to\u00a0the\u00a0Evaluation\u00a0Set</li> <li>Importing\u00a0a\u00a0Model\u00a0Run</li> <li>Evaluating\u00a0the\u00a0Model\u00a0Run</li> <li>Exploring\u00a0the\u00a0Predictions</li> </ol>"},{"location":"user_guide/evaluation/#understanding-predictions","title":"Understanding Predictions","text":"<p>In Whombat, predictions share similarities with annotations. Like annotations, predictions exist in two forms: sound event and clip predictions. Predicted sound events encompass a Region of Interest (RoI) suspected to contain a relevant sound, along with associated tags. On the other hand, clip predictions consist of tags that potentially match the audio content of the clip, along with the predicted sound events within the clip. Noteworthy differences from regular annotations include a somewhat philosophical stance\u2014predictions are generally considered less trustworthy than annotations. Additionally, predictions often come with a quantification of certainty.</p> <p>In Whombat, sound event predictions feature an accompanying confidence score, aiming to quantify the level of certainty the ML model or user has regarding the presence of that sound event. Predicted tags also carry a confidence score. For instance, a predicted sound event could be associated with two tags: \"sound:Airplane\" with a confidence score of 80% and \"sound:Human\" with a confidence score of 20%. Importantly, this combination doesn't create a contradiction; instead, it provides nuanced insights into the confidence levels associated with each predicted tag.</p> <p>Sets of predictions are organized into Model Runs or User Runs. These collections gather predictions created with the same model or by the same user, under identical configurations and singular conditions. These prediction sets can then be evaluated against the ground truth.</p>"},{"location":"user_guide/evaluation/#evaluation-sets","title":"Evaluation Sets","text":"<p>In the evaluation process, it's common to assess a model or user by comparing their predictions against a set of known examples. To facilitate this, Whombat has organized the entire evaluation module around the concept of evaluation sets.</p> <p>An evaluation set is essentially a curated collection of fully annotated audio clips. These clips serve as benchmark examples for comparing predictions. Evaluation sets can be sourced from existing annotation projects or directly imported from other sources. Similar to annotation sets, evaluation sets often concentrate on specific types of sounds. Therefore, an evaluation set is associated with a set of tags that define the focus areas for assessment.</p> <p>Each evaluation set should be tailored to a specific task\u2014a particular problem in computer audition being evaluated. This determination not only defines the types of expected predictions but also, crucially, shapes the evaluation criteria for assessing these predictions.</p> <p>Supported Tasks</p> <p>In Whombat, we currently support four different types of computer audition tasks:</p> <ul> <li> <p>Clip Classification: In this task, the user or model is expected to   correctly predict the class to which an audio clip belongs.   The true class is   determined by the tag attached to the clip.</p> </li> <li> <p>Clip Tagging: In this task, the user or model is   expected to predict a set of tags attached to an audio clip.</p> </li> <li> <p>Sound Event Classification: For this task, the user or model is   expected to correctly predict the class to which each sound event in the   evaluation set belongs.   The true class is determined by the tag attached to the   sound event.   In this scenario, it is expected that the user/model is provided   with the Region of Interest (RoI) of the sound event for inference.</p> </li> <li> <p>Sound Event Detection: In this task, the user or model is expected to   correctly locate each relevant sound event and predict the correct tag set for   each sound event.   This involves estimating the RoI and predicting the tag set,   making it a simultaneous localization and classification problem.</p> </li> </ul> <p></p> <p>To begin working with an evaluation set, click on the Evaluation button on the sidebar (labeled C in the figure) or use the navigation cards on the homepage. Here, you'll find a list of existing evaluation sets. You can search for a particular set using the search bar or create a new one. Clicking on a set provides detailed insights into its contents.</p> <p></p>"},{"location":"user_guide/evaluation/#creating-or-importing-an-evaluation-set","title":"Creating or Importing an Evaluation Set","text":"<p>To create a new evaluation set, click on the +Create button at the top right. You will be prompted to provide a name, a description and the task for the evaluation set.</p> <p>Alternatively, if you already have an evaluation set saved in an AOEF file, you can import it directly by clicking on the Import button and selecting the appropriate file.</p> Creating AOEF files <p>For an efficient way to generate AOEF files with your own data, we recommend using the <code>soundevent</code> package. This package offers user-friendly functions aligned with Whombat's data structure, facilitating a seamless integration process.</p> <p>Once created or imported, you will be redirected to the Evaluation Set Dashboard for further management and exploration.</p>"},{"location":"user_guide/evaluation/#the-evaluation-set-dashboard","title":"The Evaluation Set Dashboard","text":"<p>The Evaluation Set Dashboard offers a concise summary of key information related to the evaluation set and its associated elements. The overview section provides a snapshot, displaying the count of registered examples, the number of tags utilized for evaluation, and the tally of model runs and user sessions imported for this specific evaluation set.</p> <p>Within the dashboard, you'll find details about the most recent model and user runs, along with insights into their respective evaluations. Additionally, information about the evaluation set, including its description and name, is readily accessible and editable.</p> <p>Downloading the Evaluation Set</p> <p>Clicking the Download button in the dashboard allows you to download the evaluation set information. This download includes details about the contained clips and their corresponding ground truth annotations. This information proves valuable for extracting the corresponding audio material and running a model to create a Model Run.</p> Deleting the Evaluation Set <p>Exercise caution when using the Delete button, as it will permanently remove the evaluation set. This action includes the deletion of any associated model and user runs, along with their respective evaluations. Ensure you are certain about this decision or have appropriate backups in place.</p>"},{"location":"user_guide/evaluation/#selecting-evaluation-tags","title":"Selecting Evaluation Tags","text":"<p>To manage evaluation tags for the current evaluation set, click on the Tags button in the navigation header. You'll be redirected to a page where you can easily handle evaluation tags. On the right column, you'll find all the currently registered evaluation tags. Click on a tag to remove it. Use the search bar on the left column to find registered tags, create new ones, and select a tag to add it to the evaluation set.</p> <p></p> <p>Selecting a Good set of Evaluation Tags</p> <p>Selecting evaluation tags is a crucial step in assessing predictions. Annotated data or predictions may have additional tags that aren't directly relevant to the evaluation task. These tags define which ones will be used for assessment.</p> <p>The usage of tags depends on the evaluation task. For instance, in the clip classification task, the tag set is considered the possible classes a clip can take. Ensure you choose a tag set aligned with your evaluation goals.</p> <p>Updating the tag set</p> <p>It's recommended to select a comprehensive set of tags for evaluation from the beginning. Evaluations depend on the tag set, and assessments made with different tag sets aren't directly comparable. If you need to change the tag set, update all evaluations accordingly.</p>"},{"location":"user_guide/evaluation/#adding-examples","title":"Adding Examples","text":"<p>To add examples to the evaluation set, click on the \"Examples\" button in the navigation header. Adding examples involves two steps. First, select an annotation project as the source for examples. The added examples are clip annotations from the chosen project. Then, precisely choose which clips to add from the selected project by applying filters to the annotations. For instance, it's recommended to add only annotations marked as fully annotated (completed). After reviewing the number of examples to add, click Add when satisfied.</p> <p></p>"},{"location":"user_guide/evaluation/#importing-a-model-run","title":"Importing a Model Run","text":"<p>After completing the setup, you are ready to import and evaluate model runs to explore their predictions. Navigate to the \"Model Runs\" tab in the navigation header to view the list of all registered model runs. Click on the import button next to the search bar and select the file containing the model run predictions.</p> <p>Data Format</p> <p>Model runs are expected to be in AOEF format. For more information on this format, refer to soundevent.</p> <p>Creating your Model Runs</p> <p>It's recommended to use the <code>soundevent</code> package to format your data. This package provides tools to structure your data in a way that closely resembles Whombat data and has handy functions to export the data directly into AOEF format.</p>"},{"location":"user_guide/evaluation/#evaluating-the-model-run","title":"Evaluating the Model Run","text":"<p>Upon selecting or importing a model run, you will be directed to the model run detail page. At the top of the page, you'll find information about the model run evaluation. Note that when a model run is created, it is not automatically evaluated. If the evaluation is missing, a message will be displayed, and you can initiate the evaluation process by clicking on the \"Evaluate\" button. If the evaluation has already been conducted, you can choose to \"Update\" it, especially if there have been changes in the evaluation tag set or refinements in the annotations of the evaluation set examples.</p> <p>The evaluation overview provides the overall score of the evaluation along with additional computed metrics for a comprehensive assessment.</p> <p></p>"},{"location":"user_guide/evaluation/#exploring-the-predictions","title":"Exploring the Predictions","text":"<p>Directly below the evaluation overview, you'll find the Evaluation Explorer\u2014a powerful tool to delve into and compare predictions and annotations for each audio clip.</p> <p></p> <p>To focus on specific clips, utilize the filter menu (labeled A in the figure). Select a filter type and configure it according to your needs. All applied filters will be visible in the filter bar below; click on a filter badge to remove it.</p> <p>Fine-tune the visualization using the controls at B. Toggle between displaying predictions and annotations, and set the threshold range to select which predictions to visualize. Only predictions within this score threshold will be shown.</p> <p>Navigate effortlessly through different clips with the controls in section C. Move to the next or previous clip, or opt for a random selection by clicking the central button.</p> <p>The explorer presents the clip's spectrogram, showcasing predictions and annotations. Refer to the Navigating\u00a0the\u00a0Spectrogram section for guidance on moving around the spectrogram.</p> <p>Individual clip scores and additional metrics are detailed in section E, while predicted and ground truth tags are displayed for easy comparison in section F.</p>"},{"location":"user_guide/exploration/","title":"Data Exploration","text":"<p>Whombat allows you to delve deep into your meticulously curated data through a variety of exploration tools. Discover patterns, gain insights, and refine your understanding of your audio recordings, audio clips, and sound events.</p> <p>Key Exploration Areas:</p> <ol> <li>Recordings: Explore metadata, locations, and spectrograms of your audio recordings.</li> <li>Audio Clips: Examine specific segments of your recordings in detail.</li> <li>Sound Events: Analyze and visualize sound events within their feature space</li> </ol>"},{"location":"user_guide/exploration/#accessing-data-exploration","title":"Accessing Data Exploration","text":"<p>To begin your exploration, click on the \"Exploration\" button on the sidebar or use the navigation cards on the home page.</p> Button D will take you to the exploration section <p>Once you're in the exploration section, you can choose what you want to explore (recording, clips or sound events) and your preferred view \u2013 typically, a list format or a gallery format is available.</p>"},{"location":"user_guide/exploration/#controlling-the-number-of-items-displayed","title":"Controlling the Number of Items Displayed","text":"<p>The exploration pages provide tools to navigate through all the items registered in Whombat. To ensure smooth performance, only a limited number of items are displayed at a time. You can see the current viewing range and the total number of items in the top left corner:</p> <p>To navigate through the list and adjust the number of items displayed simultaneously, use the pagination controls located in the top right corner:</p>"},{"location":"user_guide/exploration/#filtering-items","title":"Filtering Items","text":"<p>To refine the list of items you're currently viewing, you can apply custom filters. The filtering controls are situated in the top left corner:</p> <p>Click on the \"Apply filters\" button to open the filtering menu, where you can browse and select from the available filters. Once applied, the filters will appear as badges on the \"Filter bar\" next to the button. You can easily remove any filter by clicking on the cross within its corresponding badge.</p>"},{"location":"user_guide/exploration/#explore-recordings-on-a-map","title":"Explore recordings on a Map","text":"<p>Visualize the geographical distribution of your recordings by switching to the \"Map\" tab within the Recording exploration section.</p> <p>The map on the left will display a marker for each recording location. Clicking on any marker will reveal details about the corresponding recording on the right side of the screen. You'll be able to view the spectrogram and listen to the audio playback.</p>"},{"location":"user_guide/exploration/#sound-event-scatterplot","title":"Sound Event Scatterplot","text":"<p>Visualize and explore your sound events in a dynamic 3D scatterplot by navigating to the sound event section. This representation allows you to quickly browse and analyze a large number of sound events within their feature space.</p> <p>Every sound event is plotted based on three key features: duration, lowest frequency, and highest frequency. The color of each point corresponds to the species tag associated with the sound event, providing a visual way to identify patterns and clusters.</p> <p>Click on any point in the scatterplot to Get detailed information about the selected sound event and see a focused spectrogram highlighting the chosen sound event.</p>"},{"location":"user_guide/faq/","title":"FAQ","text":""},{"location":"user_guide/faq/#starting-up-whombat","title":"Starting Up Whombat","text":""},{"location":"user_guide/faq/#im-having-trouble-logging-in-what-should-i-do","title":"I'm having trouble logging in. What should I do?","text":"<p>If you're logging into Whombat for the first time, you might not have a personalized username and password yet. Don't worry, Whombat automatically sets up a default user during initialization.</p> <p>To get started:</p> <ul> <li>Username: admin</li> <li>Password: admin</li> </ul> <p>After your initial login, head over to your user profile to customize both your username and password to something more personalized and secure.</p>"},{"location":"user_guide/faq/#focusing-on-sounds","title":"Focusing on sounds","text":""},{"location":"user_guide/faq/#can-i-isolate-sounds-within-specific-frequency-range","title":"Can I isolate sounds within specific frequency range?","text":"<p>If you know your target sounds fall within a specific frequency range, you can apply a bandpass filter to focus your attention and filter out extraneous noise.</p> <p>To do this:</p> <ol> <li>Access Spectrogram Settings: Locate the Spectrogram Settings within the annotation interface.       (You may need to refer to the Spectrogram\u00a0Settings section of the documentation for the precise location).</li> <li>Apply Bandpass Filter: Adjust the filter settings to define your desired frequency range.</li> </ol> <p>Additional tips</p> <p>Experiment with Filter Settings: Try different frequency ranges to find the optimal settings for isolating your target sounds. Combine with Denoising: Use the denoising feature in conjunction with filtering to further enhance clarity.</p>"},{"location":"user_guide/faq/#ultrasonic-recordings","title":"Ultrasonic recordings","text":""},{"location":"user_guide/faq/#i-have-time-expanded-recordings-can-i-use-them","title":"I have time expanded recordings, can I use them?","text":"<p>Whombat fully supports time-expanded audio recordings, commonly used in bioacoustics research to analyze high-frequency vocalizations like bat calls. While Whombat assumes recordings are not time-expanded by default, you can easily adjust for this:</p> <ol> <li>Navigate to the Recording Detail Page: Access the page dedicated to the specific recording you want to work with.</li> <li>Update Time Expansion Factor: In the recording media info, you'll find an option to specify the \"Time Expansion Factor\" used during recording.       Enter the correct value here.</li> </ol> <p>Adjust the time expansion early</p> <p>Set the time expansion factor as soon as you upload a time-expanded recording to ensure accurate frequency calculations from the start.</p> Restoring the original samplerate <p>While it's possible to unexpand recordings (refer to the bats section of the xeno-canto documentation for tips), Whombat allows you to work directly with time-expanded recordings without altering the original data. We recommend this approach as it maintains the integrity of your source material and provides a clear record of how the recording was created.</p>"},{"location":"user_guide/faq/#import-and-export","title":"Import and Export","text":""},{"location":"user_guide/faq/#what-is-the-aoef-format","title":"What is the AOEF format?","text":"<p>The AOEF format is a custom data format designed for integration with Whombat data. It is outlined in the <code>soundevent</code> package, and for a more in-depth understanding, we suggest checking out their documentation. In simple terms, it's a JSON-based format, drawing heavy inspiration from the COCO\u00a0dataset format.</p> <p>*[AOEF]: Acoustic Object Exchange Format</p>"},{"location":"user_guide/installation/","title":"Installation","text":"<p>Getting Whombat up and running is a breeze! We offer two straightforward methods to suit your preferences and needs.</p> Whombat on the cloud <p>Interested in hosting a publicly accessible and collaborative instance of Whombat? Let us know, and we'll be more than happy to guide you through the process.</p>"},{"location":"user_guide/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"user_guide/installation/#standalone-executable","title":"Standalone Executable","text":"<p>The simplest way to dive into Whombat is by downloading our pre-packaged executable file. We've tailored versions for Windows, Mac OS, and Ubuntu. Head over to our GitHub repository's releases section to get the latest version.</p>"},{"location":"user_guide/installation/#python-package","title":"Python Package","text":"<p>If you're comfortable with Python, installing Whombat as a Python package is easy. Just run the following command:</p> <pre><code>pip install whombat\n</code></pre> <p>This should get you up and running in no time. Should you encounter any hiccups, check out the FAQ section for troubleshooting tips.</p>"},{"location":"user_guide/installation/#running-whombat","title":"Running Whombat","text":"<p>Once you've downloaded the file, kick off Whombat by double-clicking on the executable. This action spawns a new window that should resemble the following:</p> <p></p> <p>After the window displays the \"ready\" message a browser will be opened on Whombat, or open your preferred browser and navigate to:</p> <pre><code>http://localhost:5000\n</code></pre> Start with Python <p>To start whombat using the Python installation, run the command</p> <pre><code>python -m whombat\n</code></pre>"},{"location":"user_guide/installation/#first-user","title":"First User","text":"<p>If this is your initial encounter with Whombat, you'll be greeted with a screen to create your user profile. Please enter your details and set up your user account.</p> <p>Your Information</p> <p>The details you provide here are stored locally on your computer and are not shared with others. However, if you decide to download and share a dataset or annotations, the information of the user who created them will be visible in the exported files. Therefore, your data will only be shared with the people you send these files to. If you wish to share your work, it is essential to provide your information so that others can attribute you correctly and contact you if needed.</p>"},{"location":"user_guide/installation/#login","title":"Login","text":"<p>For returning users, Whombat welcomes you with a login form. Enter your username and password to access the home page. Whombat's user system supports multiple users, allowing for individual work tracking.</p> <p></p>"},{"location":"user_guide/installation/#home-screen","title":"Home Screen","text":"<p>Welcome to the Whombat Home screen! After logging in, your view should resemble the image below:</p> <p></p> <p>From this central hub, you're all set to dive into your audio annotation journey. Navigate using the sidebar or the cards presented on the home page. Whether you're managing datasets, creating annotation projects, or exploring model predictions, the Home screen is your launchpad to your annotation work.</p>"},{"location":"user_guide/guides/","title":"Practical Guides &amp; Advanced Use Cases","text":"<p>Welcome! This section offers practical, goal-oriented tutorials for Whombat.</p> <p>These guides cover specific tasks and advanced workflows \u2013 sometimes including Python code \u2013 to show how Whombat can be used in real-world scenarios beyond the basics.</p>"},{"location":"user_guide/guides/#current-guides","title":"Current Guides","text":"<p>Here's what's currently available:</p> <ul> <li>Import\u00a0Example\u00a0Data: Get a quick, hands-on tour with pre-loaded data.</li> <li>Navigating\u00a0the\u00a0Spectrogram: Master viewing and interacting with spectrograms.</li> <li>Export\u00a0Annotations\u00a0for\u00a0ML\u00a0Development: Prepare and export your data for training ML models.</li> </ul>"},{"location":"user_guide/guides/#more-guides-your-ideas","title":"More Guides &amp; Your Ideas","text":"<p>We plan to add many more guides covering advanced topics and integrations.</p> <p>Have an idea for a guide? We'd love to hear it! Please suggest a guide by opening an issue on GitHub. Your input helps us build better resources for everyone.</p>"},{"location":"user_guide/guides/export/","title":"Export Annotations for ML Development","text":"<p>Whombat is degined to facilitate the generation of high-quality labeled audio data. But the real utility comes from using that data to train machine learning models. This guide will show you how to take your Whombat annotations and build a simple species classifier in Python</p>"},{"location":"user_guide/guides/export/#data-formats","title":"Data formats","text":"<p>Before we dive into the practical steps, let's take a moment to understand the importance of data formats in audio annotation. The bioacoustics field employs various formats, such as Praat text files, Audacity annotations, and Raven annotations. While these formats serve their purpose, they often present limitations:</p> <ol> <li>They don't export all necessary metadata, such as recording info, tags, and user actions.</li> <li>They lack information on annotation completeness and can't indicate if a clip or whole recording was annotated.</li> <li>They have rigid ways of representing the ROI of a sound event.</li> </ol> <p>To overcome these challenges and ensure that your valuable annotation data is fully preserved and readily usable for machine learning, Whombat utilizes a custom format called the Acoustic Object Exchange Format (AOEF). This JSON-based format retains all the essential data and rich metadata required for effective model development.</p>"},{"location":"user_guide/guides/export/#exporting-your-work-from-whombat","title":"Exporting Your Work from Whombat","text":"<p>Whombat provides a convenient way to export your work, allowing you to share data and collaborate with others. You can export various types of information:</p> <ul> <li>Datasets: Share the meticulously curated metadata of your recordings with colleagues or collaborators.</li> <li>Annotation Projects: Export complete annotation projects, including all annotations, user information, timestamps, and annotation statuses.     This provides a comprehensive record of the annotation process.</li> <li>Evaluation Sets: Share predefined evaluation sets, containing specific clips and target sounds, to ensure standardized model evaluation and comparison across different teams or researchers.</li> <li>Evaluations: Download the results of model evaluations.     This includes overall scores, detailed metrics, and a breakdown of individual predictions, facilitating in-depth analysis and transparent reporting of model performance.</li> </ul>"},{"location":"user_guide/guides/export/#how-to-export","title":"How to Export","text":"<p>Exporting your data from Whombat is a straightforward process:</p> <ol> <li>Navigate to the Detail View: Open the detail view of the dataset, annotation project, evaluation set, or evaluation that you wish to export.</li> <li>Click \"Download\": In the top right section of the page, you'll find a \"Download\" button.       Click this button to initiate the download process.</li> <li>Wait for File Preparation: Whombat will prepare the export file, which may take a few seconds depending on the size of the data.</li> <li>Access the Downloaded File: Once the download is complete, the file will be saved to your designated \"Downloads\" folder.</li> </ol> <p>Exported files will have a descriptive filename. For example, a downloaded dataset might have a name like: <code>dataset-3u98gjp294rn9p8sd.json</code></p> <p>The unique ID following the hyphen identifies the specific dataset. Each exported file also includes information about the export timestamp, allowing you to keep track of different versions.</p>"},{"location":"user_guide/guides/export/#loading-annotations-with-soundevent","title":"Loading Annotations with <code>soundevent</code>","text":"<p>The <code>soundevent</code> library is a helpful tool for working with audio annotation data in Python. It provides convenient functions for loading, manipulating, and analysing the annotated audio files as exported from Whombat. We'll use it to load the exported JSON file from Whombat into a <code>soundevent.data.AnnotationProject</code> object.</p> <pre><code>from soundevent import data, io\n\nannotation_project = io.load(\"example_annotation_project.json\")\n</code></pre> <p>This <code>AnnotationProject</code> object mirrors how Whombat organizes annotation data in its database. Let's explore its contents:</p> <pre><code># See how many annotation tasks are in the project\nprint(\"Annotation tasks \", len(annotation_project.tasks))\n\n# Check the number of annotation tags used\nprint(\"Annotation tags: \", len(annotation_project.annotation_tags))\n</code></pre>"},{"location":"user_guide/guides/export/#data-cleaning-and-preprocessing","title":"Data Cleaning and Preprocessing","text":"<p>Before we start building our classifier, it's essential to clean up our data. This involves removing any incomplete or problematic annotations that could negatively impact the model's performance.</p> <p>In this example, we'll filter out tasks that are not marked as complete or have associated issues.</p> <pre><code>def task_is_complete(task: data.AnnotationTask) -&gt; bool:\n    \"\"\"Check if an annotation task is complete.\n\n    A task is considered complete if it has a 'completed' status badge\n    and does not have a 'rejected' badge (indicating it needs review).\n    \"\"\"\n    for badge in task.status_badges:\n        if badge.state == data.AnnotationState.rejected:\n            # Task needs review, so it's not considered complete.\n            return False\n\n        if badge.state == data.AnnotationState.completed:\n            # Task is explicitly marked as complete.\n            return True\n\n    # If no 'completed' badge is found, the task is not complete.\n    return False\n\n\n# Create a dictionary mapping clip UUIDs to their completion status.\nclip_status = {\n    task.clip.uuid: task_is_complete(task)\n    for task in annotation_project.tasks\n}\n\n\ndef clip_annotation_is_complete(annotation: data.ClipAnnotation) -&gt; bool:\n    \"\"\"Check if a clip annotation is complete based on its task status.\"\"\"\n    if annotation.clip.uuid not in clip_status:\n        # If the clip is not part of the project's tasks, ignore it.\n        return False\n\n    # Return the pre-computed completion status from the clip_status dictionary.\n    return clip_status[annotation.clip.uuid]\n\n\ndef clip_annotation_has_issues(annotation: data.ClipAnnotation) -&gt; bool:\n    \"\"\"Check if a clip annotation has any associated issues.\"\"\"\n    return any(note.is_issue for note in annotation.notes)\n\n\n# Filter the clip annotations to include only those that are complete and have\n# no issues.\nannotated_clips = [\n    annotation\n    for annotation in annotation_project.clip_annotations\n    if not clip_annotation_has_issues(annotation)\n    and clip_annotation_is_complete(annotation)\n]\n</code></pre>"},{"location":"user_guide/guides/export/#preparing-for-model-training-train-test-split-and-evaluation-set","title":"Preparing for Model Training: Train-Test Split and Evaluation Set","text":"<p>Now that we have a clean set of annotated clips, let's prepare the data for training a machine learning model. This involves two key steps:</p> <ul> <li>Splitting the data into training and testing sets: This is crucial to evaluate how well our model generalizes to unseen data.</li> <li>Creating an evaluation set: This allows for standardized evaluation and comparison of different models.</li> </ul>"},{"location":"user_guide/guides/export/#splitting-into-training-and-testing-sets","title":"Splitting into Training and Testing Sets","text":"<p>This annotation project focuses on classifying bat species based on their echolocation calls. However, there's a limitation: each species is represented by only one recording. Ideally, we'd have multiple recordings per species to ensure a more robust and representative split. While this isn't the case here, we'll proceed with the example for illustration purposes.</p> <p>First, we'll extract the species information from each <code>ClipAnnotation</code> object. Remember that each clip is derived from a longer recording, and the recording has associated tags, including the species.</p> <pre><code>from sklearn.model_selection import train_test_split\n\nexample_annotation = annotated_clips[0]\nrecording = example_annotation.clip.recording\n\nfor tag in recording.tags:\n    print(repr(tag))\n</code></pre> <p>Next, we'll determine the species of each clip and count how many examples we have per species. To avoid issues with species having only one example, we'll exclude those for now.</p> <pre><code>from collections import Counter\n\ny_true = [\n    data.find_tag(annotation.clip.recording.tags, \"species\").value\n    for annotation in annotated_clips\n]\n\nexamples_per_species = Counter(y_true)\n\nannotated_clips, y_true = zip(\n    *[\n        (annotation, species)\n        for annotation, species in zip(annotated_clips, y_true)\n        if examples_per_species[species] &gt; 1\n    ]\n)\n</code></pre> <p>We'll use the <code>train_test_split</code> function from scikit-learn to divide our data. We'll perform a stratified split based on species to ensure a balanced representation in both training and testing sets.</p> <pre><code>seed = 42\ntrain_clips, test_clips, y_train, y_test = train_test_split(\n    annotated_clips,\n    y_true,\n    test_size=0.3,  # 30 % of the data will be used for testing\n    stratify=y_true,\n    random_state=seed,\n)\n</code></pre>"},{"location":"user_guide/guides/export/#creating-an-evaluation-set","title":"Creating an Evaluation Set","text":"<p>An evaluation set allows us to assess the performance of our trained model on a held-out portion of the data. This set can be saved to a file and shared, enabling others to evaluate their models on the same data and compare results.</p> <p>To create an evaluation set, we need to define:</p> <ul> <li>Target sounds: The specific sounds or categories we want to evaluate.     In this case, our target is the \"species\" tag.</li> <li>Examples: The specific annotated clips that will be used for evaluation.     Here, we'll use the <code>test_clips</code> we created earlier.</li> </ul> <pre><code>evaluation_tags = {\n    data.find_tag(annotation.clip.recording.tags, \"species\")\n    for annotation in test_clips\n}\n</code></pre> <p>Now, let's construct the EvaluationSet object.</p> <pre><code>import uuid\n\n# Ignore this bit, it is just to make sure the uuid is unique but still\n# deterministic\nnamespace = uuid.uuid5(uuid.NAMESPACE_DNS, \"whombat\")\nevaluation_set_uuid = uuid.uuid5(namespace, \"Example Evaluation Set\")\n\n# Now we can define the evaluation set\nevaluation_set = data.EvaluationSet(\n    uuid=evaluation_set_uuid,\n    name=\"Example evaluation set\",\n    description=\"Example evaluation set for species classification\",\n    clip_annotations=test_clips,\n    evaluation_tags=list(evaluation_tags),\n)\n</code></pre> <p>Finally, we can save the evaluation set to a JSON file.</p> <pre><code>io.save(evaluation_set, \"example_evaluation_set.json\")\n</code></pre> <p>This saved file can be easily loaded back into Python or even imported back into Whombat, allowing you to upload and analyze model predictions on this standardized evaluation set.</p>"},{"location":"user_guide/guides/export/#create-a-simple-classifier-with-features","title":"Create a Simple Classifier with Features","text":"<p>In this section, we'll create a basic bat species classifier using manually engineered acoustic features. This approach, common before the deep learning era, involves extracting specific features from echolocation calls and using them to train a machine learning model.</p> <p>We'll use three readily available features from our annotated data:</p> <ul> <li>Duration: The length of the echolocation call.</li> <li>Lowest Frequency: The lowest frequency present in the call.</li> <li>Highest Frequency: The highest frequency present in the call.</li> </ul> <p>These features can be derived directly from the bounding boxes we've annotated around each call. Our classifier will attempt to predict the species of a bat based on these features.</p>"},{"location":"user_guide/guides/export/#collecting-training-data","title":"Collecting Training Data","text":"<p>First, let's gather all the annotated sound events from our training set.</p> <pre><code>train_sound_events = [\n    sound_event_annotation\n    for clip_annotation in train_clips\n    for sound_event_annotation in clip_annotation.sound_events\n]\nprint(len(train_sound_events))\n</code></pre>"},{"location":"user_guide/guides/export/#extracting-features","title":"Extracting Features","text":"<p>Now for each annotated sound event we will get all the features.</p> <pre><code>def get_features(sound_event: data.SoundEvent) -&gt; tuple[float, float, float]:\n    \"\"\"\n    Extract acoustic features from a SoundEvent object.\n    \"\"\"\n    return (\n        data.find_feature(sound_event.features, \"duration\").value,\n        data.find_feature(sound_event.features, \"low_freq\").value,\n        data.find_feature(sound_event.features, \"high_freq\").value,\n    )\n\n\nX_train = [\n    get_features(annotation.sound_event)\n    for annotation in train_sound_events\n]\n</code></pre>"},{"location":"user_guide/guides/export/#extracting-species-labels","title":"Extracting Species Labels","text":"<p>Now, let's extract the corresponding species label for each sound event.</p> <pre><code>y_train = [\n    data.find_tag(annotation.tags, \"species\").value\n    for annotation in train_sound_events\n]\n</code></pre>"},{"location":"user_guide/guides/export/#model-training","title":"Model Training","text":"<p>With our features and labels prepared, we can now train a simple classifier. We'll use a linear Support Vector Machine (SVM) for this purpose.</p> <pre><code>from sklearn.svm import SVC\n\nseed = 42\nmodel = SVC(kernel=\"linear\", random_state=seed)\n\nmodel.fit(X_train, y_train)\n</code></pre>"},{"location":"user_guide/guides/export/#generating-predictions","title":"Generating Predictions","text":"<p>Let's use our trained model to predict the species of calls in the evaluation set. For each clip, we'll iterate through the annotated sound events, extract the features, and use the model to predict the species. We'll then attach this prediction as a <code>PredictedTag</code> to the sound event.</p> <pre><code>model_run_uuid = uuid.uuid5(namespace, \"Example Model Run (Features)\")\n\n\ndef predict_sound_event(sound_event: data.SoundEvent):\n    \"\"\"\n    Predict the species of a sound event and create a SoundEventPrediction.\n    \"\"\"\n    features = get_features(sound_event)\n    species = model.predict([features])[0]\n    return data.SoundEventPrediction(\n        tags=[\n            data.PredictedTag(\n                tag=data.Tag(key=\"species\", value=species),\n                score=1,\n            )\n        ],\n        sound_event=sound_event,\n        uuid=uuid.uuid5(model_run_uuid, f\"sound_event_prediction_{sound_event.uuid}\"),\n    )\n\n\ndef process_clip(clip_annotation: data.ClipAnnotation):\n    \"\"\"\n    Generate predictions for all sound events in a clip.\n    \"\"\"\n    return data.ClipPrediction(\n        clip=clip_annotation.clip,\n        sound_events=[\n            predict_sound_event(annotation.sound_event)\n            for annotation in clip_annotation.sound_events\n        ],\n        uuid=uuid.uuid5(model_run_uuid, f\"clip_prediction_{clip_annotation.uuid}\"),\n    )\n\n\npredictions = [\n    process_clip(clip_annotation)\n    for clip_annotation in evaluation_set.clip_annotations\n]\n</code></pre>"},{"location":"user_guide/guides/export/#saving-model-predictions","title":"Saving Model Predictions","text":"<p>We can now store these predictions in a <code>ModelRun</code> object and save it to a file.</p> <pre><code>model_run = data.ModelRun(\n    uuid=model_run_uuid,\n    name=\"Support Vector Machine for Bats\",\n    # Usually you will continue to improve your model so it is a good\n    # idea to provide a version number\n    version=\"1.0\",\n    description=\"Model run using manually engineered features\",\n    clip_predictions=predictions,\n)\n\nio.save(model_run, \"example_model_run.json\")\n</code></pre> <p>This file can be imported into Whombat to visualize and analyze the model's predictions on the evaluation set.</p>"},{"location":"user_guide/guides/export/#evaluating-the-model","title":"Evaluating the Model","text":"<p>Now that we have predictions from our bat species classifier, let's evaluate how well it performs. We can use the <code>soundevent</code> library's <code>soundevent.evaluation.sound_event_detection</code> function to compare our model's predictions to the ground truth annotations in the evaluation set.</p> <pre><code>from soundevent import evaluation\n\nresult = evaluation.sound_event_detection(\n    clip_predictions=model_run.clip_predictions,\n    clip_annotations=evaluation_set.clip_annotations,\n    tags=evaluation_set.evaluation_tags,\n)\n</code></pre> <p>The sound_event_detection function is designed to assess a model's ability to both detect sound events (i.e., locate them in the audio) and classify them (i.e., assign the correct species label). It works by trying to match predicted sound events to the annotated sound events and then evaluating the accuracy of the species predictions.</p> <p>In our case, we've simplified the task by providing the model with the exact locations of the sound events. Our model doesn't actually perform sound event detection; it only performs classification. Think of it as if we've already perfectly detected the bat calls, and now we're just assessing how well the model can identify the species of each call.</p> <p>Therefore, this evaluation primarily focuses on the species classification accuracy. The <code>sound_event_detection</code> function will still attempt to match predictions to annotations, but since we've provided the locations, all annotations will be perfectly matched with a prediction.</p>"},{"location":"user_guide/guides/export/#analyzing-the-results","title":"Analyzing the Results","text":"<p>The sound_event_detection function returns an Evaluation object, which provides a wealth of information about the model's performance:</p> <ul> <li>Overall Score: A summary metric representing the overall performance.</li> <li>Additional Metrics: Other metrics like precision, recall, and F1-score, providing a more nuanced view of the model's capabilities.</li> <li>Example-by-Example Breakdown: A detailed analysis of how the model performed on each individual sound event, including which ones were misclassified.</li> </ul> <p>This detailed breakdown is incredibly valuable for understanding the model's strengths and weaknesses. You can identify patterns in the misclassifications, which might reveal areas where the model struggles or where the features are not informative enough.</p> <pre><code># Let's print out the overall score\nprint(f\"Overall score: {result.score:.2%}\")\n\n# And all the global metrics\nfor metric in result.metrics:\n    print(f\"metric - {metric.name} - {metric.value:.2%}\")\n</code></pre>"},{"location":"user_guide/guides/export/#sharing-the-evaluation","title":"Sharing the Evaluation","text":"<p>The <code>Evaluation</code> object can also be saved to a file, which can be shared with others to provide transparency about the model's performance. This allows others to see exactly where the model succeeded and where it failed, facilitating further analysis and comparison with other models.</p>"},{"location":"user_guide/guides/export/#conclusions","title":"Conclusions","text":"<p>This guide has demonstrated how to leverage annotated audio data from Whombat to train a machine learning model for bat species classification. We covered key steps, including loading and preprocessing annotation data, splitting data into training and testing sets, creating an evaluation set, extracting features, training a simple classifier, and evaluating its performance.</p> <p>While our example focused on a basic classifier using manually engineered features, the underlying principles and workflow apply to more complex models and tasks. You can adapt and extend these techniques to explore different feature extraction methods, experiment with various machine learning algorithms (including deep learning), and tackle diverse audio analysis challenges.</p>"},{"location":"user_guide/guides/import/","title":"Import Data to Whombat","text":"<p>Whombat's import functionality is a key part of its ability to integrate with machine learning workflows. It offers several advantages:</p> <ul> <li>Collaboration and Sharing: Easily share your work with others who have Whombat installed.</li> <li>Leveraging Existing Data: Jumpstart your annotation projects by importing existing data.</li> <li>Closing the Loop with Machine Learning: Import results and insights from your model development process back into Whombat.</li> </ul> <p>This guide will provide a practical example of how to import data into Whombat.</p>"},{"location":"user_guide/guides/import/#getting-started-with-example-data","title":"Getting Started with Example Data","text":"<p>To help you explore Whombat's import functionality and see it in action, we've prepared a set of example data. This data includes:</p> <ul> <li>Bat Echolocation Recordings: 10 audio recordings of bat echolocation calls sourced from Xeno-canto, a comprehensive online database of bird and bat sounds.</li> <li>Example Dataset: A pre-defined dataset containing metadata for these recordings.</li> <li>Example Annotation Project: An annotation project based on the example dataset, complete with annotations of bat calls.</li> <li>Example Evaluation Set: An evaluation set derived from the annotation project, designed for assessing model performance.</li> <li>Example Model Run: A set of model predictions on the evaluation set, showcasing how model outputs can be integrated into Whombat.</li> </ul> <p>By importing this example data, you can familiarize yourself with Whombat's interface and features without needing to create annotations from scratch.</p>"},{"location":"user_guide/guides/import/#downloading-the-example-data","title":"Downloading the Example Data","text":"<ol> <li>Visit the Whombat Repository: Navigate to the Whombat repository on GitHub: https://github.com/mbsantiago/whombat</li> <li>Download the Repository: Click the green \"Code\" button and select \"Download ZIP\" from the dropdown menu.       This will download the entire repository as a ZIP file to your computer.</li> <li>Extract the ZIP File: Once the download is complete, extract the contents of the ZIP file.</li> <li>Locate the Example Data: Inside the extracted folder, you'll find a directory named <code>example_data</code>.       This folder contains all the example data files, including the audio recordings and JSON files for the dataset, annotation project, evaluation set, and model run.</li> </ol> <p>Here's a preview of the files you'll find in the example_data folder:</p> <pre><code>.\n\u251c\u2500\u2500 audio\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 LICENSE\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC820302-Noctilio_leporinus-2013.01.08-CL00088_A_15.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC821237-Centronycteris_centralis-2013.01.18-CL00331_B_10.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC821730-Rhynchonycteris_naso-2016.02.17-CL01709.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC821988-Lasiurus_blossevillii-2016.02.17-CL01712.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC823144-Desmodus_rotundus-2013.01.16-CL00262_A_30.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC824040-Carollia_castanea-2013.01.17-CL00312_A_15.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC826196-Carollia_perspicillata-2013.02.15-CL00827.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC826198-Carollia_sowelli-2013.02.15-CL00829.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 XC826219-Pteronotus_mesoamericanus-2013.02.15-CL00816.wav\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 XC882096-Diclidurus-albus_ind2.wav\n\u251c\u2500\u2500 example_annotation_project.json\n\u251c\u2500\u2500 example_dataset.json\n\u251c\u2500\u2500 example_evaluation_set.json\n\u2514\u2500\u2500 example_model_run.json\n</code></pre>"},{"location":"user_guide/guides/import/#import-the-dataset","title":"Import the dataset","text":"<p>Let's begin the import process by bringing in the example dataset, which contains the audio recordings we'll be working with.</p> <ol> <li>Navigate to the Datasets Section: Click on the \"Datasets\" button in the sidebar to access the datasets section.       (Refer to the \"Datasets\" section of the user guide for more detailed navigation instructions.)</li> <li>Initiate the Import: On the Datasets page, you'll find an \"Import\" button in the top right corner.       Click this button to open the import dialog`.</li> <li>Provide the Required Information: The import dialog requires two pieces of information:</li> <li>Dataset File: Select the <code>example_dataset.json</code> file located in the <code>example_data</code> folder.</li> <li>Audio Directory (<code>audio_dir</code>): Specify the full path to the directory containing the example audio recordings.           For instance: <code>/home/user/Downloads/whombat/example_data/audio/</code></li> <li>Import: Once you've provided both the dataset file and the audio directory, click the \"Import\" button to begin the import process.</li> </ol>"},{"location":"user_guide/guides/import/#understanding-the-audio_dir","title":"Understanding the <code>audio_dir</code>","text":"<p>The <code>audio_dir</code> plays an important role in ensuring the portability and consistency of your data. Dataset files store information about your recordings, including their file paths. However, to make datasets easily transferable between different computers, these paths are stored relative to the <code>audio_dir</code>.</p> <p>Think of the <code>audio_dir</code> as the root folder of your audio data. As long as the internal folder structure within the <code>audio_dir</code> matches the relative paths stored in the dataset file, Whombat can successfully locate and import your recordings, regardless of where the <code>audio_dir</code> is located on your machine.</p> <p>Example:</p> <p>Imagine your audio recordings are organized in the following structure:</p> <pre><code>/home/user/example_data\n\u251c\u2500\u2500 other_documents\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 notes.txt\n\u251c\u2500\u2500 project1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 site1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 april\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 recording1.wav\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 june\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 recording2.wav\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 site2\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 july\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 recording3.wav\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 june\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 recording4.wav\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 site3\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 august\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 recording6.wav\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 july\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 recording5.wav\n\u2514\u2500\u2500 project2\n</code></pre> <p>If you have a dataset file that references recordings within <code>project1</code>, and <code>project1</code> is your <code>audio_dir</code>, the entry for <code>recording1.wav</code> in the dataset file would have the relative path <code>site1/april/recording1.wav</code>. When importing this dataset into Whombat, you would specify the full path to the audio_dir: <code>/home/user/example_data/project1/</code> By correctly specifying the <code>audio_dir</code>, you ensure that Whombat can accurately locate and import your recordings.</p>"},{"location":"user_guide/guides/import/#import-the-annotation-project","title":"Import the Annotation Project","text":"<p>Once the dataset is successfully imported, you can proceed with importing the annotation project.</p> <ol> <li>Navigate to the Annotation Projects Section: Click the \"Annotation Projects\" button in the sidebar (second from the top).</li> <li>Open the Import Dialog: On the Annotation Projects page, you'll see a list of existing projects and an \"Import\" button.       Click this button to open the import dialog.</li> <li>Import the Project: In the dialog, select the <code>example_annotation_project.json</code> file and click the \"Import\" button.       The import process may take a few moments, especially for larger projects.       Once the import is complete, you'll be redirected to the annotation project's detail page.</li> </ol> <p>Take some time to explore the imported annotation project. You can now utilize Whombat's exploration tools (accessible via the sidebar) to interact with the annotations and audio data.</p> <p>Import the dataset first</p> <p>It's crucial to import the dataset before importing the annotation project. This ensures that the recordings referenced in the annotation project are already registered in Whombat's database, allowing for a smooth import.</p>"},{"location":"user_guide/guides/import/#import-the-evaluation-set","title":"Import the Evaluation Set","text":"<p>Importing the evaluation set follows a similar procedure:</p> <ol> <li>Navigate to the Evaluations Section: Click the \"Evaluations\" button in the sidebar (third from the top).</li> <li>Open the Import Dialog: On the Evaluations page, click the \"Import\" button to open the import dialog.</li> <li>Import the Evaluation Set: Select the <code>example_evaluation_set.json</code> file and click the \"Import\" button.</li> </ol> <p>Once the import is complete, you can explore the evaluation set and its associated data within Whombat.</p>"},{"location":"user_guide/guides/import/#importing-a-model-run","title":"Importing a Model Run","text":"<p>Whombat allows you to import and evaluate model predictions by importing them as a \"Model Run\" within an Evaluation Set. This enables you to compare your model's predictions against the ground truth annotations in the evaluation set and obtain a detailed performance report.</p> <p>Here's how you can import a Model Run:</p> <ol> <li>Navigate to the Evaluations Section: Click the \"Evaluations\" button in the sidebar (third from the top).</li> <li>Select the Evaluation Set: Choose the evaluation set where you want to import the model run.</li> <li>Access the Model Run Page: You can add a model run in two ways:</li> <li>Click the \"Add Model Run\" button in the model run summary section.</li> <li>Click the \"Model Run\" tab in the top navigation bar.</li> <li>Open the Import Dialog: On the Model Run page, you'll see a list of existing model runs and an \"Import\" button.       Click this button to open the import dialog.</li> <li>Import the Model Run: Select the <code>example_model_run.json</code> file and click the \"Import\" button.</li> </ol> <p>After importing the model run, you can initiate the evaluation process to assess its performance against the evaluation set. Whombat will generate a comprehensive report, including overall scores, detailed metrics, and a breakdown of individual predictions. You can then explore these results to gain insights into your model's strengths and weaknesses.</p>"},{"location":"user_guide/guides/spectrogram_display/","title":"Spectrogram Navigation","text":"<p>Visualizing audio with spectrograms is key to making accurate annotations, and Whombat makes the process easier with tools to tailor the display to your needs.</p> <p>You'll typically only view a segment of the full recording spectrogram to focus on specific parts or to keep things running smoothly.</p> Spectrograms in Chunks <p>Whombat avoids calculating the entire spectrogram at once. Instead, it works in manageable chunks, letting you navigate your audio effortlessly. Only the visible chunks (and a few nearby) are computed, so you can zoom out and watch as Whombat fills in the rest in real time.</p> <p>Whombat offers several ways to move around your spectrogram. We'll cover each method below, with the labeled spectrogram as your guide.</p> <p></p>"},{"location":"user_guide/guides/spectrogram_display/#dragging","title":"Dragging","text":"<p>The simplest way to navigate is by dragging. Just click anywhere on the spectrogram and drag to move around. But remember, this only works if dragging is enabled. Check the toolbar \u2013 if the drag button (C) is active, you're good to go. If not, just click it to activate dragging.</p> <p>You can also use the bar at the bottom (G), which shows a mini version of the whole spectrogram. Click and drag the highlighted section to navigate.</p>"},{"location":"user_guide/guides/spectrogram_display/#scrolling","title":"Scrolling","text":"<p>You can also navigate by scrolling.</p> <p>Just hover your mouse over the spectrogram or the bar at the bottom, then use your scroll wheel:</p> <ul> <li>Scroll up and down: Move vertically through frequencies.     Most likely you won't see any changes as the default behaviour is to display the full frequency range.</li> <li>Ctrl + Scroll: Move horizontally through time.</li> </ul> <p>Zooming is just as easy:</p> <ul> <li>Ctrl + Scroll: Zoom in and out vertically (frequencies).</li> <li>Ctrl + Shift + Scroll: Zoom in and out horizontally (time).</li> </ul> I want to scroll down the page, not the spectrogram <p>When your mouse hovers over the spectrogram or the navigation bar below it, scrolling with your mouse wheel or trackpad will navigate within the spectrogram, not the webpage itself. To scroll up or down the webpage, simply move your mouse cursor away from the spectrogram and navigation bar area, then scroll as usual.</p>"},{"location":"user_guide/guides/spectrogram_display/#seek-to-a-particular-moment","title":"Seek to a Particular Moment","text":"<p>To quickly navigate to a specific point within the audio recording, double-click directly on the spectrogram. This will automatically position the seek bar (red vertical bar) at the chosen point. When you resume playback (e.g., by pressing the spacebar), the audio will start from the newly set location.</p> Use the Player slider to seek <p>While you can also seek by dragging the slider in the audio player, double-clicking on the spectrogram offers a more precise and convenient way to repeatedly listen to specific sections of the recording, especially for those faint, noisy, or ambiguous animal sounds.</p>"},{"location":"user_guide/guides/spectrogram_display/#zooming","title":"Zooming","text":"<p>Whombat offers a handy zoom feature beyond scrolling. To zoom in, simply click the zoom button (D) in the toolbar and then draw a box around the area you'd like to focus on.</p> <p>Need to step back? Click the back button (B) to return to the previous view, or click the home button (A) to reset the zoom completely.</p>"},{"location":"user_guide/guides/spectrogram_display/#spectrogram-settings","title":"Spectrogram Settings","text":"<p>Fine-tune your spectrogram's appearance by clicking the settings button (F) in the toolbar. This opens a handy side menu where you can adjust various parameters.</p> <p>Saving Your Settings</p> <p>Changes you make here only apply to the current spectrogram. To use these settings for all spectrograms, simply click the \"Save\" button at the top. You can also restore the default settings with the \"Reset\" button.</p> <p>You have control over how audio is loaded, and how the spectrogram is calculated and displayed. Here's a breakdown of each setting:</p> Setting Description Resample Choose whether to adjust the audio to a specific sample rate. Helpful if your audio files have different sample rates. Sample Rate The sample rate to use for resampling (only available if \"Resample\" is enabled). Low Pass Filter Use the slider to set a low-pass filter. This can help remove high-frequency noise. A setting of 0 means no filtering is applied. High Pass Filter Use the slider to set a high-pass filter. This can help remove low-frequency noise. Setting this to the maximum value means no filtering is applied. Window Size The length of time (in seconds) used to calculate the spectrogram. Shorter windows give better time resolution but worse frequency resolution, and vice versa. Overlap The percentage of overlap between windows. Higher overlap creates a smoother spectrogram but takes longer to compute. Window Function The mathematical function used in the spectrogram calculation. The default is usually fine, but you can experiment if you'd like. De-noise Enable this to apply a noise reduction algorithm (PCEN) to your spectrogram. Colormap Choose the color scheme for your spectrogram to suit your preferences. Amplitude Scale Select how amplitude (brightness) is displayed: amplitude, power, or decibel (logarithmic scale). Normalize Amplitude Enable this to adjust the amplitude values to a 0-1 range. Useful for making quiet recordings easier to see. Min Amplitude Set the minimum amplitude (in decibels) to display. Values below this are set to the minimum and assigned the corresponding color. This can help reduce noise. Max Amplitude Set the maximum amplitude (in decibels) to display. Values above this are set to the maximum and assigned the corresponding color. This can help highlight specific sounds."},{"location":"user_guide/guides/spectrogram_display/#audio-player","title":"Audio Player","text":"<p>At the top right, you'll find the audio player (E). Here, you can easily control playback, pause at any moment, jump to specific points in the audio, and even adjust the playback speed to match your workflow.</p>"},{"location":"user_guide/guides/spectrogram_display/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<p>Prefer to keep your fingers on the keyboard? Whombat has you covered with a variety of shortcuts to streamline your tasks:</p> Key Combination Action Z Enter zoom mode X Return to drag mode Scroll Move up and down in the frequency domain Shift+Scroll Move left and right in the time domain Ctrl+Scroll Zoom in and out in the frequency domain Ctrl+Shift+Scroll Zoom in and out in the time domain"}]}